// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import Unifieddatalibrary from 'unifieddatalibrary';
import { Response } from 'node-fetch';

const client = new Unifieddatalibrary({
  username: 'My Username',
  password: 'My Password',
  baseURL: process.env['TEST_API_BASE_URL'] ?? 'http://127.0.0.1:4010',
});

describe('resource ionoObservations', () => {
  test('create: only required params', async () => {
    const responsePromise = client.ionoObservations.create([
      {
        classificationMarking: 'classificationMarking',
        dataMode: 'dataMode',
        source: 'source',
        startTimeUTC: '2019-12-27T18:11:19.117Z',
        stationId: 'stationId',
        system: 'system',
        systemInfo: 'systemInfo',
      },
    ]);
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('create: required and optional params', async () => {
    const response = await client.ionoObservations.create([
      {
        classificationMarking: 'classificationMarking',
        dataMode: 'dataMode',
        source: 'source',
        startTimeUTC: '2019-12-27T18:11:19.117Z',
        stationId: 'stationId',
        system: 'system',
        systemInfo: 'systemInfo',
        id: 'id',
        amplitude: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        antennaElementPosition: { data: [[0]], dimensionName: ['string'], dimensions: [0] },
        antennaElementPositionCoordinateSystem: 'antennaElementPositionCoordinateSystem',
        artistFlags: [0],
        azimuth: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        b0: 0,
        b1: 0,
        charAtts: [
          {
            charName: 'charName',
            climateModelInputParams: ['string'],
            climateModelName: 'climateModelName',
            climateModelOptions: ['string'],
            d: 'd',
            lowerBound: 0,
            q: 'q',
            uncertaintyBoundType: 'uncertaintyBoundType',
            upperBound: 0,
            ursiID: 'ursiID',
          },
        ],
        createdAt: '2019-12-27T18:11:19.117Z',
        createdBy: 'createdBy',
        d: 0,
        d1: 0,
        datum: { data: [0], notes: 'notes' },
        deltafoF2: 0,
        densityProfile: {
          iri: {
            b0: 0,
            b1: 0,
            chi: 0,
            d1: 0,
            description: 'description',
            fp1: 0,
            fp2: 0,
            fp30: 0,
            fp3U: 0,
            ha: 0,
            hdx: 0,
            hmD: 0,
            hmE: 0,
            hmF1: 0,
            hmF2: 0,
            hValTop: 0,
            hz: 0,
            nmD: 0,
            nmE: 0,
            nmF1: 0,
            nmF2: 0,
            nValB: 0,
          },
          parabolic: { description: 'description', parabolicItems: [{ f: 0, layer: 'layer', y: 0, z: 0 }] },
          quasiParabolic: {
            description: 'description',
            earthRadius: 0,
            quasiParabolicSegments: [{ a: 0, b: 0, c: 0, error: 0, index: 0, rb: 0, re: 0 }],
          },
          shiftedChebyshev: {
            description: 'description',
            shiftedChebyshevs: [
              { coeffs: [0], error: 0, fstart: 0, fstop: 0, layer: 'layer', n: 0, peakheight: 0, zhalfNm: 0 },
            ],
          },
          topsideExtensionChapmanConst: { chi: 0, description: 'description', hmF2: 0, nmF2: 0, scaleF2: 0 },
          topsideExtensionVaryChap: {
            alpha: 0,
            beta: 0,
            chi: 0,
            description: 'description',
            hmF2: 0,
            ht: 0,
            nmF2: 0,
            scaleF2: 0,
          },
          valleyModelCoeffs: [0],
          valleyModelDescription: 'valleyModelDescription',
        },
        doppler: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        downE: 0,
        downEs: 0,
        downF: 0,
        electronDensity: [0],
        electronDensityUncertainty: [0],
        elevation: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        fbEs: 0,
        fe: 0,
        ff: 0,
        fhprimeF: 0,
        fhprimeF2: 0,
        fmin: 0,
        fminE: 0,
        fminEs: 0,
        fminF: 0,
        fmuf: 0,
        foE: 0,
        foEa: 0,
        foEp: 0,
        foEs: 0,
        foF1: 0,
        foF1p: 0,
        foF2: 0,
        foF2p: 0,
        foP: 0,
        frequency: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        fxE: 0,
        fxF1: 0,
        fxF2: 0,
        fxI: 0,
        height: [0],
        hmE: 0,
        hmF1: 0,
        hmF2: 0,
        hprimeE: 0,
        hprimeEa: 0,
        hprimeEs: 0,
        hprimeF: 0,
        hprimeF1: 0,
        hprimeF2: 0,
        hprimefMUF: 0,
        hprimeP: 0,
        idSensor: 'idSensor',
        luf: 0,
        md: 0,
        mufd: 0,
        neProfileName: 'neProfileName',
        neProfileVersion: 0,
        origin: 'origin',
        origNetwork: 'origNetwork',
        origSensorId: 'origSensorId',
        phase: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        plasmaFrequency: [0],
        plasmaFrequencyUncertainty: [0],
        platformName: 'platformName',
        polarization: {
          data: [[[[[[['string']]]]]]],
          dimensionName: ['string'],
          dimensions: [0],
          notes: 'notes',
        },
        power: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        qe: 0,
        qf: 0,
        range: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        receiveCoordinates: [[0]],
        receiveSensorType: 'receiveSensorType',
        restrictedFrequency: [0],
        restrictedFrequencyNotes: 'restrictedFrequencyNotes',
        scaleHeightF2Peak: 0,
        scalerInfo: {
          confidenceLevel: 0,
          confidenceScore: 0,
          name: 'name',
          organization: 'organization',
          type: 'type',
          version: 0,
        },
        stokes: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes', s: [0] },
        systemNotes: 'systemNotes',
        tec: 0,
        tidAzimuth: [0],
        tidPeriods: [0],
        tidPhaseSpeeds: [0],
        time: { data: [[[[[[[0]]]]]]], dimensionName: ['string'], dimensions: [0], notes: 'notes' },
        traceGeneric: { data: [[[0]]], dimensionName: ['string'], notes: 'notes' },
        transmitCoordinates: [[0]],
        transmitSensorType: 'transmitSensorType',
        typeEs: 'typeEs',
        updatedAt: '2019-12-27T18:11:19.117Z',
        updatedBy: 'updatedBy',
        yE: 0,
        yF1: 0,
        yF2: 0,
        zhalfNm: 0,
        zmE: 0,
      },
    ]);
  });
});
