// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import Unifieddatalibrary, { toFile } from 'unifieddatalibrary';
import { Response } from 'node-fetch';

const client = new Unifieddatalibrary({
  password: 'My Password',
  username: 'My Username',
  baseURL: process.env['TEST_API_BASE_URL'] ?? 'http://127.0.0.1:4010',
});

describe('resource conjunctions', () => {
  test('retrieve', async () => {
    const responsePromise = client.conjunctions.retrieve('id');
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('retrieve: request options instead of params are passed correctly', async () => {
    // ensure the request options are being passed correctly by passing an invalid HTTP method in order to cause an error
    await expect(client.conjunctions.retrieve('id', { path: '/_stainless_unknown_path' })).rejects.toThrow(
      Unifieddatalibrary.NotFoundError,
    );
  });

  test('list: only required params', async () => {
    const responsePromise = client.conjunctions.list({ tca: '2019-12-27T18:11:19.117Z' });
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('list: required and optional params', async () => {
    const response = await client.conjunctions.list({ tca: '2019-12-27T18:11:19.117Z' });
  });

  test('count: only required params', async () => {
    const responsePromise = client.conjunctions.count({ tca: '2019-12-27T18:11:19.117Z' });
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('count: required and optional params', async () => {
    const response = await client.conjunctions.count({ tca: '2019-12-27T18:11:19.117Z' });
  });

  test('createUdl: only required params', async () => {
    const responsePromise = client.conjunctions.createUdl({
      classificationMarking: 'U',
      dataMode: 'TEST',
      source: 'Bluestaq',
      tca: '2021-01-01T01:01:01.123456Z',
    });
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('createUdl: required and optional params', async () => {
    const response = await client.conjunctions.createUdl({
      classificationMarking: 'U',
      dataMode: 'TEST',
      source: 'Bluestaq',
      tca: '2021-01-01T01:01:01.123456Z',
      convertPosVel: true,
      id: 'CONJUNCTION-ID',
      ccir: 'Example notes',
      cdAoM1: 0.016386,
      cdAoM2: 0.016386,
      collisionProb: 0.5,
      collisionProbMethod: 'FOSTER-1992',
      comments: 'Example notes',
      concernNotes: 'Example notes',
      crAoM1: 0.013814,
      crAoM2: 0.013814,
      descriptor: 'sample_descriptor here',
      ephemName1: 'MEME_SPCFT_ABC_2180000_ops_nomnvr_unclassified.oem',
      ephemName2: 'MEME_SPCFT_DEF_2170000_ops_nomnvr_unclassified.txt',
      esId1: 'a2ae2356-6d83-4e4b-896d-ddd1958800fa',
      esId2: '6fa31433-8beb-4b9b-8bf9-326dbd041c3f',
      eventId: 'some.user',
      idStateVector1: 'REF-STATEVECTOR1-ID',
      idStateVector2: 'REF-STATEVECTOR2-ID',
      largeCovWarning: false,
      largeRelPosWarning: false,
      lastObTime1: '2021-01-01T01:01:01.123456Z',
      lastObTime2: '2021-01-01T01:01:01.123456Z',
      messageFor: 'Message for space craft A',
      messageId: 'MESSAGE-ID',
      missDistance: 1.1,
      origIdOnOrbit1: 'ORIGONORBIT1-ID',
      origIdOnOrbit2: 'ORIGONORBIT2-ID',
      origin: 'THIRD_PARTY_DATASOURCE',
      originator: 'some.user',
      ownerContacted: false,
      penetrationLevelSigma: 1.1,
      rawFileURI: 'Example link',
      relPosN: 1.1,
      relPosR: 1.1,
      relPosT: 1.1,
      relVelMag: 1.1,
      relVelN: 1.1,
      relVelR: 1.1,
      relVelT: 1.1,
      satNo1: 1,
      satNo2: 2,
      screenEntryTime: '2021-01-01T01:01:01.123456Z',
      screenExitTime: '2021-01-01T01:01:01.123456Z',
      screenVolumeX: 1.1,
      screenVolumeY: 1.1,
      screenVolumeZ: 1.1,
      smallCovWarning: false,
      smallRelVelWarning: false,
      stateDeptNotified: false,
      stateVector1: {
        classificationMarking: 'U',
        dataMode: 'TEST',
        epoch: '2018-01-01T16:00:00.123456Z',
        source: 'Bluestaq',
        actualODSpan: 3.5,
        algorithm: 'SAMPLE_ALGORITHM',
        alt1ReferenceFrame: 'TEME',
        alt2ReferenceFrame: 'EFG/TDR',
        area: 5.065,
        bDot: 1.23,
        cmOffset: 1.23,
        cov: [1.1, 2.4, 3.8, 4.2, 5.5, 6],
        covMethod: 'CALCULATED',
        covReferenceFrame: 'J2000',
        descriptor: 'descriptor',
        dragArea: 4.739,
        dragCoeff: 0.0224391269775,
        dragModel: 'JAC70',
        edr: 1.23,
        eqCov: [1.1, 2.2],
        errorControl: 1.23,
        fixedStep: true,
        geopotentialModel: 'EGM-96',
        iau1980Terms: 4,
        idOrbitDetermination: '026dd511-8ba5-47d3-9909-836149f87686',
        idStateVector: 'STATEVECTOR-ID',
        integratorMode: 'integratorMode',
        inTrackThrust: true,
        lastObEnd: '2022-11-09T11:20:21.247192Z',
        lastObStart: '2022-11-09T11:20:21.247192Z',
        leapSecondTime: '2021-01-01T01:01:01.123Z',
        lunarSolar: true,
        mass: 164.5,
        obsAvailable: 376,
        obsUsed: 374,
        origin: 'THIRD_PARTY_DATASOURCE',
        origObjectId: 'ORIGOBJECT-ID',
        partials: 'ANALYTIC',
        pedigree: 'CONJUNCTION',
        polarMotionX: 1.23,
        polarMotionY: 1.23,
        posUnc: 0.333399744452,
        rawFileURI: 'rawFileURI',
        recODSpan: 3.5,
        referenceFrame: 'J2000',
        residualsAcc: 99.5,
        revNo: 7205,
        rms: 0.991,
        satNo: 12,
        sigmaPosUVW: [1.23, 4.56],
        sigmaVelUVW: [1.23, 4.56],
        solarFluxAPAvg: 1.23,
        solarFluxF10: 1.23,
        solarFluxF10Avg: 1.23,
        solarRadPress: true,
        solarRadPressCoeff: 0.0244394,
        solidEarthTides: true,
        sourcedData: ['DATA1', 'DATA2'],
        sourcedDataTypes: ['RADAR'],
        srpArea: 4.311,
        stepMode: 'AUTO',
        stepSize: 1.23,
        stepSizeSelection: 'AUTO',
        tags: ['TAG1', 'TAG2'],
        taiUtc: 1.23,
        thrustAccel: 1.23,
        tracksAvail: 163,
        tracksUsed: 163,
        transactionId: 'transactionId',
        uct: true,
        ut1Rate: 1.23,
        ut1Utc: 1.23,
        velUnc: 0.000004,
        xaccel: -2.12621392,
        xpos: -1118.577381,
        xposAlt1: -1145.688502,
        xposAlt2: -1456.915926,
        xvel: -4.25242784,
        xvelAlt1: -4.270832252,
        xvelAlt2: -1.219814294,
        yaccel: 2.645553717,
        ypos: 3026.231084,
        yposAlt1: 3020.729572,
        yposAlt2: -2883.540406,
        yvel: 5.291107434,
        yvelAlt1: 5.27074276,
        yvelAlt2: -6.602080212,
        zaccel: -1.06310696,
        zpos: 6167.831808,
        zposAlt1: 6165.55187,
        zposAlt2: 6165.55187,
        zvel: -3.356493869,
        zvelAlt1: -3.365155181,
        zvelAlt2: -3.365155181,
      },
      stateVector2: {
        classificationMarking: 'U',
        dataMode: 'TEST',
        epoch: '2018-01-01T16:00:00.123456Z',
        source: 'Bluestaq',
        actualODSpan: 3.5,
        algorithm: 'SAMPLE_ALGORITHM',
        alt1ReferenceFrame: 'TEME',
        alt2ReferenceFrame: 'EFG/TDR',
        area: 5.065,
        bDot: 1.23,
        cmOffset: 1.23,
        cov: [1.1, 2.4, 3.8, 4.2, 5.5, 6],
        covMethod: 'CALCULATED',
        covReferenceFrame: 'J2000',
        descriptor: 'descriptor',
        dragArea: 4.739,
        dragCoeff: 0.0224391269775,
        dragModel: 'JAC70',
        edr: 1.23,
        eqCov: [1.1, 2.2],
        errorControl: 1.23,
        fixedStep: true,
        geopotentialModel: 'EGM-96',
        iau1980Terms: 4,
        idOrbitDetermination: '026dd511-8ba5-47d3-9909-836149f87686',
        idStateVector: 'STATEVECTOR-ID',
        integratorMode: 'integratorMode',
        inTrackThrust: true,
        lastObEnd: '2022-11-09T11:20:21.247192Z',
        lastObStart: '2022-11-09T11:20:21.247192Z',
        leapSecondTime: '2021-01-01T01:01:01.123Z',
        lunarSolar: true,
        mass: 164.5,
        obsAvailable: 376,
        obsUsed: 374,
        origin: 'THIRD_PARTY_DATASOURCE',
        origObjectId: 'ORIGOBJECT-ID',
        partials: 'ANALYTIC',
        pedigree: 'CONJUNCTION',
        polarMotionX: 1.23,
        polarMotionY: 1.23,
        posUnc: 0.333399744452,
        rawFileURI: 'rawFileURI',
        recODSpan: 3.5,
        referenceFrame: 'J2000',
        residualsAcc: 99.5,
        revNo: 7205,
        rms: 0.991,
        satNo: 12,
        sigmaPosUVW: [1.23, 4.56],
        sigmaVelUVW: [1.23, 4.56],
        solarFluxAPAvg: 1.23,
        solarFluxF10: 1.23,
        solarFluxF10Avg: 1.23,
        solarRadPress: true,
        solarRadPressCoeff: 0.0244394,
        solidEarthTides: true,
        sourcedData: ['DATA1', 'DATA2'],
        sourcedDataTypes: ['RADAR'],
        srpArea: 4.311,
        stepMode: 'AUTO',
        stepSize: 1.23,
        stepSizeSelection: 'AUTO',
        tags: ['TAG1', 'TAG2'],
        taiUtc: 1.23,
        thrustAccel: 1.23,
        tracksAvail: 163,
        tracksUsed: 163,
        transactionId: 'transactionId',
        uct: true,
        ut1Rate: 1.23,
        ut1Utc: 1.23,
        velUnc: 0.000004,
        xaccel: -2.12621392,
        xpos: -1118.577381,
        xposAlt1: -1145.688502,
        xposAlt2: -1456.915926,
        xvel: -4.25242784,
        xvelAlt1: -4.270832252,
        xvelAlt2: -1.219814294,
        yaccel: 2.645553717,
        ypos: 3026.231084,
        yposAlt1: 3020.729572,
        yposAlt2: -2883.540406,
        yvel: 5.291107434,
        yvelAlt1: 5.27074276,
        yvelAlt2: -6.602080212,
        zaccel: -1.06310696,
        zpos: 6167.831808,
        zposAlt1: 6165.55187,
        zposAlt2: 6165.55187,
        zvel: -3.356493869,
        zvelAlt1: -3.365155181,
        zvelAlt2: -3.365155181,
      },
      tags: ['PROVIDER_TAG1', 'PROVIDER_TAG1'],
      thrustAccel1: 0.033814,
      thrustAccel2: 0.033814,
      transactionId: 'TRANSACTION-ID',
      type: 'CONJUNCTION',
      uvwWarn: false,
      volEntryTime: '2021-01-01T01:02:01.123456Z',
      volExitTime: '2021-01-01T01:02:28.123456Z',
      volShape: 'ELLIPSOID',
    });
  });

  test('createBulk: only required params', async () => {
    const responsePromise = client.conjunctions.createBulk([
      {
        classificationMarking: 'U',
        dataMode: 'TEST',
        source: 'Bluestaq',
        tca: '2021-01-01T01:01:01.123456Z',
      },
    ]);
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('createBulk: required and optional params', async () => {
    const response = await client.conjunctions.createBulk([
      {
        classificationMarking: 'U',
        dataMode: 'TEST',
        source: 'Bluestaq',
        tca: '2021-01-01T01:01:01.123456Z',
        id: 'CONJUNCTION-ID',
        ccir: 'Example notes',
        cdAoM1: 0.016386,
        cdAoM2: 0.016386,
        collisionProb: 0.5,
        collisionProbMethod: 'FOSTER-1992',
        comments: 'Example notes',
        concernNotes: 'Example notes',
        crAoM1: 0.013814,
        crAoM2: 0.013814,
        descriptor: 'sample_descriptor here',
        ephemName1: 'MEME_SPCFT_ABC_2180000_ops_nomnvr_unclassified.oem',
        ephemName2: 'MEME_SPCFT_DEF_2170000_ops_nomnvr_unclassified.txt',
        esId1: 'a2ae2356-6d83-4e4b-896d-ddd1958800fa',
        esId2: '6fa31433-8beb-4b9b-8bf9-326dbd041c3f',
        eventId: 'some.user',
        idStateVector1: 'REF-STATEVECTOR1-ID',
        idStateVector2: 'REF-STATEVECTOR2-ID',
        largeCovWarning: false,
        largeRelPosWarning: false,
        lastObTime1: '2021-01-01T01:01:01.123456Z',
        lastObTime2: '2021-01-01T01:01:01.123456Z',
        messageFor: 'Message for space craft A',
        messageId: 'MESSAGE-ID',
        missDistance: 1.1,
        origIdOnOrbit1: 'ORIGONORBIT1-ID',
        origIdOnOrbit2: 'ORIGONORBIT2-ID',
        origin: 'THIRD_PARTY_DATASOURCE',
        originator: 'some.user',
        ownerContacted: false,
        penetrationLevelSigma: 1.1,
        rawFileURI: 'Example link',
        relPosN: 1.1,
        relPosR: 1.1,
        relPosT: 1.1,
        relVelMag: 1.1,
        relVelN: 1.1,
        relVelR: 1.1,
        relVelT: 1.1,
        satNo1: 1,
        satNo2: 2,
        screenEntryTime: '2021-01-01T01:01:01.123456Z',
        screenExitTime: '2021-01-01T01:01:01.123456Z',
        screenVolumeX: 1.1,
        screenVolumeY: 1.1,
        screenVolumeZ: 1.1,
        smallCovWarning: false,
        smallRelVelWarning: false,
        stateDeptNotified: false,
        stateVector1: {
          classificationMarking: 'U',
          dataMode: 'TEST',
          epoch: '2018-01-01T16:00:00.123456Z',
          source: 'Bluestaq',
          actualODSpan: 3.5,
          algorithm: 'SAMPLE_ALGORITHM',
          alt1ReferenceFrame: 'TEME',
          alt2ReferenceFrame: 'EFG/TDR',
          area: 5.065,
          bDot: 1.23,
          cmOffset: 1.23,
          cov: [1.1, 2.4, 3.8, 4.2, 5.5, 6],
          covMethod: 'CALCULATED',
          covReferenceFrame: 'J2000',
          descriptor: 'descriptor',
          dragArea: 4.739,
          dragCoeff: 0.0224391269775,
          dragModel: 'JAC70',
          edr: 1.23,
          eqCov: [1.1, 2.2],
          errorControl: 1.23,
          fixedStep: true,
          geopotentialModel: 'EGM-96',
          iau1980Terms: 4,
          idOrbitDetermination: '026dd511-8ba5-47d3-9909-836149f87686',
          idStateVector: 'STATEVECTOR-ID',
          integratorMode: 'integratorMode',
          inTrackThrust: true,
          lastObEnd: '2022-11-09T11:20:21.247192Z',
          lastObStart: '2022-11-09T11:20:21.247192Z',
          leapSecondTime: '2021-01-01T01:01:01.123Z',
          lunarSolar: true,
          mass: 164.5,
          obsAvailable: 376,
          obsUsed: 374,
          origin: 'THIRD_PARTY_DATASOURCE',
          origObjectId: 'ORIGOBJECT-ID',
          partials: 'ANALYTIC',
          pedigree: 'CONJUNCTION',
          polarMotionX: 1.23,
          polarMotionY: 1.23,
          posUnc: 0.333399744452,
          rawFileURI: 'rawFileURI',
          recODSpan: 3.5,
          referenceFrame: 'J2000',
          residualsAcc: 99.5,
          revNo: 7205,
          rms: 0.991,
          satNo: 12,
          sigmaPosUVW: [1.23, 4.56],
          sigmaVelUVW: [1.23, 4.56],
          solarFluxAPAvg: 1.23,
          solarFluxF10: 1.23,
          solarFluxF10Avg: 1.23,
          solarRadPress: true,
          solarRadPressCoeff: 0.0244394,
          solidEarthTides: true,
          sourcedData: ['DATA1', 'DATA2'],
          sourcedDataTypes: ['RADAR'],
          srpArea: 4.311,
          stepMode: 'AUTO',
          stepSize: 1.23,
          stepSizeSelection: 'AUTO',
          tags: ['TAG1', 'TAG2'],
          taiUtc: 1.23,
          thrustAccel: 1.23,
          tracksAvail: 163,
          tracksUsed: 163,
          transactionId: 'transactionId',
          uct: true,
          ut1Rate: 1.23,
          ut1Utc: 1.23,
          velUnc: 0.000004,
          xaccel: -2.12621392,
          xpos: -1118.577381,
          xposAlt1: -1145.688502,
          xposAlt2: -1456.915926,
          xvel: -4.25242784,
          xvelAlt1: -4.270832252,
          xvelAlt2: -1.219814294,
          yaccel: 2.645553717,
          ypos: 3026.231084,
          yposAlt1: 3020.729572,
          yposAlt2: -2883.540406,
          yvel: 5.291107434,
          yvelAlt1: 5.27074276,
          yvelAlt2: -6.602080212,
          zaccel: -1.06310696,
          zpos: 6167.831808,
          zposAlt1: 6165.55187,
          zposAlt2: 6165.55187,
          zvel: -3.356493869,
          zvelAlt1: -3.365155181,
          zvelAlt2: -3.365155181,
        },
        stateVector2: {
          classificationMarking: 'U',
          dataMode: 'TEST',
          epoch: '2018-01-01T16:00:00.123456Z',
          source: 'Bluestaq',
          actualODSpan: 3.5,
          algorithm: 'SAMPLE_ALGORITHM',
          alt1ReferenceFrame: 'TEME',
          alt2ReferenceFrame: 'EFG/TDR',
          area: 5.065,
          bDot: 1.23,
          cmOffset: 1.23,
          cov: [1.1, 2.4, 3.8, 4.2, 5.5, 6],
          covMethod: 'CALCULATED',
          covReferenceFrame: 'J2000',
          descriptor: 'descriptor',
          dragArea: 4.739,
          dragCoeff: 0.0224391269775,
          dragModel: 'JAC70',
          edr: 1.23,
          eqCov: [1.1, 2.2],
          errorControl: 1.23,
          fixedStep: true,
          geopotentialModel: 'EGM-96',
          iau1980Terms: 4,
          idOrbitDetermination: '026dd511-8ba5-47d3-9909-836149f87686',
          idStateVector: 'STATEVECTOR-ID',
          integratorMode: 'integratorMode',
          inTrackThrust: true,
          lastObEnd: '2022-11-09T11:20:21.247192Z',
          lastObStart: '2022-11-09T11:20:21.247192Z',
          leapSecondTime: '2021-01-01T01:01:01.123Z',
          lunarSolar: true,
          mass: 164.5,
          obsAvailable: 376,
          obsUsed: 374,
          origin: 'THIRD_PARTY_DATASOURCE',
          origObjectId: 'ORIGOBJECT-ID',
          partials: 'ANALYTIC',
          pedigree: 'CONJUNCTION',
          polarMotionX: 1.23,
          polarMotionY: 1.23,
          posUnc: 0.333399744452,
          rawFileURI: 'rawFileURI',
          recODSpan: 3.5,
          referenceFrame: 'J2000',
          residualsAcc: 99.5,
          revNo: 7205,
          rms: 0.991,
          satNo: 12,
          sigmaPosUVW: [1.23, 4.56],
          sigmaVelUVW: [1.23, 4.56],
          solarFluxAPAvg: 1.23,
          solarFluxF10: 1.23,
          solarFluxF10Avg: 1.23,
          solarRadPress: true,
          solarRadPressCoeff: 0.0244394,
          solidEarthTides: true,
          sourcedData: ['DATA1', 'DATA2'],
          sourcedDataTypes: ['RADAR'],
          srpArea: 4.311,
          stepMode: 'AUTO',
          stepSize: 1.23,
          stepSizeSelection: 'AUTO',
          tags: ['TAG1', 'TAG2'],
          taiUtc: 1.23,
          thrustAccel: 1.23,
          tracksAvail: 163,
          tracksUsed: 163,
          transactionId: 'transactionId',
          uct: true,
          ut1Rate: 1.23,
          ut1Utc: 1.23,
          velUnc: 0.000004,
          xaccel: -2.12621392,
          xpos: -1118.577381,
          xposAlt1: -1145.688502,
          xposAlt2: -1456.915926,
          xvel: -4.25242784,
          xvelAlt1: -4.270832252,
          xvelAlt2: -1.219814294,
          yaccel: 2.645553717,
          ypos: 3026.231084,
          yposAlt1: 3020.729572,
          yposAlt2: -2883.540406,
          yvel: 5.291107434,
          yvelAlt1: 5.27074276,
          yvelAlt2: -6.602080212,
          zaccel: -1.06310696,
          zpos: 6167.831808,
          zposAlt1: 6165.55187,
          zposAlt2: 6165.55187,
          zvel: -3.356493869,
          zvelAlt1: -3.365155181,
          zvelAlt2: -3.365155181,
        },
        tags: ['PROVIDER_TAG1', 'PROVIDER_TAG1'],
        thrustAccel1: 0.033814,
        thrustAccel2: 0.033814,
        transactionId: 'TRANSACTION-ID',
        type: 'CONJUNCTION',
        uvwWarn: false,
        volEntryTime: '2021-01-01T01:02:01.123456Z',
        volExitTime: '2021-01-01T01:02:28.123456Z',
        volShape: 'ELLIPSOID',
      },
    ]);
  });

  test('getHistory: only required params', async () => {
    const responsePromise = client.conjunctions.getHistory({ tca: '2019-12-27T18:11:19.117Z' });
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('getHistory: required and optional params', async () => {
    const response = await client.conjunctions.getHistory({
      tca: '2019-12-27T18:11:19.117Z',
      columns: 'columns',
    });
  });

  test('queryhelp', async () => {
    const responsePromise = client.conjunctions.queryhelp();
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('queryhelp: request options instead of params are passed correctly', async () => {
    // ensure the request options are being passed correctly by passing an invalid HTTP method in order to cause an error
    await expect(client.conjunctions.queryhelp({ path: '/_stainless_unknown_path' })).rejects.toThrow(
      Unifieddatalibrary.NotFoundError,
    );
  });

  test('tuple: only required params', async () => {
    const responsePromise = client.conjunctions.tuple({
      columns: 'columns',
      tca: '2019-12-27T18:11:19.117Z',
    });
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('tuple: required and optional params', async () => {
    const response = await client.conjunctions.tuple({ columns: 'columns', tca: '2019-12-27T18:11:19.117Z' });
  });

  test('unvalidatedPublish: only required params', async () => {
    const responsePromise = client.conjunctions.unvalidatedPublish([
      {
        classificationMarking: 'U',
        dataMode: 'TEST',
        source: 'Bluestaq',
        tca: '2021-01-01T01:01:01.123456Z',
      },
    ]);
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('unvalidatedPublish: required and optional params', async () => {
    const response = await client.conjunctions.unvalidatedPublish([
      {
        classificationMarking: 'U',
        dataMode: 'TEST',
        source: 'Bluestaq',
        tca: '2021-01-01T01:01:01.123456Z',
        id: 'CONJUNCTION-ID',
        ccir: 'Example notes',
        cdAoM1: 0.016386,
        cdAoM2: 0.016386,
        collisionProb: 0.5,
        collisionProbMethod: 'FOSTER-1992',
        comments: 'Example notes',
        concernNotes: 'Example notes',
        crAoM1: 0.013814,
        crAoM2: 0.013814,
        descriptor: 'sample_descriptor here',
        ephemName1: 'MEME_SPCFT_ABC_2180000_ops_nomnvr_unclassified.oem',
        ephemName2: 'MEME_SPCFT_DEF_2170000_ops_nomnvr_unclassified.txt',
        esId1: 'a2ae2356-6d83-4e4b-896d-ddd1958800fa',
        esId2: '6fa31433-8beb-4b9b-8bf9-326dbd041c3f',
        eventId: 'some.user',
        idStateVector1: 'REF-STATEVECTOR1-ID',
        idStateVector2: 'REF-STATEVECTOR2-ID',
        largeCovWarning: false,
        largeRelPosWarning: false,
        lastObTime1: '2021-01-01T01:01:01.123456Z',
        lastObTime2: '2021-01-01T01:01:01.123456Z',
        messageFor: 'Message for space craft A',
        messageId: 'MESSAGE-ID',
        missDistance: 1.1,
        origIdOnOrbit1: 'ORIGONORBIT1-ID',
        origIdOnOrbit2: 'ORIGONORBIT2-ID',
        origin: 'THIRD_PARTY_DATASOURCE',
        originator: 'some.user',
        ownerContacted: false,
        penetrationLevelSigma: 1.1,
        rawFileURI: 'Example link',
        relPosN: 1.1,
        relPosR: 1.1,
        relPosT: 1.1,
        relVelMag: 1.1,
        relVelN: 1.1,
        relVelR: 1.1,
        relVelT: 1.1,
        satNo1: 1,
        satNo2: 2,
        screenEntryTime: '2021-01-01T01:01:01.123456Z',
        screenExitTime: '2021-01-01T01:01:01.123456Z',
        screenVolumeX: 1.1,
        screenVolumeY: 1.1,
        screenVolumeZ: 1.1,
        smallCovWarning: false,
        smallRelVelWarning: false,
        stateDeptNotified: false,
        stateVector1: {
          classificationMarking: 'U',
          dataMode: 'TEST',
          epoch: '2018-01-01T16:00:00.123456Z',
          source: 'Bluestaq',
          actualODSpan: 3.5,
          algorithm: 'SAMPLE_ALGORITHM',
          alt1ReferenceFrame: 'TEME',
          alt2ReferenceFrame: 'EFG/TDR',
          area: 5.065,
          bDot: 1.23,
          cmOffset: 1.23,
          cov: [1.1, 2.4, 3.8, 4.2, 5.5, 6],
          covMethod: 'CALCULATED',
          covReferenceFrame: 'J2000',
          descriptor: 'descriptor',
          dragArea: 4.739,
          dragCoeff: 0.0224391269775,
          dragModel: 'JAC70',
          edr: 1.23,
          eqCov: [1.1, 2.2],
          errorControl: 1.23,
          fixedStep: true,
          geopotentialModel: 'EGM-96',
          iau1980Terms: 4,
          idOrbitDetermination: '026dd511-8ba5-47d3-9909-836149f87686',
          idStateVector: 'STATEVECTOR-ID',
          integratorMode: 'integratorMode',
          inTrackThrust: true,
          lastObEnd: '2022-11-09T11:20:21.247192Z',
          lastObStart: '2022-11-09T11:20:21.247192Z',
          leapSecondTime: '2021-01-01T01:01:01.123Z',
          lunarSolar: true,
          mass: 164.5,
          obsAvailable: 376,
          obsUsed: 374,
          origin: 'THIRD_PARTY_DATASOURCE',
          origObjectId: 'ORIGOBJECT-ID',
          partials: 'ANALYTIC',
          pedigree: 'CONJUNCTION',
          polarMotionX: 1.23,
          polarMotionY: 1.23,
          posUnc: 0.333399744452,
          rawFileURI: 'rawFileURI',
          recODSpan: 3.5,
          referenceFrame: 'J2000',
          residualsAcc: 99.5,
          revNo: 7205,
          rms: 0.991,
          satNo: 12,
          sigmaPosUVW: [1.23, 4.56],
          sigmaVelUVW: [1.23, 4.56],
          solarFluxAPAvg: 1.23,
          solarFluxF10: 1.23,
          solarFluxF10Avg: 1.23,
          solarRadPress: true,
          solarRadPressCoeff: 0.0244394,
          solidEarthTides: true,
          sourcedData: ['DATA1', 'DATA2'],
          sourcedDataTypes: ['RADAR'],
          srpArea: 4.311,
          stepMode: 'AUTO',
          stepSize: 1.23,
          stepSizeSelection: 'AUTO',
          tags: ['TAG1', 'TAG2'],
          taiUtc: 1.23,
          thrustAccel: 1.23,
          tracksAvail: 163,
          tracksUsed: 163,
          transactionId: 'transactionId',
          uct: true,
          ut1Rate: 1.23,
          ut1Utc: 1.23,
          velUnc: 0.000004,
          xaccel: -2.12621392,
          xpos: -1118.577381,
          xposAlt1: -1145.688502,
          xposAlt2: -1456.915926,
          xvel: -4.25242784,
          xvelAlt1: -4.270832252,
          xvelAlt2: -1.219814294,
          yaccel: 2.645553717,
          ypos: 3026.231084,
          yposAlt1: 3020.729572,
          yposAlt2: -2883.540406,
          yvel: 5.291107434,
          yvelAlt1: 5.27074276,
          yvelAlt2: -6.602080212,
          zaccel: -1.06310696,
          zpos: 6167.831808,
          zposAlt1: 6165.55187,
          zposAlt2: 6165.55187,
          zvel: -3.356493869,
          zvelAlt1: -3.365155181,
          zvelAlt2: -3.365155181,
        },
        stateVector2: {
          classificationMarking: 'U',
          dataMode: 'TEST',
          epoch: '2018-01-01T16:00:00.123456Z',
          source: 'Bluestaq',
          actualODSpan: 3.5,
          algorithm: 'SAMPLE_ALGORITHM',
          alt1ReferenceFrame: 'TEME',
          alt2ReferenceFrame: 'EFG/TDR',
          area: 5.065,
          bDot: 1.23,
          cmOffset: 1.23,
          cov: [1.1, 2.4, 3.8, 4.2, 5.5, 6],
          covMethod: 'CALCULATED',
          covReferenceFrame: 'J2000',
          descriptor: 'descriptor',
          dragArea: 4.739,
          dragCoeff: 0.0224391269775,
          dragModel: 'JAC70',
          edr: 1.23,
          eqCov: [1.1, 2.2],
          errorControl: 1.23,
          fixedStep: true,
          geopotentialModel: 'EGM-96',
          iau1980Terms: 4,
          idOrbitDetermination: '026dd511-8ba5-47d3-9909-836149f87686',
          idStateVector: 'STATEVECTOR-ID',
          integratorMode: 'integratorMode',
          inTrackThrust: true,
          lastObEnd: '2022-11-09T11:20:21.247192Z',
          lastObStart: '2022-11-09T11:20:21.247192Z',
          leapSecondTime: '2021-01-01T01:01:01.123Z',
          lunarSolar: true,
          mass: 164.5,
          obsAvailable: 376,
          obsUsed: 374,
          origin: 'THIRD_PARTY_DATASOURCE',
          origObjectId: 'ORIGOBJECT-ID',
          partials: 'ANALYTIC',
          pedigree: 'CONJUNCTION',
          polarMotionX: 1.23,
          polarMotionY: 1.23,
          posUnc: 0.333399744452,
          rawFileURI: 'rawFileURI',
          recODSpan: 3.5,
          referenceFrame: 'J2000',
          residualsAcc: 99.5,
          revNo: 7205,
          rms: 0.991,
          satNo: 12,
          sigmaPosUVW: [1.23, 4.56],
          sigmaVelUVW: [1.23, 4.56],
          solarFluxAPAvg: 1.23,
          solarFluxF10: 1.23,
          solarFluxF10Avg: 1.23,
          solarRadPress: true,
          solarRadPressCoeff: 0.0244394,
          solidEarthTides: true,
          sourcedData: ['DATA1', 'DATA2'],
          sourcedDataTypes: ['RADAR'],
          srpArea: 4.311,
          stepMode: 'AUTO',
          stepSize: 1.23,
          stepSizeSelection: 'AUTO',
          tags: ['TAG1', 'TAG2'],
          taiUtc: 1.23,
          thrustAccel: 1.23,
          tracksAvail: 163,
          tracksUsed: 163,
          transactionId: 'transactionId',
          uct: true,
          ut1Rate: 1.23,
          ut1Utc: 1.23,
          velUnc: 0.000004,
          xaccel: -2.12621392,
          xpos: -1118.577381,
          xposAlt1: -1145.688502,
          xposAlt2: -1456.915926,
          xvel: -4.25242784,
          xvelAlt1: -4.270832252,
          xvelAlt2: -1.219814294,
          yaccel: 2.645553717,
          ypos: 3026.231084,
          yposAlt1: 3020.729572,
          yposAlt2: -2883.540406,
          yvel: 5.291107434,
          yvelAlt1: 5.27074276,
          yvelAlt2: -6.602080212,
          zaccel: -1.06310696,
          zpos: 6167.831808,
          zposAlt1: 6165.55187,
          zposAlt2: 6165.55187,
          zvel: -3.356493869,
          zvelAlt1: -3.365155181,
          zvelAlt2: -3.365155181,
        },
        tags: ['PROVIDER_TAG1', 'PROVIDER_TAG1'],
        thrustAccel1: 0.033814,
        thrustAccel2: 0.033814,
        transactionId: 'TRANSACTION-ID',
        type: 'CONJUNCTION',
        uvwWarn: false,
        volEntryTime: '2021-01-01T01:02:01.123456Z',
        volExitTime: '2021-01-01T01:02:28.123456Z',
        volShape: 'ELLIPSOID',
      },
    ]);
  });

  test('uploadConjunctionDataMessage: only required params', async () => {
    const responsePromise = client.conjunctions.uploadConjunctionDataMessage({
      classification: 'classification',
      dataMode: 'REAL',
      filename: 'filename',
      source: 'source',
      body: await toFile(Buffer.from('# my file contents'), 'README.md'),
    });
    const rawResponse = await responsePromise.asResponse();
    expect(rawResponse).toBeInstanceOf(Response);
    const response = await responsePromise;
    expect(response).not.toBeInstanceOf(Response);
    const dataAndResponse = await responsePromise.withResponse();
    expect(dataAndResponse.data).toBe(response);
    expect(dataAndResponse.response).toBe(rawResponse);
  });

  test('uploadConjunctionDataMessage: required and optional params', async () => {
    const response = await client.conjunctions.uploadConjunctionDataMessage({
      classification: 'classification',
      dataMode: 'REAL',
      filename: 'filename',
      source: 'source',
      body: await toFile(Buffer.from('# my file contents'), 'README.md'),
      tags: 'tags',
    });
  });
});
