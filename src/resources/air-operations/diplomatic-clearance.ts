// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../core/resource';
import { APIPromise } from '../../core/api-promise';
import { OffsetPage } from '../../core/pagination';
import { buildHeaders } from '../../internal/headers';
import { RequestOptions } from '../../internal/request-options';

export class DiplomaticClearance extends APIResource {
  /**
   * Service operation to take multiple Diplomatic Clearance records as a POST body
   * and ingest into the database. This operation is intended to be used for
   * automated feeds into UDL. A specific role is required to perform this service
   * operation. Please contact the UDL team for assistance.
   */
  unvalidatedPublish(
    params: DiplomaticClearanceUnvalidatedPublishParams,
    options?: RequestOptions,
  ): APIPromise<void> {
    const { body } = params;
    return this._client.post('/filedrop/udl-diplomaticclearance', {
      body: body,
      ...options,
      headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),
    });
  }
}

export type DiplomaticclearanceAbridgedsOffsetPage = OffsetPage<DiplomaticclearanceAbridged>;

export type DiplomaticclearanceFullsOffsetPage = OffsetPage<DiplomaticclearanceFull>;

/**
 * A diplomatic clearance is an authorization for an aircraft to traverse or land
 * within a specified country.
 */
export interface DiplomaticclearanceAbridged {
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   */
  classificationMarking: string;

  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   *
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
   * may include both real and simulated data.
   *
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects,
   * events, and analysis.
   *
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
   * datasets.
   *
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
   * requirements, and for validating technical, functional, and performance
   * characteristics.
   */
  dataMode: 'REAL' | 'TEST' | 'SIMULATED' | 'EXERCISE';

  /**
   * The First Departure Date (FDD) the mission is scheduled for departure, in ISO
   * 8601 UTC format with millisecond precision.
   */
  firstDepDate: string;

  /**
   * Unique identifier of the Mission associated with this diplomatic clearance
   * record.
   */
  idMission: string;

  /**
   * Source of the data.
   */
  source: string;

  /**
   * Unique identifier of the record, auto-generated by the system if not provided on
   * create operations.
   */
  id?: string;

  /**
   * The Aircraft and Personnel Automated Clearance System (APACS) system identifier
   * used to process and approve this clearance request.
   */
  apacsId?: string;

  /**
   * Time the row was created in the database, auto-populated by the system.
   */
  createdAt?: string;

  /**
   * Application user who created the row in the database, auto-populated by the
   * system.
   */
  createdBy?: string;

  /**
   * Collection of diplomatic clearance details.
   */
  diplomaticClearanceDetails?: Array<DiplomaticclearanceAbridged.DiplomaticClearanceDetail>;

  /**
   * Collection of diplomatic clearance remarks.
   */
  diplomaticClearanceRemarks?: Array<DiplomaticclearanceAbridged.DiplomaticClearanceRemark>;

  /**
   * Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft
   * clearance requests.
   */
  dipWorksheetName?: string;

  /**
   * Suspense date for the diplomatic clearance worksheet to be worked, in ISO 8601
   * UTC format with millisecond precision.
   */
  docDeadline?: string;

  /**
   * Optional diplomatic clearance worksheet ID from external systems. This field has
   * no meaning within UDL and is provided as a convenience for systems that require
   * tracking of an internal system generated ID.
   */
  externalWorksheetId?: string;

  /**
   * Originating system or organization which produced the data, if different from
   * the source. The origin may be different than the source if the source was a
   * mediating system which forwarded the data on behalf of the origin system. If
   * null, the source may be assumed to be the origin.
   */
  origin?: string;

  /**
   * The originating source network on which this record was created, auto-populated
   * by the system.
   */
  origNetwork?: string;

  /**
   * The source data library from which this record was received. This could be a
   * remote or tactical UDL or another data library. If null, the record should be
   * assumed to have originated from the primary Enterprise UDL.
   */
  sourceDL?: string;

  /**
   * Time the row was updated in the database, auto-populated by the system.
   */
  updatedAt?: string;

  /**
   * Application user who updated the row in the database, auto-populated by the
   * system.
   */
  updatedBy?: string;
}

export namespace DiplomaticclearanceAbridged {
  /**
   * Collection of diplomatic clearance details.
   */
  export interface DiplomaticClearanceDetail {
    /**
     * The type of action the aircraft can take with this diplomatic clearance (e.g. O
     * for Overfly, L for Land, etc.).
     */
    action?: string;

    /**
     * Specifies an alternate country code if the data provider code is not part of an
     * official Country Code standard such as ISO-3166 or FIPS. This field will be set
     * to the value provided by the source and should be used for all Queries
     * specifying a Country Code.
     */
    altCountryCode?: string;

    /**
     * Identifier of this diplomatic clearance issued by the host country.
     */
    clearanceId?: string;

    /**
     * Remarks concerning this diplomatic clearance.
     */
    clearanceRemark?: string;

    /**
     * The call sign of the sortie cleared with this diplomatic clearance.
     */
    clearedCallSign?: string;

    /**
     * The DoD Standard Country Code designator for the country issuing the diplomatic
     * clearance. This field will be set to "OTHR" if the source value does not match a
     * UDL Country code value (ISO-3166-ALPHA-2).
     */
    countryCode?: string;

    /**
     * Name of the country issuing this diplomatic clearance.
     */
    countryName?: string;

    /**
     * Earliest time the aircraft may enter the country, in ISO 8601 UTC format with
     * millisecond precision.
     */
    entryNET?: string;

    /**
     * The navigation point name where the aircraft must enter the country.
     */
    entryPoint?: string;

    /**
     * Latest time the aircraft may exit the country, in ISO 8601 UTC format with
     * millisecond precision.
     */
    exitNLT?: string;

    /**
     * The navigation point name where the aircraft must exit the country.
     */
    exitPoint?: string;

    /**
     * Optional clearance ID from external systems. This field has no meaning within
     * UDL and is provided as a convenience for systems that require tracking of an
     * internal system generated ID.
     */
    externalClearanceId?: string;

    /**
     * Unique identifier of the Aircraft Sortie associated with this diplomatic
     * clearance record.
     */
    idSortie?: string;

    /**
     * Identifies the Itinerary point of a sortie where an air event occurs.
     */
    legNum?: number;

    /**
     * The diplomatic clearance profile name used within clearance management systems.
     */
    profile?: string;

    /**
     * Flag indicating whether the clearance request requires ICAO specific
     * information.
     */
    reqICAO?: boolean;

    /**
     * Flag indicating whether entry/exit points are required for clearances.
     */
    reqPoint?: boolean;

    /**
     * The 1801 fileable route of flight string associated with this diplomatic
     * clearance. The route of flight string contains route designators, significant
     * points, change of speed/altitude, change of flight rules, and cruise climbs.
     */
    routeString?: string;

    /**
     * The placement of this diplomatic clearance within a sequence of clearances used
     * on a sortie. For example, a sequence value of 3 means that it is the third
     * diplomatic clearance the aircraft will use.
     */
    sequenceNum?: number;

    /**
     * Indicates the current status of the diplomatic clearance request.
     */
    status?: string;

    /**
     * Description of when this diplomatic clearance is valid.
     */
    validDesc?: string;

    /**
     * The end time of the validity of this diplomatic clearance, in ISO 8601 UTC
     * format with millisecond precision.
     */
    validEndTime?: string;

    /**
     * The start time of the validity of this diplomatic clearance, in ISO 8601 UTC
     * format with millisecond precision.
     */
    validStartTime?: string;

    /**
     * Remarks concerning the valid diplomatic clearance window.
     */
    windowRemark?: string;
  }

  /**
   * Collection of diplomatic clearance remarks.
   */
  export interface DiplomaticClearanceRemark {
    /**
     * Date the remark was published, in ISO 8601 UTC format, with millisecond
     * precision.
     */
    date?: string;

    /**
     * Global Decision Support System (GDSS) remark identifier.
     */
    gdssRemarkId?: string;

    /**
     * Text of the remark.
     */
    text?: string;

    /**
     * User who published the remark.
     */
    user?: string;
  }
}

/**
 * A diplomatic clearance is an authorization for an aircraft to traverse or land
 * within a specified country.
 */
export interface DiplomaticclearanceFull {
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   */
  classificationMarking: string;

  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   *
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
   * may include both real and simulated data.
   *
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects,
   * events, and analysis.
   *
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
   * datasets.
   *
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
   * requirements, and for validating technical, functional, and performance
   * characteristics.
   */
  dataMode: 'REAL' | 'TEST' | 'SIMULATED' | 'EXERCISE';

  /**
   * The First Departure Date (FDD) the mission is scheduled for departure, in ISO
   * 8601 UTC format with millisecond precision.
   */
  firstDepDate: string;

  /**
   * Unique identifier of the Mission associated with this diplomatic clearance
   * record.
   */
  idMission: string;

  /**
   * Source of the data.
   */
  source: string;

  /**
   * Unique identifier of the record, auto-generated by the system if not provided on
   * create operations.
   */
  id?: string;

  /**
   * The Aircraft and Personnel Automated Clearance System (APACS) system identifier
   * used to process and approve this clearance request.
   */
  apacsId?: string;

  /**
   * Time the row was created in the database, auto-populated by the system.
   */
  createdAt?: string;

  /**
   * Application user who created the row in the database, auto-populated by the
   * system.
   */
  createdBy?: string;

  /**
   * Collection of diplomatic clearance details.
   */
  diplomaticClearanceDetails?: Array<DiplomaticclearanceFull.DiplomaticClearanceDetail>;

  /**
   * Collection of diplomatic clearance remarks.
   */
  diplomaticClearanceRemarks?: Array<DiplomaticclearanceFull.DiplomaticClearanceRemark>;

  /**
   * Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft
   * clearance requests.
   */
  dipWorksheetName?: string;

  /**
   * Suspense date for the diplomatic clearance worksheet to be worked, in ISO 8601
   * UTC format with millisecond precision.
   */
  docDeadline?: string;

  /**
   * Optional diplomatic clearance worksheet ID from external systems. This field has
   * no meaning within UDL and is provided as a convenience for systems that require
   * tracking of an internal system generated ID.
   */
  externalWorksheetId?: string;

  /**
   * Originating system or organization which produced the data, if different from
   * the source. The origin may be different than the source if the source was a
   * mediating system which forwarded the data on behalf of the origin system. If
   * null, the source may be assumed to be the origin.
   */
  origin?: string;

  /**
   * The originating source network on which this record was created, auto-populated
   * by the system.
   */
  origNetwork?: string;

  /**
   * The source data library from which this record was received. This could be a
   * remote or tactical UDL or another data library. If null, the record should be
   * assumed to have originated from the primary Enterprise UDL.
   */
  sourceDL?: string;

  /**
   * Time the row was updated in the database, auto-populated by the system.
   */
  updatedAt?: string;

  /**
   * Application user who updated the row in the database, auto-populated by the
   * system.
   */
  updatedBy?: string;
}

export namespace DiplomaticclearanceFull {
  /**
   * Collection of diplomatic clearance details.
   */
  export interface DiplomaticClearanceDetail {
    /**
     * The type of action the aircraft can take with this diplomatic clearance (e.g. O
     * for Overfly, L for Land, etc.).
     */
    action?: string;

    /**
     * Specifies an alternate country code if the data provider code is not part of an
     * official Country Code standard such as ISO-3166 or FIPS. This field will be set
     * to the value provided by the source and should be used for all Queries
     * specifying a Country Code.
     */
    altCountryCode?: string;

    /**
     * Identifier of this diplomatic clearance issued by the host country.
     */
    clearanceId?: string;

    /**
     * Remarks concerning this diplomatic clearance.
     */
    clearanceRemark?: string;

    /**
     * The call sign of the sortie cleared with this diplomatic clearance.
     */
    clearedCallSign?: string;

    /**
     * The DoD Standard Country Code designator for the country issuing the diplomatic
     * clearance. This field will be set to "OTHR" if the source value does not match a
     * UDL Country code value (ISO-3166-ALPHA-2).
     */
    countryCode?: string;

    /**
     * Name of the country issuing this diplomatic clearance.
     */
    countryName?: string;

    /**
     * Earliest time the aircraft may enter the country, in ISO 8601 UTC format with
     * millisecond precision.
     */
    entryNET?: string;

    /**
     * The navigation point name where the aircraft must enter the country.
     */
    entryPoint?: string;

    /**
     * Latest time the aircraft may exit the country, in ISO 8601 UTC format with
     * millisecond precision.
     */
    exitNLT?: string;

    /**
     * The navigation point name where the aircraft must exit the country.
     */
    exitPoint?: string;

    /**
     * Optional clearance ID from external systems. This field has no meaning within
     * UDL and is provided as a convenience for systems that require tracking of an
     * internal system generated ID.
     */
    externalClearanceId?: string;

    /**
     * Unique identifier of the Aircraft Sortie associated with this diplomatic
     * clearance record.
     */
    idSortie?: string;

    /**
     * Identifies the Itinerary point of a sortie where an air event occurs.
     */
    legNum?: number;

    /**
     * The diplomatic clearance profile name used within clearance management systems.
     */
    profile?: string;

    /**
     * Flag indicating whether the clearance request requires ICAO specific
     * information.
     */
    reqICAO?: boolean;

    /**
     * Flag indicating whether entry/exit points are required for clearances.
     */
    reqPoint?: boolean;

    /**
     * The 1801 fileable route of flight string associated with this diplomatic
     * clearance. The route of flight string contains route designators, significant
     * points, change of speed/altitude, change of flight rules, and cruise climbs.
     */
    routeString?: string;

    /**
     * The placement of this diplomatic clearance within a sequence of clearances used
     * on a sortie. For example, a sequence value of 3 means that it is the third
     * diplomatic clearance the aircraft will use.
     */
    sequenceNum?: number;

    /**
     * Indicates the current status of the diplomatic clearance request.
     */
    status?: string;

    /**
     * Description of when this diplomatic clearance is valid.
     */
    validDesc?: string;

    /**
     * The end time of the validity of this diplomatic clearance, in ISO 8601 UTC
     * format with millisecond precision.
     */
    validEndTime?: string;

    /**
     * The start time of the validity of this diplomatic clearance, in ISO 8601 UTC
     * format with millisecond precision.
     */
    validStartTime?: string;

    /**
     * Remarks concerning the valid diplomatic clearance window.
     */
    windowRemark?: string;
  }

  /**
   * Collection of diplomatic clearance remarks.
   */
  export interface DiplomaticClearanceRemark {
    /**
     * Date the remark was published, in ISO 8601 UTC format, with millisecond
     * precision.
     */
    date?: string;

    /**
     * Global Decision Support System (GDSS) remark identifier.
     */
    gdssRemarkId?: string;

    /**
     * Text of the remark.
     */
    text?: string;

    /**
     * User who published the remark.
     */
    user?: string;
  }
}

export interface DiplomaticClearanceUnvalidatedPublishParams {
  body: Array<DiplomaticClearanceUnvalidatedPublishParams.Body>;
}

export namespace DiplomaticClearanceUnvalidatedPublishParams {
  /**
   * A diplomatic clearance is an authorization for an aircraft to traverse or land
   * within a specified country.
   */
  export interface Body {
    /**
     * Classification marking of the data in IC/CAPCO Portion-marked format.
     */
    classificationMarking: string;

    /**
     * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
     *
     * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
     * may include both real and simulated data.
     *
     * REAL:&nbsp;Data collected or produced that pertains to real-world objects,
     * events, and analysis.
     *
     * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
     * datasets.
     *
     * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
     * requirements, and for validating technical, functional, and performance
     * characteristics.
     */
    dataMode: 'REAL' | 'TEST' | 'SIMULATED' | 'EXERCISE';

    /**
     * The First Departure Date (FDD) the mission is scheduled for departure, in ISO
     * 8601 UTC format with millisecond precision.
     */
    firstDepDate: string;

    /**
     * Unique identifier of the Mission associated with this diplomatic clearance
     * record.
     */
    idMission: string;

    /**
     * Source of the data.
     */
    source: string;

    /**
     * Unique identifier of the record, auto-generated by the system if not provided on
     * create operations.
     */
    id?: string;

    /**
     * The Aircraft and Personnel Automated Clearance System (APACS) system identifier
     * used to process and approve this clearance request.
     */
    apacsId?: string;

    /**
     * Collection of diplomatic clearance details.
     */
    diplomaticClearanceDetails?: Array<Body.DiplomaticClearanceDetail>;

    /**
     * Collection of diplomatic clearance remarks.
     */
    diplomaticClearanceRemarks?: Array<Body.DiplomaticClearanceRemark>;

    /**
     * Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft
     * clearance requests.
     */
    dipWorksheetName?: string;

    /**
     * Suspense date for the diplomatic clearance worksheet to be worked, in ISO 8601
     * UTC format with millisecond precision.
     */
    docDeadline?: string;

    /**
     * Optional diplomatic clearance worksheet ID from external systems. This field has
     * no meaning within UDL and is provided as a convenience for systems that require
     * tracking of an internal system generated ID.
     */
    externalWorksheetId?: string;

    /**
     * Originating system or organization which produced the data, if different from
     * the source. The origin may be different than the source if the source was a
     * mediating system which forwarded the data on behalf of the origin system. If
     * null, the source may be assumed to be the origin.
     */
    origin?: string;
  }

  export namespace Body {
    /**
     * Collection of diplomatic clearance details.
     */
    export interface DiplomaticClearanceDetail {
      /**
       * The type of action the aircraft can take with this diplomatic clearance (e.g. O
       * for Overfly, L for Land, etc.).
       */
      action?: string;

      /**
       * Specifies an alternate country code if the data provider code is not part of an
       * official Country Code standard such as ISO-3166 or FIPS. This field will be set
       * to the value provided by the source and should be used for all Queries
       * specifying a Country Code.
       */
      altCountryCode?: string;

      /**
       * Identifier of this diplomatic clearance issued by the host country.
       */
      clearanceId?: string;

      /**
       * Remarks concerning this diplomatic clearance.
       */
      clearanceRemark?: string;

      /**
       * The call sign of the sortie cleared with this diplomatic clearance.
       */
      clearedCallSign?: string;

      /**
       * The DoD Standard Country Code designator for the country issuing the diplomatic
       * clearance. This field will be set to "OTHR" if the source value does not match a
       * UDL Country code value (ISO-3166-ALPHA-2).
       */
      countryCode?: string;

      /**
       * Name of the country issuing this diplomatic clearance.
       */
      countryName?: string;

      /**
       * Earliest time the aircraft may enter the country, in ISO 8601 UTC format with
       * millisecond precision.
       */
      entryNET?: string;

      /**
       * The navigation point name where the aircraft must enter the country.
       */
      entryPoint?: string;

      /**
       * Latest time the aircraft may exit the country, in ISO 8601 UTC format with
       * millisecond precision.
       */
      exitNLT?: string;

      /**
       * The navigation point name where the aircraft must exit the country.
       */
      exitPoint?: string;

      /**
       * Optional clearance ID from external systems. This field has no meaning within
       * UDL and is provided as a convenience for systems that require tracking of an
       * internal system generated ID.
       */
      externalClearanceId?: string;

      /**
       * Unique identifier of the Aircraft Sortie associated with this diplomatic
       * clearance record.
       */
      idSortie?: string;

      /**
       * Identifies the Itinerary point of a sortie where an air event occurs.
       */
      legNum?: number;

      /**
       * The diplomatic clearance profile name used within clearance management systems.
       */
      profile?: string;

      /**
       * Flag indicating whether the clearance request requires ICAO specific
       * information.
       */
      reqICAO?: boolean;

      /**
       * Flag indicating whether entry/exit points are required for clearances.
       */
      reqPoint?: boolean;

      /**
       * The 1801 fileable route of flight string associated with this diplomatic
       * clearance. The route of flight string contains route designators, significant
       * points, change of speed/altitude, change of flight rules, and cruise climbs.
       */
      routeString?: string;

      /**
       * The placement of this diplomatic clearance within a sequence of clearances used
       * on a sortie. For example, a sequence value of 3 means that it is the third
       * diplomatic clearance the aircraft will use.
       */
      sequenceNum?: number;

      /**
       * Indicates the current status of the diplomatic clearance request.
       */
      status?: string;

      /**
       * Description of when this diplomatic clearance is valid.
       */
      validDesc?: string;

      /**
       * The end time of the validity of this diplomatic clearance, in ISO 8601 UTC
       * format with millisecond precision.
       */
      validEndTime?: string;

      /**
       * The start time of the validity of this diplomatic clearance, in ISO 8601 UTC
       * format with millisecond precision.
       */
      validStartTime?: string;

      /**
       * Remarks concerning the valid diplomatic clearance window.
       */
      windowRemark?: string;
    }

    /**
     * Collection of diplomatic clearance remarks.
     */
    export interface DiplomaticClearanceRemark {
      /**
       * Date the remark was published, in ISO 8601 UTC format, with millisecond
       * precision.
       */
      date?: string;

      /**
       * Global Decision Support System (GDSS) remark identifier.
       */
      gdssRemarkId?: string;

      /**
       * Text of the remark.
       */
      text?: string;

      /**
       * User who published the remark.
       */
      user?: string;
    }
  }
}

export declare namespace DiplomaticClearance {
  export {
    type DiplomaticclearanceAbridged as DiplomaticclearanceAbridged,
    type DiplomaticclearanceFull as DiplomaticclearanceFull,
    type DiplomaticClearanceUnvalidatedPublishParams as DiplomaticClearanceUnvalidatedPublishParams,
  };
}
