// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../core/resource';
import * as HistoryAPI from './history';
import {
  History,
  HistoryAodrParams,
  HistoryCountParams,
  HistoryCountResponse,
  HistoryListParams,
  HistoryListResponse,
  TrackDetailsFull,
} from './history';
import { APIPromise } from '../../core/api-promise';
import { buildHeaders } from '../../internal/headers';
import { RequestOptions } from '../../internal/request-options';

export class Trackdetails extends APIResource {
  history: HistoryAPI.History = new HistoryAPI.History(this._client);

  /**
   * Service operation to dynamically query data by a variety of query parameters not
   * specified in this API documentation. See the queryhelp operation
   * (/udl/&lt;datatype&gt;/queryhelp) for more details on valid/required query
   * parameter information.
   */
  list(query: TrackdetailListParams, options?: RequestOptions): APIPromise<TrackdetailListResponse> {
    return this._client.get('/udl/trackdetails', { query, ...options });
  }

  /**
   * Service operation to return the count of records satisfying the specified query
   * parameters. This operation is useful to determine how many records pass a
   * particular query criteria without retrieving large amounts of data. See the
   * queryhelp operation (/udl/&lt;datatype&gt;/queryhelp) for more details on
   * valid/required query parameter information.
   */
  count(query: TrackdetailCountParams, options?: RequestOptions): APIPromise<string> {
    return this._client.get('/udl/trackdetails/count', {
      query,
      ...options,
      headers: buildHeaders([{ Accept: 'text/plain' }, options?.headers]),
    });
  }

  /**
   * Service operation intended for initial integration only, to take a list of Track
   * Details records as a POST body and ingest into the database. This operation is
   * not intended to be used for automated feeds into UDL. Data providers should
   * contact the UDL team for specific role assignments and for instructions on
   * setting up a permanent feed through an alternate mechanism.
   */
  createBulk(params: TrackdetailCreateBulkParams, options?: RequestOptions): APIPromise<void> {
    const { body } = params;
    return this._client.post('/udl/trackdetails/createBulk', {
      body: body,
      ...options,
      headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),
    });
  }

  /**
   * Service operation to provide detailed information on available dynamic query
   * parameters for a particular data type.
   */
  queryhelp(options?: RequestOptions): APIPromise<void> {
    return this._client.get('/udl/trackdetails/queryhelp', {
      ...options,
      headers: buildHeaders([{ Accept: '*/*' }, options?.headers]),
    });
  }

  /**
   * Service operation to dynamically query data and only return specified
   * columns/fields. Requested columns are specified by the 'columns' query parameter
   * and should be a comma separated list of valid fields for the specified data
   * type. classificationMarking is always returned. See the queryhelp operation
   * (/udl/<datatype>/queryhelp) for more details on valid/required query parameter
   * information. An example URI: /udl/elset/tuple?columns=satNo,period&epoch=>now-5
   * hours would return the satNo and period of elsets with an epoch greater than 5
   * hours ago.
   */
  tuple(query: TrackdetailTupleParams, options?: RequestOptions): APIPromise<TrackdetailTupleResponse> {
    return this._client.get('/udl/trackdetails/tuple', { query, ...options });
  }
}

export type TrackdetailListResponse = Array<TrackdetailListResponse.TrackdetailListResponseItem>;

export namespace TrackdetailListResponse {
  /**
   * These services provide operations for querying of all available track details
   * and amplifying track data. A track is a position and optionally a
   * heading/velocity of an object such as an aircraft, marine vessel, etc at a
   * particular timestamp. It also includes optional information regarding the
   * identity/type of the target object and other amplifying object data, if known.
   */
  export interface TrackdetailListResponseItem {
    /**
     * Classification marking of the data in IC/CAPCO Portion-marked format.
     */
    classificationMarking: string;

    /**
     * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
     *
     * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
     * may include both real and simulated data.
     *
     * REAL:&nbsp;Data collected or produced that pertains to real-world objects,
     * events, and analysis.
     *
     * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
     * datasets.
     *
     * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
     * requirements, and for validating technical, functional, and performance
     * characteristics.
     */
    dataMode: 'REAL' | 'TEST' | 'SIMULATED' | 'EXERCISE';

    /**
     * WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative
     * values south of equator).
     */
    lat: number;

    /**
     * WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative
     * values west of Prime Meridian).
     */
    lon: number;

    /**
     * Source of the data.
     */
    source: string;

    /**
     * Track timestamp in ISO8601 UTC format with microsecond precision.
     */
    ts: string;

    /**
     * Unique identifier of the record, auto-generated by the system.
     */
    id?: string;

    /**
     * Subtype is a finer grain categorization of missile types. Examples include but
     * are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM:
     *
     * SRBM - Short-Range Ballistic Missile
     *
     * MRBM - Medium-Range Ballistic Missile
     *
     * IRBM - Intermediate-Range Ballistic Missile
     *
     * LRBM - Long-Range Ballistic Missile
     *
     * ICBM - Intercontinental Ballistic Missile
     *
     * SLBM - Submarine-Launched Ballistic Missile.
     */
    acftSubType?: string;

    /**
     * A text amplifier for units, equipment and installations; content is
     * implementation specific.
     */
    addInfo?: string;

    /**
     * A track may be designated as an alert track with the following designations:
     *
     * HIT - High Interest Track
     *
     * TGT - Target
     *
     * SUS - Suspect Carrier
     *
     * NSP - Cleared Suspect
     *
     * If alert is null, the track is assumed to be of non-alert status.
     */
    alert?: string;

    /**
     * Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values
     * indicate a track object height above ellipsoid, and negative values indicate a
     * track object below ellipsoid, applicable to the depth estimate for a subsurface
     * track.
     */
    alt?: number;

    /**
     * The angle formed between the line of sight of the observer and the horizon, in
     * degrees. The angular range is -90 to 90, with negative values representing angle
     * of depression.
     */
    angElev?: number;

    /**
     * The reference dimensions of the vessel, reported as [A, B, C, D], in meters.
     * Where the array values represent the distance fore (A), aft (B), to port (C),
     * and to starboard (D) of the navigation antenna. Array with values A = C = 0 and
     * B, D > 0 indicate the length (B) and width (D) of the vessel without antenna
     * position reference.
     */
    antennaRefDimensions?: Array<number>;

    /**
     * Three element array representing an Area of Uncertainty (AoU). The array element
     * definitions and units are type specific depending on the aouRptType specified in
     * this record:
     *
     * ELLIPSE:
     *
     * brg - orientation in degrees of the ellipse
     *
     * a1 - semi-major axis in meters
     *
     * a2 - semi-minor axis in meters
     *
     * BEARING (BEARING BOX or MTST BEARING BOX):
     *
     * brg - orientation in degrees of the bearing box
     *
     * a1 - length of bearing box in meters
     *
     * a2 - half-width of bearing box in meters
     *
     * OTHER (All other type values):
     *
     * brg - line of bearing in degrees true
     *
     * a1 - bearing error in degrees
     *
     * a2 - estimated range in meters.
     */
    aouRptData?: Array<number>;

    /**
     * The track Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition.
     * This type defines the elements of the aouRptData array and is required if
     * aouRptData is not null. See the aouRptData field definition for specific
     * information.
     */
    aouRptType?: string;

    /**
     * Appearance group code.
     *
     * GP1 - Superstructure exceeds 1/3 of ship length.
     *
     * GP2 - Superstructure less than 1/3 of ship length.
     *
     * GP3 - Stack aft.
     */
    appGrp?: string;

    /**
     * The reported arrival cargo type. Intended as, but not constrained to, the USCG
     * NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    arrCargo?: string;

    /**
     * The flag of the arrival port.
     */
    arrFlag?: string;

    /**
     * The Arrival Port of the vessel according to the AIS transmission.
     */
    arrPort?: string;

    /**
     * The Arrival Time of the vessel at the destination, in ISO 8601 UTC format with
     * microsecond precision.
     */
    arrTime?: string;

    /**
     * Type of Aid to Navigation. Intended as, but not constrained to, the USCG NAVCEN
     * aids to navigation. Users should refer to USCG Navigation Center documentation
     * for specific device type information. USCG NAVCEN documentation may be found at
     * https://www.navcen.uscg.gov.
     */
    aton?: string;

    /**
     * The average speed, in kilometers/hour, calculated for the subject during the
     * latest voyage/excursion.
     */
    avgSpd?: number;

    /**
     * Azimuth corridor arc distance measured in meters from reference point of azimuth
     * corridor to far edge of bounded azimuth corridor wedge, measured along azimuth
     * corridor center line.
     */
    azCorrArcWidth?: number;

    /**
     * The azimuth corridor centerline angle measured in degrees clockwise from true
     * north, of the center line of an azimuth corridor. The center line extends from
     * the referenced corridor origin location.
     */
    azCorrCenterLine?: number;

    /**
     * The Basic Encyclopedia (BE) number associated with this installation or area.
     */
    beNumber?: string;

    /**
     * Flag indicating that the missile is currently in a state of boosting, if
     * reporting a missile track.
     */
    boosting?: boolean;

    /**
     * Track point burnout altitude relative to WGS-84 ellipsoid, in meters.
     */
    burnoutAlt?: number;

    /**
     * The call sign currently assigned to this track object.
     */
    callSign?: string;

    /**
     * The reported cargo type. Intended as, but not constrained to, the USCG NAVCEN
     * AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    cargoType?: string;

    /**
     * Correlation Index; reference code for the site that originally reported the
     * track.
     */
    cI?: string;

    /**
     * The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The
     * percentage of time (90%) that the estimated area of uncertainty will cover the
     * true position of the track object.
     */
    containment?: number;

    /**
     * The Cooperative Location Indicator specifies whether the reported entity
     * location was derived using reported locations from sensors on more than one
     * platform.
     *
     * 0 - COOPERATIVE_LOCATOR_NONE
     *
     * 1 - SINGLE_PLATFORM
     *
     * 2 - FRAGMENT
     *
     * 3 - COOPERATIVE.
     */
    coopLocInd?: string;

    /**
     * The track object course-over-ground, in degrees clockwise from true North at the
     * object location (0-360 degrees).
     */
    course?: number;

    /**
     * The distance, in meters, of the closest point of approach between this track to
     * the master reference track.
     */
    cpa?: number;

    /**
     * Time the row was created in the database.
     */
    createdAt?: string;

    /**
     * Application user who created the row in the database.
     */
    createdBy?: string;

    /**
     * The reported departure cargo type. Intended as, but not constrained to, the USCG
     * NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    depCargo?: string;

    /**
     * The flag of the departure port.
     */
    depFlag?: string;

    /**
     * The Departure Port of the vessel according to the AIS transmission.
     */
    depPort?: string;

    /**
     * The reported destination cargo type. Intended as, but not constrained to, the
     * USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    desCargo?: string;

    /**
     * The flag of the destination port.
     */
    desFlag?: string;

    /**
     * The destination of the vessel according to the AIS transmission.
     */
    destination?: string;

    /**
     * The Intel Discrete Identifier (IDI) code assigned to this track. The IDI is a
     * four-digit code representing hostile or unknown tracks.
     */
    disId?: string;

    /**
     * The maximum static draught, in meters, of the vessel according to the AIS
     * transmission.
     */
    draught?: number;

    /**
     * The drop-point indicator setting.
     */
    dropPtInd?: boolean;

    /**
     * Flag indicating that this track represents a dummy object or group. Identifies
     * offensive or defensive units, equipment, and/or installations intended to draw
     * the enemy's attention away from the area of the main attack. Based on
     * MIL-STD-2525 symbology definitions.
     */
    dummy?: boolean;

    /**
     * Track object location in ECEF [x, y, z], meters. When provided, array must
     * always contain 3 values.
     */
    ecefPos?: Array<number>;

    /**
     * Track object velocity in ECEF [x', y', z'], meters/sec. When provided, array
     * must always contain 3 values.
     */
    ecefVel?: Array<number>;

    /**
     * Primary ELINT Notification (ELNOT), a five character identifier assigned to each
     * non-communication emission for collection and reporting purposes. This
     * five-digit field begins with an alpha character, followed by three numbers,
     * ending with another alpha character.
     */
    elnot1?: string;

    /**
     * Secondary ELINT Notification (ELNOT), a five character identifier assigned to
     * each non-communication emission for collection and reporting purposes. This
     * five-digit field begins with an alpha character, followed by three numbers,
     * ending with another alpha character.
     */
    elnot2?: string;

    /**
     * Flag indicating that the track object has an emergency.
     */
    emgInd?: boolean;

    /**
     * Radar name of the sensor tracking this object (e.g., RAY1500, SPN-43, HEADNET).
     */
    emitterName?: string;

    /**
     * The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):
     *
     * AIR: Between sea level and the Kármán line, which has an altitude of 100
     * kilometers (62 miles).
     *
     * LAND: On the surface of dry land.
     *
     * SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62
     * miles).
     *
     * SURFACE: On the surface of a body of water.
     *
     * SUBSURFACE: Below the surface of a body of water.
     *
     * UNKNOWN: Environment is not known.
     */
    env?: 'AIR' | 'LAND' | 'SPACE' | 'SURFACE' | 'SUBSURFACE' | 'UNKNOWN';

    /**
     * The error in the Area Orientation. Area Orientation is the angle or roll in
     * degrees, between area semi-minor axis and plane defined by local vertical and
     * area semi-major axis. When reported without major and minor axis, it is angle
     * between an axis perpendicular to a 2D true north axis and plane defined by local
     * vertical and a 2D true north axis.
     */
    errAreaOrient?: number;

    /**
     * Geometric area switch identifies the 3D shape of the error volume by providing
     * the 2D shape for the 3D plane. The 3D plane is the plane orthogonal to the area
     * semi-major axis and area semi-minor axis. Depending on whether the 2D plane is
     * reported as an error ellipse 2D or as an error rectangle 2D, this switch reports
     * a complete error volume that is cubical, 3D rectangular, cylindrical, 3D
     * ellipsoidal, or spherical.
     *
     * 0 - SWITCH_TYPE_UNKNOWN
     *
     * 1 - SQUARE_RECTANGLE
     *
     * 2 - CIRCLE_ELLIPSE.
     */
    errGeoAreaSwitch?: string;

    /**
     * The error in the semi-intermediate axis. The semi-intermediate axis is
     * intermediate in length between semi-major and semi-minor axes. This field is
     * doubled and centered on intersection of area semi-major axis and area semi-minor
     * axis at 90 degrees to the plane defined by those axes. For these shapes, the
     * volume is defined as having a 50-percent probability of containing the true
     * location of the referenced entity.
     */
    errSemiIntAxis?: number;

    /**
     * The error in the Semi-major elevation axis. Semi-major elevation axis is the
     * elevation of the cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or
     * spherical semi-major axis, in degrees, measured from local horizontal.
     */
    errSemiMajElev?: number;

    /**
     * The Estimated Time of Arrival of the vessel at the destination port, in ISO 8601
     * UTC format with microsecond precision.
     */
    eta?: string;

    /**
     * The Estimated Time of Departure of the vessel from the departure port (depPort),
     * according to Marine Traffic calculations, in ISO 8601 UTC format with
     * microsecond precision.
     */
    etd?: string;

    /**
     * A text amplifier code for units, equipment, and installations that consists of a
     * one-letter reliability rating and a one-number credibility rating based on the
     * following definitions of each:
     *
     * Reliability Ratings:
     *
     * A-completely reliable
     *
     * B-usually reliable
     *
     * C-fairly reliable
     *
     * D-not usually reliable
     *
     * E-unreliable
     *
     * F-reliability cannot be judged
     *
     * Credibility Ratings:
     *
     * 1-confirmed by other sources
     *
     * 2-probably true
     *
     * 3-possibly true
     *
     * 4-doubtfully true
     *
     * 5-improbable
     *
     * 6-truth cannot be judged.
     */
    evalRating?: string;

    /**
     * Flag indicating that this track represents a feint object or group. Identifies
     * offensive or defensive units, equipment, and/or installations intended to draw
     * the enemy's attention away from the area of the main attack. Based on
     * MIL-STD-2525 symbology definitions.
     */
    feint?: boolean;

    /**
     * Frequency, in hertz, for the signature report.
     */
    freq?: number;

    /**
     * An ftn used to associate information and directives with the track.
     */
    ftn?: string;

    /**
     * The name of the Command reporting the Force Over-The-Horizon Track Coordinator
     * (FOTC) track number.
     */
    ftnCmd?: string;

    /**
     * The message timestamp that the ftn track position was recorded, in ISO 8601 UTC
     * format with microsecond precision.
     */
    ftnMsgTs?: string;

    /**
     * List of harmonics of the signature report in descending order of predominance
     * using 1-2 digit combinations separated by commas, e.g., 8,12,4. (1-22NS).
     */
    harmonics?: string;

    /**
     * Track object heading, in degrees clockwise from true north.
     */
    hdng?: number;

    /**
     * Flag indicating that this track represents a headquarters object. Based on
     * MIL-STD-2525 symbology definitions.
     */
    hq?: boolean;

    /**
     * The vessel hull number designation of this maritime vessel. The hull number is a
     * 1-6 character alphanumeric entry assigned to a ship and painted on the hull.
     */
    hullNum?: string;

    /**
     * Hull profile code. Based on GCCS-J hull profiles.
     *
     * FLUSH No breaks in Hull Profile.
     *
     * RAISED 1 Hull Profile shows distinct raised area at bow. Remainder of deck is
     * flush.
     *
     * RAISED 2 Hull Profile shows distinct raised area amidships. Bow and stern are
     * flush.
     *
     * RAISED 3 Hull Profile shows distinct raised area at stern. Remainder of deck is
     * flush.
     *
     * RAISED 1-2-3 Distinct raised areas at bow, midships, and stern with breaks
     * between each raise.
     *
     * RAISED 1-2 Raised area at bow and midships with break between.
     *
     * RAISED 1-3 Raised area at bow and stern with break between.
     *
     * RAISED 12 Continuous raised area encompassing both bow and midships.
     *
     * RAISED 23 Continuous raised area encompassing midships and stern.
     *
     * RAISED 12-3 Raised areas at bow, midships and stern. Bow and midship raises are
     * continuous. Break between midship and stern raises.
     *
     * RAISED 1-23 Raised areas at bow, midships, and stern. Midship and stern raises
     * are continuous with break between bow and midship raises.
     *
     * RAISED 1-L2-3 Raised areas at bow, midships, and stern with break between each
     * raise. Midships raise is longer than that associated with raised 1-2-3.
     */
    hullProf?: string;

    /**
     * Additional track object identity/status information, typically used for EXERCISE
     * identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):
     *
     * FAKER: Friendly track, object, or entity acting as an exercise hostile.
     *
     * JOKER: Friendly track, object, or entity acting as an exercise suspect.
     *
     * KILO: Friendly high-value object.
     *
     * TRAVELLER: Suspect land or surface track following a recognized traffic route.
     *
     * ZOMBIE: Suspect track, object, or entity of special interest.
     */
    identAmp?: string;

    /**
     * A text amplifier displaying IFF/SIF/AIS Identification modes and codes.
     */
    iff?: string;

    /**
     * The International Maritime Organization Number of the vessel. IMON is a
     * seven-digit number that uniquely identifies the vessel.
     */
    imon?: number;

    /**
     * Three element array representing the impact point Area of Uncertainty (AoU). The
     * array element definitions and units are type specific depending on the
     * impactAouType specified in this record:
     *
     * ELLIPSE:
     *
     * brg - orientation in degrees of the ellipse
     *
     * a1 - semi-major axis in meters
     *
     * a2 - semi-minor axis in meters
     *
     * BEARING (BEARING BOX or MTST BEARING BOX):
     *
     * brg - orientation in degrees of the bearing box
     *
     * a1 - length of bearing box in meters
     *
     * a2 - half-width of bearing box in meters
     *
     * OTHER (All other type values):
     *
     * brg - line of bearing in degrees true
     *
     * a1 - bearing error in degrees
     *
     * a2 - estimated range in meters.
     */
    impactAouData?: Array<number>;

    /**
     * The impact point Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER)
     * definition. This type defines the elements of the impactAouData array and is
     * required if impactAouData is not null. See the impactAouData field definition
     * for specific information.
     */
    impactAouType?: string;

    /**
     * WGS-84 latitude of the missile impact point, in degrees. -90 to 90 degrees
     * (negative values south of equator).
     */
    impactLat?: number;

    /**
     * WGS-84 longitude of the missile impact point, in degrees. -180 to 180 degrees
     * (negative values west of Prime Meridian).
     */
    impactLon?: number;

    /**
     * Missile impact timestamp in ISO8601 UTC format with microsecond precision.
     */
    impactTime?: string;

    /**
     * Source code for source of information used to detect track.
     */
    infoSource?: string;

    /**
     * Flag indicating that this track represents an installation. Based on
     * MIL-STD-2525 symbology definitions.
     */
    installation?: boolean;

    /**
     * Three element array representing the launch location Area of Uncertainty (AoU).
     * The array element definitions and units are type specific depending on the
     * launchAouType specified in this record:
     *
     * ELLIPSE:
     *
     * brg - orientation in degrees of the ellipse
     *
     * a1 - semi-major axis in meters
     *
     * a2 - semi-minor axis in meters
     *
     * BEARING (BEARING BOX or MTST BEARING BOX):
     *
     * brg - orientation in degrees of the bearing box
     *
     * a1 - length of bearing box in meters
     *
     * a2 - half-width of bearing box in meters
     *
     * OTHER (All other type values):
     *
     * brg - line of bearing in degrees true
     *
     * a1 - bearing error in degrees
     *
     * a2 - estimated range in meters.
     */
    launchAouData?: Array<number>;

    /**
     * The launch location Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER)
     * definition. This type defines the elements of the launchAouData array and is
     * required if launchAouData is not null. See the launchAouData field definition
     * for specific information.
     */
    launchAouType?: string;

    /**
     * WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees
     * (negative values south of equator).
     */
    launchLat?: number;

    /**
     * WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees
     * (negative values west of Prime Meridian).
     */
    launchLon?: number;

    /**
     * Missile launch timestamp in ISO8601 UTC format with microsecond precision.
     */
    launchTime?: string;

    /**
     * The overall length of the vessel, in meters. A value of 511 indicates a vessel
     * length of 511 meters or greater.
     */
    length?: number;

    /**
     * Flag indicating whether the missile is considered lost, if reporting a missile
     * track.
     */
    lostTrkInd?: boolean;

    /**
     * The manuevering indicator specifying the missile boost phase.
     *
     * 0 - POST_BOOST_NONE
     *
     * 1 - POST_BOOST_MANUEVER
     *
     * 2 - POST_BOOST_COMPLETE_MANUEVER.
     */
    maneuverInd?: string;

    /**
     * Maximum frequency, in hertz, reported for this acoustic track.
     */
    maxFreq?: number;

    /**
     * The category code that represents the associated facility purpose within the
     * target system. This value is the category code in the MIDB (Modernized
     * Intelligence Database).
     */
    midbCat?: string;

    /**
     * The MIL-STD-2525B symbology code that applies to the subject of this track.
     */
    mil2525Bstr?: string;

    /**
     * The Maritime Mobile Service Identity of the vessel. MMSI is a nine-digit number
     * that identifies the transmitter station of the vessel.
     */
    mmsi?: number;

    /**
     * Optional message type designation.
     */
    msgType?: string;

    /**
     * The status of the missile track in this record, if reporting a missile track
     * (e.g. AT LAUNCH, AT OBSERVATION, FLYING, IMPACTED, LOST, STALE, DEBRIS).
     */
    mslStatus?: string;

    /**
     * Source of the Missile-Unique Identifier (MUID), if reporting a missile track.
     */
    muidSrc?: string;

    /**
     * Track ID for the source of the Missile-Unique Identifier (MUID), if reporting a
     * missile track.
     */
    muidSrcTrk?: string;

    /**
     * Track name.
     */
    name?: string;

    /**
     * The AIS Navigational Status of the vessel (e.g. Underway Using Engine, Moored,
     * Aground, etc.). Intended as, but not constrained to, the USCG NAVCEN navigation
     * status definitions. Users should refer to USCG Navigation Center documentation
     * for specific definitions associated with navigation status. USCG NAVCEN
     * documentation may be found at https://www.navcen.uscg.gov.
     */
    navStatus?: string;

    /**
     * The Naval Tactical Data System (NTDS) track number assigned to this track.
     */
    ntds?: string;

    /**
     * The number of blades per shaft of the track object. Applicable for maritime
     * vessels.
     */
    numBlades?: number;

    /**
     * The number of shafts on the track object. Applicable for maritime vessels.
     */
    numShafts?: number;

    /**
     * The activity in which the track object is engaged. Intended as, but not
     * constrained to, MIL-STD-6016 environment dependent activity designations. The
     * activity can be reported as either a combination of the code and environment
     * (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are
     * equivalent. For cases in which no MIl-STD-6016 designation exists, a general
     * description can be used (e.g. ANTISPACE WARFARE).
     */
    objAct?: string;

    /**
     * The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE,
     * NEUTRAL, PENDING, SUSPECT, UNKNOWN):
     *
     * ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics,
     * behavior, and/or origin.
     *
     * FRIEND: Track object supporting friendly forces and belonging to a declared
     * friendly nation or entity.
     *
     * HOSTILE: Track object belonging to an opposing nation, party, group, or entity
     * deemed to contribute to a threat to friendly forces or their mission due to its
     * behavior, characteristics, nationality, or origin.
     *
     * NEUTRAL: Track object whose characteristics, behavior, nationality, and/or
     * origin indicate that it is neither supporting nor opposing friendly forces or
     * their mission.
     *
     * PENDING: Track object which has not been evaluated.
     *
     * SUSPECT: Track object deemed potentially hostile due to the object
     * characteristics, behavior, nationality, and/or origin.
     *
     * UNKNOWN: Track object which has been evaluated and does not meet criteria for
     * any standard identity.
     */
    objIdent?: 'ASSUMED FRIEND' | 'FRIEND' | 'HOSTILE' | 'NEUTRAL' | 'PENDING' | 'SUSPECT' | 'UNKNOWN';

    /**
     * Nationality of the tracked object.
     */
    objNat?: string;

    /**
     * The object platform type is intended as, but not constrained to, MIL-STD-6016
     * environment dependent platform type designations. The platform type can be
     * reported as either a combination of the code and environment (e.g. 14/LAND) or
     * as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.
     * For cases in which no MIl-STD-6016 designation exists, a general description can
     * be used (e.g. SATELLITE).
     */
    objPlat?: string;

    /**
     * The generic classification of the track object/group (e.g., BALLISTIC,
     * HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained
     * to, NATO STANAG 4676 object type classifications.
     */
    objType?: string;

    /**
     * Indicator position (OFF, ON, UNK) for optional floating navigational aids only.
     */
    offPosInd?: string;

    /**
     * Originating system or organization which produced the data, if different from
     * the source. The origin may be different than the source if the source was a
     * mediating system which forwarded the data on behalf of the origin system. If
     * null, the source may be assumed to be the origin.
     */
    origin?: string;

    /**
     * The originating source network on which this record was created, auto-populated
     * by the system.
     */
    origNetwork?: string;

    /**
     * Original source cross-reference code for the Command that originated the report.
     */
    origXref?: string;

    /**
     * The O-suffix associated with this facility. The O-suffix is a five-character
     * alpha/numeric system used to identify a facility, or demographic area, within an
     * installation. The Installation Basic Encyclopedia (beNumber), in conjunction
     * with the O-suffix, uniquely identifies the facility within the Modernized
     * Integrated Database (MIDB). The Installation beNumber and oSuffix are also used
     * in conjunction with the midbCat code to classify the function or purpose of the
     * facility.
     */
    oSuffix?: string;

    /**
     * The Pseudo Identification Feature (PIF) number is a four digit code that
     * provides an exact ID for the ship or aircraft. Friendly military only.
     */
    pif?: string;

    /**
     * This value represents the site number of a specific electronic site or its
     * associated equipment.
     */
    pin?: string;

    /**
     * WGS-84 azimuth corridor reference point latitude, in degrees. -90 to 90 degrees
     * (negative values south of equator).
     */
    polarSingLocLat?: number;

    /**
     * WGS-84 azimuth corridor reference point longitude, in degrees. -180 to 180
     * degrees (negative values west of Prime Meridian).
     */
    polarSingLocLon?: number;

    /**
     * The type of electronic position fixing device (e.g. GPS, GLONASS, etc.).
     * Intended as, but not constrained to, the USCG NAVCEN electronic position fixing
     * device definitions. Users should refer to USCG Navigation Center documentation
     * for specific device type information. USCG NAVCEN documentation may be found at
     * https://www.navcen.uscg.gov.
     */
    posDeviceType?: string;

    /**
     * Pulse repetition frequency of the emitter, measured in pulses per second. PRF is
     * the number of pulses transmitted per second. This is the reciprocal of the pri
     * value.
     */
    prf?: number;

    /**
     * Pulse repetition interval of the emitter, measured in microseconds. The interval
     * between the start of one pulse and the start of another.
     */
    pri?: number;

    /**
     * The number of propeller revolutions per minute for a submarine or ship.
     */
    propRPM?: number;

    /**
     * The type of propulsion employed by the track object (Diesel, Nuclear).
     */
    propType?: string;

    /**
     * Pulse width of the emitter, measured in microseconds. This is the duration of
     * the pulse.
     */
    pw?: number;

    /**
     * Flag indicating for the track represents a reduced force object or group. Based
     * on MIL-STD-2525 symbology definitions.
     */
    reduced?: boolean;

    /**
     * Flag indicating that this track represents a reinforced object or group. Based
     * on MIL-STD-2525 symbology definitions.
     */
    reinforced?: boolean;

    /**
     * Flag indicating whether this track is archived.
     */
    rptArchived?: boolean;

    /**
     * Source cross-reference code for the Command that originated the track report.
     */
    rptChxref?: string;

    /**
     * A Reference Track Number used to associate information and directives with the
     * track. Referenced, but not constrained to, MIL-STD-6016F Reference Track Number.
     * The 'rtnMsgTs' and 'rtn' arrays must match in size.
     */
    rtn?: Array<string>;

    /**
     * The name of the Command reporting the Received Track Number (RTN).
     */
    rtnCmd?: string;

    /**
     * The message timestamp that the reference track position was recorded, in ISO
     * 8601 UTC format with microsecond precision. The 'rtnMsgTs' and 'rtn' arrays must
     * match in size.
     */
    rtnMsgTs?: Array<string>;

    /**
     * Value representing the state of the Received Track.
     */
    rtnTrkState?: string;

    /**
     * Scan rate of the emitter, measured in seconds per rotation (SPR).
     */
    scanRate?: number;

    /**
     * Type of radar scan.
     */
    scanType?: string;

    /**
     * The Sequential Contact Number (SCN) for this track.
     */
    scn?: number;

    /**
     * The Ship Control Number (SCONUM) is a naval vessel identification number
     * (alphanumeric code) assigned by the Office of Naval Intelligence. SCONUM is
     * sometimes referred to as NOIC ID. SCONUMs are typically of the form A#####,
     * where A is an alpha character and # is numerical.
     */
    sconum?: string;

    /**
     * Flag indicating that this track is self reported.
     */
    selfReport?: boolean;

    /**
     * Id/name of sensor providing the track data.
     */
    sen?: string;

    /**
     * The common name for a group of ships with similar design, usually named for the
     * first vessel of the class.
     */
    shipClass?: string;

    /**
     * Abbreviated track name.
     */
    shortName?: string;

    /**
     * The unique identifier of the source node.
     */
    sourceUid?: string;

    /**
     * Space amplification indicates additional information on the space environment
     * object being reported (e.g. DEBRIS, FUEL-AIR EXPLOSIVE, NUCLEAR WARHEAD).
     */
    spaceAmp?: string;

    /**
     * Confidence level of the amplifying characteristics. Values range from 0 to 6,
     * with 0 indicating the lowest confidence and 6 indicating the highest.
     */
    spaceAmpConf?: number;

    /**
     * Specific type of point or track with an environment of space.
     */
    spaceSpecType?: string;

    /**
     * Track object speed, in meters/sec.
     */
    spd?: number;

    /**
     * A text amplifier for units, equipment and installations; content is
     * implementation specific.
     */
    staffCmts?: string;

    /**
     * The stern type code (Counter, Cruiser) associated with the track object.
     */
    sternType?: string;

    /**
     * Flag indicating that this track represents a task force. Based on MIL-STD-2525
     * symbology definitions.
     */
    taskForce?: boolean;

    /**
     * The time, in ISO 8601 UTC format with millisecond precision, of the closest
     * point of approach between this track and the master reference track.
     */
    tcpa?: string;

    /**
     * Threat Event System Track ID.
     */
    tesEventId?: string;

    /**
     * Motion model Time On Leg in hours.
     */
    tol?: number;

    /**
     * The number of turns of the vessel propellers per knot of forward motion.
     */
    tpk?: number;

    /**
     * Overall track confidence estimate (not standardized, but typically a value
     * between 0 and 1, with 0 indicating lowest confidence).
     */
    trkConf?: number;

    /**
     * UUID identifying the track, which should remain the same on subsequent tracks of
     * the same object.
     */
    trkId?: string;

    /**
     * The track number (TN) of a surveillance entity. Intended as, but not constrained
     * to, the J-series track number encoded as five character alpha-numeric
     * characters. Users should refer to J-series documentation for specific TN
     * definitions.
     */
    trkNum?: string;

    /**
     * Track Quality is reported as an integer from 0-15. Track Quality specifies the
     * reliability of the positional information of a reported track; Higher values
     * indicate higher track quality, i.e., lower errors in reported position.
     */
    trkQual?: number;

    /**
     * Value Indicating the scope of this track: 1 - TERMINAL (Terminal) - available
     * only on the workstation where they were created. 2 - LOCAL (Local) - available
     * only on workstations in the local area network 3 - OTH (Over the Horizon) -
     * available to everyone.
     */
    trkScope?: string;

    /**
     * Transponder ID for the track. This does not correspond to the UDL transponder
     * schema.
     */
    trnspdrId?: string;

    /**
     * Transponder type for the track.
     */
    trnspdrType?: string;

    /**
     * The weight, in tons, of the vessel associated with this track.
     */
    vslWt?: number;

    /**
     * The breadth of the vessel, in meters. A value of 63 indicates a vessel breadth
     * of 63 meters or greater.
     */
    width?: number;
  }
}

export type TrackdetailCountResponse = string;

export type TrackdetailTupleResponse = Array<HistoryAPI.TrackDetailsFull>;

export interface TrackdetailListParams {
  /**
   * Track timestamp in ISO8601 UTC format with microsecond precision.
   * (YYYY-MM-DDTHH:MM:SS.ssssssZ)
   */
  ts: string;
}

export interface TrackdetailCountParams {
  /**
   * Track timestamp in ISO8601 UTC format with microsecond precision.
   * (YYYY-MM-DDTHH:MM:SS.ssssssZ)
   */
  ts: string;
}

export interface TrackdetailCreateBulkParams {
  body: Array<TrackdetailCreateBulkParams.Body>;
}

export namespace TrackdetailCreateBulkParams {
  /**
   * These services provide operations for querying of all available track details
   * and amplifying track data. A track is a position and optionally a
   * heading/velocity of an object such as an aircraft, marine vessel, etc at a
   * particular timestamp. It also includes optional information regarding the
   * identity/type of the target object and other amplifying object data, if known.
   */
  export interface Body {
    /**
     * Classification marking of the data in IC/CAPCO Portion-marked format.
     */
    classificationMarking: string;

    /**
     * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
     *
     * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
     * may include both real and simulated data.
     *
     * REAL:&nbsp;Data collected or produced that pertains to real-world objects,
     * events, and analysis.
     *
     * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
     * datasets.
     *
     * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
     * requirements, and for validating technical, functional, and performance
     * characteristics.
     */
    dataMode: 'REAL' | 'TEST' | 'SIMULATED' | 'EXERCISE';

    /**
     * WGS-84 latitude of the track object, in degrees. -90 to 90 degrees (negative
     * values south of equator).
     */
    lat: number;

    /**
     * WGS-84 longitude of the track object, in degrees. -180 to 180 degrees (negative
     * values west of Prime Meridian).
     */
    lon: number;

    /**
     * Source of the data.
     */
    source: string;

    /**
     * Track timestamp in ISO8601 UTC format with microsecond precision.
     */
    ts: string;

    /**
     * Unique identifier of the record, auto-generated by the system.
     */
    id?: string;

    /**
     * Subtype is a finer grain categorization of missile types. Examples include but
     * are not limited to SRBM, MRBM, IRBM, LRBM, ICBM, SLBM:
     *
     * SRBM - Short-Range Ballistic Missile
     *
     * MRBM - Medium-Range Ballistic Missile
     *
     * IRBM - Intermediate-Range Ballistic Missile
     *
     * LRBM - Long-Range Ballistic Missile
     *
     * ICBM - Intercontinental Ballistic Missile
     *
     * SLBM - Submarine-Launched Ballistic Missile.
     */
    acftSubType?: string;

    /**
     * A text amplifier for units, equipment and installations; content is
     * implementation specific.
     */
    addInfo?: string;

    /**
     * A track may be designated as an alert track with the following designations:
     *
     * HIT - High Interest Track
     *
     * TGT - Target
     *
     * SUS - Suspect Carrier
     *
     * NSP - Cleared Suspect
     *
     * If alert is null, the track is assumed to be of non-alert status.
     */
    alert?: string;

    /**
     * Track point altitude relative to WGS-84 ellipsoid, in meters. Positive values
     * indicate a track object height above ellipsoid, and negative values indicate a
     * track object below ellipsoid, applicable to the depth estimate for a subsurface
     * track.
     */
    alt?: number;

    /**
     * The angle formed between the line of sight of the observer and the horizon, in
     * degrees. The angular range is -90 to 90, with negative values representing angle
     * of depression.
     */
    angElev?: number;

    /**
     * The reference dimensions of the vessel, reported as [A, B, C, D], in meters.
     * Where the array values represent the distance fore (A), aft (B), to port (C),
     * and to starboard (D) of the navigation antenna. Array with values A = C = 0 and
     * B, D > 0 indicate the length (B) and width (D) of the vessel without antenna
     * position reference.
     */
    antennaRefDimensions?: Array<number>;

    /**
     * Three element array representing an Area of Uncertainty (AoU). The array element
     * definitions and units are type specific depending on the aouRptType specified in
     * this record:
     *
     * ELLIPSE:
     *
     * brg - orientation in degrees of the ellipse
     *
     * a1 - semi-major axis in meters
     *
     * a2 - semi-minor axis in meters
     *
     * BEARING (BEARING BOX or MTST BEARING BOX):
     *
     * brg - orientation in degrees of the bearing box
     *
     * a1 - length of bearing box in meters
     *
     * a2 - half-width of bearing box in meters
     *
     * OTHER (All other type values):
     *
     * brg - line of bearing in degrees true
     *
     * a1 - bearing error in degrees
     *
     * a2 - estimated range in meters.
     */
    aouRptData?: Array<number>;

    /**
     * The track Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER) definition.
     * This type defines the elements of the aouRptData array and is required if
     * aouRptData is not null. See the aouRptData field definition for specific
     * information.
     */
    aouRptType?: string;

    /**
     * Appearance group code.
     *
     * GP1 - Superstructure exceeds 1/3 of ship length.
     *
     * GP2 - Superstructure less than 1/3 of ship length.
     *
     * GP3 - Stack aft.
     */
    appGrp?: string;

    /**
     * The reported arrival cargo type. Intended as, but not constrained to, the USCG
     * NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    arrCargo?: string;

    /**
     * The flag of the arrival port.
     */
    arrFlag?: string;

    /**
     * The Arrival Port of the vessel according to the AIS transmission.
     */
    arrPort?: string;

    /**
     * The Arrival Time of the vessel at the destination, in ISO 8601 UTC format with
     * microsecond precision.
     */
    arrTime?: string;

    /**
     * Type of Aid to Navigation. Intended as, but not constrained to, the USCG NAVCEN
     * aids to navigation. Users should refer to USCG Navigation Center documentation
     * for specific device type information. USCG NAVCEN documentation may be found at
     * https://www.navcen.uscg.gov.
     */
    aton?: string;

    /**
     * The average speed, in kilometers/hour, calculated for the subject during the
     * latest voyage/excursion.
     */
    avgSpd?: number;

    /**
     * Azimuth corridor arc distance measured in meters from reference point of azimuth
     * corridor to far edge of bounded azimuth corridor wedge, measured along azimuth
     * corridor center line.
     */
    azCorrArcWidth?: number;

    /**
     * The azimuth corridor centerline angle measured in degrees clockwise from true
     * north, of the center line of an azimuth corridor. The center line extends from
     * the referenced corridor origin location.
     */
    azCorrCenterLine?: number;

    /**
     * The Basic Encyclopedia (BE) number associated with this installation or area.
     */
    beNumber?: string;

    /**
     * Flag indicating that the missile is currently in a state of boosting, if
     * reporting a missile track.
     */
    boosting?: boolean;

    /**
     * Track point burnout altitude relative to WGS-84 ellipsoid, in meters.
     */
    burnoutAlt?: number;

    /**
     * The call sign currently assigned to this track object.
     */
    callSign?: string;

    /**
     * The reported cargo type. Intended as, but not constrained to, the USCG NAVCEN
     * AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    cargoType?: string;

    /**
     * Correlation Index; reference code for the site that originally reported the
     * track.
     */
    cI?: string;

    /**
     * The Area Of Uncertainty (AOU) percentage (0 - 100) containment value. The
     * percentage of time (90%) that the estimated area of uncertainty will cover the
     * true position of the track object.
     */
    containment?: number;

    /**
     * The Cooperative Location Indicator specifies whether the reported entity
     * location was derived using reported locations from sensors on more than one
     * platform.
     *
     * 0 - COOPERATIVE_LOCATOR_NONE
     *
     * 1 - SINGLE_PLATFORM
     *
     * 2 - FRAGMENT
     *
     * 3 - COOPERATIVE.
     */
    coopLocInd?: string;

    /**
     * The track object course-over-ground, in degrees clockwise from true North at the
     * object location (0-360 degrees).
     */
    course?: number;

    /**
     * The distance, in meters, of the closest point of approach between this track to
     * the master reference track.
     */
    cpa?: number;

    /**
     * The reported departure cargo type. Intended as, but not constrained to, the USCG
     * NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    depCargo?: string;

    /**
     * The flag of the departure port.
     */
    depFlag?: string;

    /**
     * The Departure Port of the vessel according to the AIS transmission.
     */
    depPort?: string;

    /**
     * The reported destination cargo type. Intended as, but not constrained to, the
     * USCG NAVCEN AIS cargo definitions. Users should refer to USCG Navigation Center
     * documentation for specific definitions associated with ship and cargo types.
     * USCG NAVCEN documentation may be found at https://www.navcen.uscg.gov.
     */
    desCargo?: string;

    /**
     * The flag of the destination port.
     */
    desFlag?: string;

    /**
     * The destination of the vessel according to the AIS transmission.
     */
    destination?: string;

    /**
     * The Intel Discrete Identifier (IDI) code assigned to this track. The IDI is a
     * four-digit code representing hostile or unknown tracks.
     */
    disId?: string;

    /**
     * The maximum static draught, in meters, of the vessel according to the AIS
     * transmission.
     */
    draught?: number;

    /**
     * The drop-point indicator setting.
     */
    dropPtInd?: boolean;

    /**
     * Flag indicating that this track represents a dummy object or group. Identifies
     * offensive or defensive units, equipment, and/or installations intended to draw
     * the enemy's attention away from the area of the main attack. Based on
     * MIL-STD-2525 symbology definitions.
     */
    dummy?: boolean;

    /**
     * Track object location in ECEF [x, y, z], meters. When provided, array must
     * always contain 3 values.
     */
    ecefPos?: Array<number>;

    /**
     * Track object velocity in ECEF [x', y', z'], meters/sec. When provided, array
     * must always contain 3 values.
     */
    ecefVel?: Array<number>;

    /**
     * Primary ELINT Notification (ELNOT), a five character identifier assigned to each
     * non-communication emission for collection and reporting purposes. This
     * five-digit field begins with an alpha character, followed by three numbers,
     * ending with another alpha character.
     */
    elnot1?: string;

    /**
     * Secondary ELINT Notification (ELNOT), a five character identifier assigned to
     * each non-communication emission for collection and reporting purposes. This
     * five-digit field begins with an alpha character, followed by three numbers,
     * ending with another alpha character.
     */
    elnot2?: string;

    /**
     * Flag indicating that the track object has an emergency.
     */
    emgInd?: boolean;

    /**
     * Radar name of the sensor tracking this object (e.g., RAY1500, SPN-43, HEADNET).
     */
    emitterName?: string;

    /**
     * The track environment type (AIR, LAND, SPACE, SUBSURFACE, SURFACE, UNKNOWN):
     *
     * AIR: Between sea level and the Kármán line, which has an altitude of 100
     * kilometers (62 miles).
     *
     * LAND: On the surface of dry land.
     *
     * SPACE: Above the Kármán line, which has an altitude of 100 kilometers (62
     * miles).
     *
     * SURFACE: On the surface of a body of water.
     *
     * SUBSURFACE: Below the surface of a body of water.
     *
     * UNKNOWN: Environment is not known.
     */
    env?: 'AIR' | 'LAND' | 'SPACE' | 'SURFACE' | 'SUBSURFACE' | 'UNKNOWN';

    /**
     * The error in the Area Orientation. Area Orientation is the angle or roll in
     * degrees, between area semi-minor axis and plane defined by local vertical and
     * area semi-major axis. When reported without major and minor axis, it is angle
     * between an axis perpendicular to a 2D true north axis and plane defined by local
     * vertical and a 2D true north axis.
     */
    errAreaOrient?: number;

    /**
     * Geometric area switch identifies the 3D shape of the error volume by providing
     * the 2D shape for the 3D plane. The 3D plane is the plane orthogonal to the area
     * semi-major axis and area semi-minor axis. Depending on whether the 2D plane is
     * reported as an error ellipse 2D or as an error rectangle 2D, this switch reports
     * a complete error volume that is cubical, 3D rectangular, cylindrical, 3D
     * ellipsoidal, or spherical.
     *
     * 0 - SWITCH_TYPE_UNKNOWN
     *
     * 1 - SQUARE_RECTANGLE
     *
     * 2 - CIRCLE_ELLIPSE.
     */
    errGeoAreaSwitch?: string;

    /**
     * The error in the semi-intermediate axis. The semi-intermediate axis is
     * intermediate in length between semi-major and semi-minor axes. This field is
     * doubled and centered on intersection of area semi-major axis and area semi-minor
     * axis at 90 degrees to the plane defined by those axes. For these shapes, the
     * volume is defined as having a 50-percent probability of containing the true
     * location of the referenced entity.
     */
    errSemiIntAxis?: number;

    /**
     * The error in the Semi-major elevation axis. Semi-major elevation axis is the
     * elevation of the cubical, 3D rectangular, cylindrical, 3D ellipsoidal, or
     * spherical semi-major axis, in degrees, measured from local horizontal.
     */
    errSemiMajElev?: number;

    /**
     * The Estimated Time of Arrival of the vessel at the destination port, in ISO 8601
     * UTC format with microsecond precision.
     */
    eta?: string;

    /**
     * The Estimated Time of Departure of the vessel from the departure port (depPort),
     * according to Marine Traffic calculations, in ISO 8601 UTC format with
     * microsecond precision.
     */
    etd?: string;

    /**
     * A text amplifier code for units, equipment, and installations that consists of a
     * one-letter reliability rating and a one-number credibility rating based on the
     * following definitions of each:
     *
     * Reliability Ratings:
     *
     * A-completely reliable
     *
     * B-usually reliable
     *
     * C-fairly reliable
     *
     * D-not usually reliable
     *
     * E-unreliable
     *
     * F-reliability cannot be judged
     *
     * Credibility Ratings:
     *
     * 1-confirmed by other sources
     *
     * 2-probably true
     *
     * 3-possibly true
     *
     * 4-doubtfully true
     *
     * 5-improbable
     *
     * 6-truth cannot be judged.
     */
    evalRating?: string;

    /**
     * Flag indicating that this track represents a feint object or group. Identifies
     * offensive or defensive units, equipment, and/or installations intended to draw
     * the enemy's attention away from the area of the main attack. Based on
     * MIL-STD-2525 symbology definitions.
     */
    feint?: boolean;

    /**
     * Frequency, in hertz, for the signature report.
     */
    freq?: number;

    /**
     * An ftn used to associate information and directives with the track.
     */
    ftn?: string;

    /**
     * The name of the Command reporting the Force Over-The-Horizon Track Coordinator
     * (FOTC) track number.
     */
    ftnCmd?: string;

    /**
     * The message timestamp that the ftn track position was recorded, in ISO 8601 UTC
     * format with microsecond precision.
     */
    ftnMsgTs?: string;

    /**
     * List of harmonics of the signature report in descending order of predominance
     * using 1-2 digit combinations separated by commas, e.g., 8,12,4. (1-22NS).
     */
    harmonics?: string;

    /**
     * Track object heading, in degrees clockwise from true north.
     */
    hdng?: number;

    /**
     * Flag indicating that this track represents a headquarters object. Based on
     * MIL-STD-2525 symbology definitions.
     */
    hq?: boolean;

    /**
     * The vessel hull number designation of this maritime vessel. The hull number is a
     * 1-6 character alphanumeric entry assigned to a ship and painted on the hull.
     */
    hullNum?: string;

    /**
     * Hull profile code. Based on GCCS-J hull profiles.
     *
     * FLUSH No breaks in Hull Profile.
     *
     * RAISED 1 Hull Profile shows distinct raised area at bow. Remainder of deck is
     * flush.
     *
     * RAISED 2 Hull Profile shows distinct raised area amidships. Bow and stern are
     * flush.
     *
     * RAISED 3 Hull Profile shows distinct raised area at stern. Remainder of deck is
     * flush.
     *
     * RAISED 1-2-3 Distinct raised areas at bow, midships, and stern with breaks
     * between each raise.
     *
     * RAISED 1-2 Raised area at bow and midships with break between.
     *
     * RAISED 1-3 Raised area at bow and stern with break between.
     *
     * RAISED 12 Continuous raised area encompassing both bow and midships.
     *
     * RAISED 23 Continuous raised area encompassing midships and stern.
     *
     * RAISED 12-3 Raised areas at bow, midships and stern. Bow and midship raises are
     * continuous. Break between midship and stern raises.
     *
     * RAISED 1-23 Raised areas at bow, midships, and stern. Midship and stern raises
     * are continuous with break between bow and midship raises.
     *
     * RAISED 1-L2-3 Raised areas at bow, midships, and stern with break between each
     * raise. Midships raise is longer than that associated with raised 1-2-3.
     */
    hullProf?: string;

    /**
     * Additional track object identity/status information, typically used for EXERCISE
     * identity amplification (FAKER, JOKER, KILO, TRAVELLER, ZOMBIE):
     *
     * FAKER: Friendly track, object, or entity acting as an exercise hostile.
     *
     * JOKER: Friendly track, object, or entity acting as an exercise suspect.
     *
     * KILO: Friendly high-value object.
     *
     * TRAVELLER: Suspect land or surface track following a recognized traffic route.
     *
     * ZOMBIE: Suspect track, object, or entity of special interest.
     */
    identAmp?: string;

    /**
     * A text amplifier displaying IFF/SIF/AIS Identification modes and codes.
     */
    iff?: string;

    /**
     * The International Maritime Organization Number of the vessel. IMON is a
     * seven-digit number that uniquely identifies the vessel.
     */
    imon?: number;

    /**
     * Three element array representing the impact point Area of Uncertainty (AoU). The
     * array element definitions and units are type specific depending on the
     * impactAouType specified in this record:
     *
     * ELLIPSE:
     *
     * brg - orientation in degrees of the ellipse
     *
     * a1 - semi-major axis in meters
     *
     * a2 - semi-minor axis in meters
     *
     * BEARING (BEARING BOX or MTST BEARING BOX):
     *
     * brg - orientation in degrees of the bearing box
     *
     * a1 - length of bearing box in meters
     *
     * a2 - half-width of bearing box in meters
     *
     * OTHER (All other type values):
     *
     * brg - line of bearing in degrees true
     *
     * a1 - bearing error in degrees
     *
     * a2 - estimated range in meters.
     */
    impactAouData?: Array<number>;

    /**
     * The impact point Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER)
     * definition. This type defines the elements of the impactAouData array and is
     * required if impactAouData is not null. See the impactAouData field definition
     * for specific information.
     */
    impactAouType?: string;

    /**
     * WGS-84 latitude of the missile impact point, in degrees. -90 to 90 degrees
     * (negative values south of equator).
     */
    impactLat?: number;

    /**
     * WGS-84 longitude of the missile impact point, in degrees. -180 to 180 degrees
     * (negative values west of Prime Meridian).
     */
    impactLon?: number;

    /**
     * Missile impact timestamp in ISO8601 UTC format with microsecond precision.
     */
    impactTime?: string;

    /**
     * Source code for source of information used to detect track.
     */
    infoSource?: string;

    /**
     * Flag indicating that this track represents an installation. Based on
     * MIL-STD-2525 symbology definitions.
     */
    installation?: boolean;

    /**
     * Three element array representing the launch location Area of Uncertainty (AoU).
     * The array element definitions and units are type specific depending on the
     * launchAouType specified in this record:
     *
     * ELLIPSE:
     *
     * brg - orientation in degrees of the ellipse
     *
     * a1 - semi-major axis in meters
     *
     * a2 - semi-minor axis in meters
     *
     * BEARING (BEARING BOX or MTST BEARING BOX):
     *
     * brg - orientation in degrees of the bearing box
     *
     * a1 - length of bearing box in meters
     *
     * a2 - half-width of bearing box in meters
     *
     * OTHER (All other type values):
     *
     * brg - line of bearing in degrees true
     *
     * a1 - bearing error in degrees
     *
     * a2 - estimated range in meters.
     */
    launchAouData?: Array<number>;

    /**
     * The launch location Area of Uncertainty (AoU) type (BEARING, ELLIPSE, OTHER)
     * definition. This type defines the elements of the launchAouData array and is
     * required if launchAouData is not null. See the launchAouData field definition
     * for specific information.
     */
    launchAouType?: string;

    /**
     * WGS-84 latitude of the missile launch point, in degrees. -90 to 90 degrees
     * (negative values south of equator).
     */
    launchLat?: number;

    /**
     * WGS-84 longitude of the missile launch point, in degrees. -180 to 180 degrees
     * (negative values west of Prime Meridian).
     */
    launchLon?: number;

    /**
     * Missile launch timestamp in ISO8601 UTC format with microsecond precision.
     */
    launchTime?: string;

    /**
     * The overall length of the vessel, in meters. A value of 511 indicates a vessel
     * length of 511 meters or greater.
     */
    length?: number;

    /**
     * Flag indicating whether the missile is considered lost, if reporting a missile
     * track.
     */
    lostTrkInd?: boolean;

    /**
     * The manuevering indicator specifying the missile boost phase.
     *
     * 0 - POST_BOOST_NONE
     *
     * 1 - POST_BOOST_MANUEVER
     *
     * 2 - POST_BOOST_COMPLETE_MANUEVER.
     */
    maneuverInd?: string;

    /**
     * Maximum frequency, in hertz, reported for this acoustic track.
     */
    maxFreq?: number;

    /**
     * The category code that represents the associated facility purpose within the
     * target system. This value is the category code in the MIDB (Modernized
     * Intelligence Database).
     */
    midbCat?: string;

    /**
     * The MIL-STD-2525B symbology code that applies to the subject of this track.
     */
    mil2525Bstr?: string;

    /**
     * The Maritime Mobile Service Identity of the vessel. MMSI is a nine-digit number
     * that identifies the transmitter station of the vessel.
     */
    mmsi?: number;

    /**
     * Optional message type designation.
     */
    msgType?: string;

    /**
     * The status of the missile track in this record, if reporting a missile track
     * (e.g. AT LAUNCH, AT OBSERVATION, FLYING, IMPACTED, LOST, STALE, DEBRIS).
     */
    mslStatus?: string;

    /**
     * Source of the Missile-Unique Identifier (MUID), if reporting a missile track.
     */
    muidSrc?: string;

    /**
     * Track ID for the source of the Missile-Unique Identifier (MUID), if reporting a
     * missile track.
     */
    muidSrcTrk?: string;

    /**
     * Track name.
     */
    name?: string;

    /**
     * The AIS Navigational Status of the vessel (e.g. Underway Using Engine, Moored,
     * Aground, etc.). Intended as, but not constrained to, the USCG NAVCEN navigation
     * status definitions. Users should refer to USCG Navigation Center documentation
     * for specific definitions associated with navigation status. USCG NAVCEN
     * documentation may be found at https://www.navcen.uscg.gov.
     */
    navStatus?: string;

    /**
     * The Naval Tactical Data System (NTDS) track number assigned to this track.
     */
    ntds?: string;

    /**
     * The number of blades per shaft of the track object. Applicable for maritime
     * vessels.
     */
    numBlades?: number;

    /**
     * The number of shafts on the track object. Applicable for maritime vessels.
     */
    numShafts?: number;

    /**
     * The activity in which the track object is engaged. Intended as, but not
     * constrained to, MIL-STD-6016 environment dependent activity designations. The
     * activity can be reported as either a combination of the code and environment
     * (e.g. 65/AIR) or as the descriptive enumeration (e.g. DIVERTING), which are
     * equivalent. For cases in which no MIl-STD-6016 designation exists, a general
     * description can be used (e.g. ANTISPACE WARFARE).
     */
    objAct?: string;

    /**
     * The estimated identity of the track object (ASSUMED FRIEND, FRIEND, HOSTILE,
     * NEUTRAL, PENDING, SUSPECT, UNKNOWN):
     *
     * ASSUMED FRIEND: Track assumed to be a friend due to the object characteristics,
     * behavior, and/or origin.
     *
     * FRIEND: Track object supporting friendly forces and belonging to a declared
     * friendly nation or entity.
     *
     * HOSTILE: Track object belonging to an opposing nation, party, group, or entity
     * deemed to contribute to a threat to friendly forces or their mission due to its
     * behavior, characteristics, nationality, or origin.
     *
     * NEUTRAL: Track object whose characteristics, behavior, nationality, and/or
     * origin indicate that it is neither supporting nor opposing friendly forces or
     * their mission.
     *
     * PENDING: Track object which has not been evaluated.
     *
     * SUSPECT: Track object deemed potentially hostile due to the object
     * characteristics, behavior, nationality, and/or origin.
     *
     * UNKNOWN: Track object which has been evaluated and does not meet criteria for
     * any standard identity.
     */
    objIdent?: 'ASSUMED FRIEND' | 'FRIEND' | 'HOSTILE' | 'NEUTRAL' | 'PENDING' | 'SUSPECT' | 'UNKNOWN';

    /**
     * Nationality of the tracked object.
     */
    objNat?: string;

    /**
     * The object platform type is intended as, but not constrained to, MIL-STD-6016
     * environment dependent platform type designations. The platform type can be
     * reported as either a combination of the code and environment (e.g. 14/LAND) or
     * as the descriptive representations (e.g. COMBAT VEHICLE), which are equivalent.
     * For cases in which no MIl-STD-6016 designation exists, a general description can
     * be used (e.g. SATELLITE).
     */
    objPlat?: string;

    /**
     * The generic classification of the track object/group (e.g., BALLISTIC,
     * HELICOPTER, TRACKED, WATERCRAFT, WHEELED, etc.). Referenced, but not constrained
     * to, NATO STANAG 4676 object type classifications.
     */
    objType?: string;

    /**
     * Indicator position (OFF, ON, UNK) for optional floating navigational aids only.
     */
    offPosInd?: string;

    /**
     * Originating system or organization which produced the data, if different from
     * the source. The origin may be different than the source if the source was a
     * mediating system which forwarded the data on behalf of the origin system. If
     * null, the source may be assumed to be the origin.
     */
    origin?: string;

    /**
     * Original source cross-reference code for the Command that originated the report.
     */
    origXref?: string;

    /**
     * The O-suffix associated with this facility. The O-suffix is a five-character
     * alpha/numeric system used to identify a facility, or demographic area, within an
     * installation. The Installation Basic Encyclopedia (beNumber), in conjunction
     * with the O-suffix, uniquely identifies the facility within the Modernized
     * Integrated Database (MIDB). The Installation beNumber and oSuffix are also used
     * in conjunction with the midbCat code to classify the function or purpose of the
     * facility.
     */
    oSuffix?: string;

    /**
     * The Pseudo Identification Feature (PIF) number is a four digit code that
     * provides an exact ID for the ship or aircraft. Friendly military only.
     */
    pif?: string;

    /**
     * This value represents the site number of a specific electronic site or its
     * associated equipment.
     */
    pin?: string;

    /**
     * WGS-84 azimuth corridor reference point latitude, in degrees. -90 to 90 degrees
     * (negative values south of equator).
     */
    polarSingLocLat?: number;

    /**
     * WGS-84 azimuth corridor reference point longitude, in degrees. -180 to 180
     * degrees (negative values west of Prime Meridian).
     */
    polarSingLocLon?: number;

    /**
     * The type of electronic position fixing device (e.g. GPS, GLONASS, etc.).
     * Intended as, but not constrained to, the USCG NAVCEN electronic position fixing
     * device definitions. Users should refer to USCG Navigation Center documentation
     * for specific device type information. USCG NAVCEN documentation may be found at
     * https://www.navcen.uscg.gov.
     */
    posDeviceType?: string;

    /**
     * Pulse repetition frequency of the emitter, measured in pulses per second. PRF is
     * the number of pulses transmitted per second. This is the reciprocal of the pri
     * value.
     */
    prf?: number;

    /**
     * Pulse repetition interval of the emitter, measured in microseconds. The interval
     * between the start of one pulse and the start of another.
     */
    pri?: number;

    /**
     * The number of propeller revolutions per minute for a submarine or ship.
     */
    propRPM?: number;

    /**
     * The type of propulsion employed by the track object (Diesel, Nuclear).
     */
    propType?: string;

    /**
     * Pulse width of the emitter, measured in microseconds. This is the duration of
     * the pulse.
     */
    pw?: number;

    /**
     * Flag indicating for the track represents a reduced force object or group. Based
     * on MIL-STD-2525 symbology definitions.
     */
    reduced?: boolean;

    /**
     * Flag indicating that this track represents a reinforced object or group. Based
     * on MIL-STD-2525 symbology definitions.
     */
    reinforced?: boolean;

    /**
     * Flag indicating whether this track is archived.
     */
    rptArchived?: boolean;

    /**
     * Source cross-reference code for the Command that originated the track report.
     */
    rptChxref?: string;

    /**
     * A Reference Track Number used to associate information and directives with the
     * track. Referenced, but not constrained to, MIL-STD-6016F Reference Track Number.
     * The 'rtnMsgTs' and 'rtn' arrays must match in size.
     */
    rtn?: Array<string>;

    /**
     * The name of the Command reporting the Received Track Number (RTN).
     */
    rtnCmd?: string;

    /**
     * The message timestamp that the reference track position was recorded, in ISO
     * 8601 UTC format with microsecond precision. The 'rtnMsgTs' and 'rtn' arrays must
     * match in size.
     */
    rtnMsgTs?: Array<string>;

    /**
     * Value representing the state of the Received Track.
     */
    rtnTrkState?: string;

    /**
     * Scan rate of the emitter, measured in seconds per rotation (SPR).
     */
    scanRate?: number;

    /**
     * Type of radar scan.
     */
    scanType?: string;

    /**
     * The Sequential Contact Number (SCN) for this track.
     */
    scn?: number;

    /**
     * The Ship Control Number (SCONUM) is a naval vessel identification number
     * (alphanumeric code) assigned by the Office of Naval Intelligence. SCONUM is
     * sometimes referred to as NOIC ID. SCONUMs are typically of the form A#####,
     * where A is an alpha character and # is numerical.
     */
    sconum?: string;

    /**
     * Flag indicating that this track is self reported.
     */
    selfReport?: boolean;

    /**
     * Id/name of sensor providing the track data.
     */
    sen?: string;

    /**
     * The common name for a group of ships with similar design, usually named for the
     * first vessel of the class.
     */
    shipClass?: string;

    /**
     * Abbreviated track name.
     */
    shortName?: string;

    /**
     * The unique identifier of the source node.
     */
    sourceUid?: string;

    /**
     * Space amplification indicates additional information on the space environment
     * object being reported (e.g. DEBRIS, FUEL-AIR EXPLOSIVE, NUCLEAR WARHEAD).
     */
    spaceAmp?: string;

    /**
     * Confidence level of the amplifying characteristics. Values range from 0 to 6,
     * with 0 indicating the lowest confidence and 6 indicating the highest.
     */
    spaceAmpConf?: number;

    /**
     * Specific type of point or track with an environment of space.
     */
    spaceSpecType?: string;

    /**
     * Track object speed, in meters/sec.
     */
    spd?: number;

    /**
     * A text amplifier for units, equipment and installations; content is
     * implementation specific.
     */
    staffCmts?: string;

    /**
     * The stern type code (Counter, Cruiser) associated with the track object.
     */
    sternType?: string;

    /**
     * Flag indicating that this track represents a task force. Based on MIL-STD-2525
     * symbology definitions.
     */
    taskForce?: boolean;

    /**
     * The time, in ISO 8601 UTC format with millisecond precision, of the closest
     * point of approach between this track and the master reference track.
     */
    tcpa?: string;

    /**
     * Threat Event System Track ID.
     */
    tesEventId?: string;

    /**
     * Motion model Time On Leg in hours.
     */
    tol?: number;

    /**
     * The number of turns of the vessel propellers per knot of forward motion.
     */
    tpk?: number;

    /**
     * Overall track confidence estimate (not standardized, but typically a value
     * between 0 and 1, with 0 indicating lowest confidence).
     */
    trkConf?: number;

    /**
     * UUID identifying the track, which should remain the same on subsequent tracks of
     * the same object.
     */
    trkId?: string;

    /**
     * The track number (TN) of a surveillance entity. Intended as, but not constrained
     * to, the J-series track number encoded as five character alpha-numeric
     * characters. Users should refer to J-series documentation for specific TN
     * definitions.
     */
    trkNum?: string;

    /**
     * Track Quality is reported as an integer from 0-15. Track Quality specifies the
     * reliability of the positional information of a reported track; Higher values
     * indicate higher track quality, i.e., lower errors in reported position.
     */
    trkQual?: number;

    /**
     * Value Indicating the scope of this track: 1 - TERMINAL (Terminal) - available
     * only on the workstation where they were created. 2 - LOCAL (Local) - available
     * only on workstations in the local area network 3 - OTH (Over the Horizon) -
     * available to everyone.
     */
    trkScope?: string;

    /**
     * Transponder ID for the track. This does not correspond to the UDL transponder
     * schema.
     */
    trnspdrId?: string;

    /**
     * Transponder type for the track.
     */
    trnspdrType?: string;

    /**
     * The weight, in tons, of the vessel associated with this track.
     */
    vslWt?: number;

    /**
     * The breadth of the vessel, in meters. A value of 63 indicates a vessel breadth
     * of 63 meters or greater.
     */
    width?: number;
  }
}

export interface TrackdetailTupleParams {
  /**
   * Comma-separated list of valid field names for this data type to be returned in
   * the response. Only the fields specified will be returned as well as the
   * classification marking of the data, if applicable. See the ‘queryhelp’ operation
   * for a complete list of possible fields.
   */
  columns: string;

  /**
   * Track timestamp in ISO8601 UTC format with microsecond precision.
   * (YYYY-MM-DDTHH:MM:SS.ssssssZ)
   */
  ts: string;
}

Trackdetails.History = History;

export declare namespace Trackdetails {
  export {
    type TrackdetailListResponse as TrackdetailListResponse,
    type TrackdetailCountResponse as TrackdetailCountResponse,
    type TrackdetailTupleResponse as TrackdetailTupleResponse,
    type TrackdetailListParams as TrackdetailListParams,
    type TrackdetailCountParams as TrackdetailCountParams,
    type TrackdetailCreateBulkParams as TrackdetailCreateBulkParams,
    type TrackdetailTupleParams as TrackdetailTupleParams,
  };

  export {
    History as History,
    type TrackDetailsFull as TrackDetailsFull,
    type HistoryListResponse as HistoryListResponse,
    type HistoryCountResponse as HistoryCountResponse,
    type HistoryListParams as HistoryListParams,
    type HistoryAodrParams as HistoryAodrParams,
    type HistoryCountParams as HistoryCountParams,
  };
}
