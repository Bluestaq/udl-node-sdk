// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../../../resource';

export class History extends APIResource {}

/**
 * Captures link status.
 */
export interface LinkStatusFull {
  /**
   * Classification marking of the data in IC/CAPCO Portion-marked format.
   */
  classificationMarking: string;

  /**
   * Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:
   *
   * EXERCISE:&nbsp;Data pertaining to a government or military exercise. The data
   * may include both real and simulated data.
   *
   * REAL:&nbsp;Data collected or produced that pertains to real-world objects,
   * events, and analysis.
   *
   * SIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world
   * datasets.
   *
   * TEST:&nbsp;Specific datasets used to evaluate compliance with specifications and
   * requirements, and for validating technical, functional, and performance
   * characteristics.
   */
  dataMode: 'REAL' | 'TEST' | 'SIMULATED' | 'EXERCISE';

  /**
   * Latitude of link endpoint-1, WGS-84 in degrees. -90 to 90 degrees (negative
   * values south of equator).
   */
  endPoint1Lat: number;

  /**
   * Longitude of link endpoint-1, WGS-84 longitude in degrees. -180 to 180 degrees
   * (negative values west of Prime Meridian).
   */
  endPoint1Lon: number;

  /**
   * The name or description of link endpoint-1, corresponding to beam-1.
   */
  endPoint1Name: string;

  /**
   * Latitude of link endpoint-2, WGS-84 in degrees. -90 to 90 degrees (negative
   * values south of equator).
   */
  endPoint2Lat: number;

  /**
   * Longitude of link endpoint-2, WGS-84 longitude in degrees. -180 to 180 degrees
   * (negative values west of Prime Meridian).
   */
  endPoint2Lon: number;

  /**
   * The name or description of link endpoint-2, corresponding to beam-2.
   */
  endPoint2Name: string;

  /**
   * The name or description of the link.
   */
  linkName: string;

  /**
   * The link establishment time, or the time that the link becomes available for
   * use, in ISO8601 UTC format.
   */
  linkStartTime: string;

  /**
   * The link termination time, or the time that the link becomes unavailable for
   * use, in ISO8601 UTC format.
   */
  linkStopTime: string;

  /**
   * Source of the data.
   */
  source: string;

  /**
   * Unique identifier of the record, auto-generated by the system.
   */
  id?: string;

  /**
   * The RF band employed by the link (e.g. MIL-KA, COM-KA, X-BAND, C-BAND, etc.).
   */
  band?: string;

  /**
   * The constellation name if the link is established over a LEO/MEO constellation.
   * In this case, idOnOrbit1 and idOnOrbit2 will be null.
   */
  constellation?: string;

  /**
   * Time the row was created in the database, auto-populated by the system.
   */
  createdAt?: string;

  /**
   * Application user who created the row in the database, auto-populated by the
   * system.
   */
  createdBy?: string;

  /**
   * The endpoint-1 to endpoint-2 data rate, in kbps.
   */
  dataRate1To2?: number;

  /**
   * The endpoint-2 to endpoint-1 data rate, in kbps.
   */
  dataRate2To1?: number;

  /**
   * The ID of beam-1 forming the link. In the case of two sat link, beam-1
   * corresponds to Sat-1.
   */
  idBeam1?: string;

  /**
   * The ID of beam-2 forming the link. In the case of two sat link, beam-2
   * corresponds to Sat-2.
   */
  idBeam2?: string;

  /**
   * Unique ID of the on-orbit satellite (Sat-1) forming the link. A null value for
   * idOnOrbit1 indicates that the link is formed over a LEO/MEO constellation.
   */
  idOnOrbit1?: string;

  /**
   * Unique ID of the on-orbit satellite (Sat-2) forming the link. A null value for
   * idOnOrbit2 indicates either a link employing only Sat-1 or a link formed over a
   * LEO/MEO constellation.
   */
  idOnOrbit2?: string;

  /**
   * The state of the link (e.g. OK, DEGRADED-WEATHER, DEGRADED-EMI, etc.).
   */
  linkState?: string;

  /**
   * The type of the link.
   */
  linkType?: string;

  /**
   * The OPSCAP mission status of the system(s) forming the link.
   */
  opsCap?: string;

  /**
   * Originating system or organization which produced the data, if different from
   * the source. The origin may be different than the source if the source was a
   * mediating system which forwarded the data on behalf of the origin system. If
   * null, the source may be assumed to be the origin.
   */
  origin?: string;

  /**
   * The originating source network on which this record was created, auto-populated
   * by the system.
   */
  origNetwork?: string;

  /**
   * Satellite/catalog number of the target on-orbit primary object.
   */
  satNo1?: number;

  /**
   * Satellite/catalog number of the target on-orbit secondary object.
   */
  satNo2?: number;

  /**
   * The SYSCAP mission status of the system(s) forming the link.
   */
  sysCap?: string;
}

export declare namespace History {
  export { type LinkStatusFull as LinkStatusFull };
}
