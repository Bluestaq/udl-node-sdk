// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'dropzone',
  operation: 'write',
  tags: [],
  httpMethod: 'put',
  httpPath: '/udl/dropzone/{id}',
};

export const tool: Tool = {
  name: 'update_dropzone',
  description:
    'Service operation to update a single dropzone record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.',
  inputSchema: {
    type: 'object',
    properties: {
      path_id: {
        type: 'string',
      },
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      lat: {
        type: 'number',
        description:
          'WGS84 latitude of the drop zone, in degrees. -90 to 90 degrees (negative values south of equator).',
      },
      lon: {
        type: 'number',
        description:
          'WGS84 longitude of the drop zone, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).',
      },
      name: {
        type: 'string',
        description: 'The name of the drop zone.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      body_id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      altCountryCode: {
        type: 'string',
        description:
          'Specifies an alternate country code for the drop zone if the data provider code is not part of an official Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.',
      },
      altCountryName: {
        type: 'string',
        description: 'Specifies the country name associated with the source provided alternate country code.',
      },
      approvalDate: {
        type: 'string',
        description:
          'The date the drop zone survey was approved, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      code: {
        type: 'string',
        description: 'The type code for the drop zone.',
      },
      countryCode: {
        type: 'string',
        description:
          'The Country Code where the drop zone is located. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDLâ€™s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.',
      },
      countryName: {
        type: 'string',
        description: 'The country name of the location for the drop zone.',
      },
      expirationDate: {
        type: 'string',
        description:
          'The survey expiration date of the drop zone, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      extIdentifier: {
        type: 'string',
        description: 'The external identifier assigned to the drop zone.',
      },
      idSite: {
        type: 'string',
        description: 'The ID of the site associated with the drop zone.',
      },
      lastUpdate: {
        type: 'string',
        description:
          'Last time the drop zone information was updated, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      length: {
        type: 'number',
        description: 'The length dimension of the drop zone in meters for non-circular drop zones.',
      },
      majcom: {
        type: 'string',
        description: 'The Major Command (MAJCOM) responsible for management of the drop zone.',
      },
      nearestLoc: {
        type: 'string',
        description: 'The nearest reference location to the drop zone.',
      },
      operationalApprovalDate: {
        type: 'string',
        description:
          'The approval date for the drop zone by an air drop authority certifying operational usage, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
      pointName: {
        type: 'string',
        description: 'The name assigned to the drop zone point.',
      },
      radius: {
        type: 'number',
        description: 'The radius dimension of the drop zone in meters for circular drop zones.',
      },
      recertDate: {
        type: 'string',
        description:
          'The date the drop zone was recertified, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      remark: {
        type: 'string',
        description: 'Remarks concerning the drop zone.',
      },
      stateAbbr: {
        type: 'string',
        description: 'The US alphabetical code for the state where the drop zone is located.',
      },
      stateName: {
        type: 'string',
        description: 'The name of the state where the drop zone is located.',
      },
      surveyDate: {
        type: 'string',
        description:
          'The date the drop zone survey was performed, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      width: {
        type: 'number',
        description: 'The width dimension of the drop zone in meters for non-circular drop zones.',
      },
      zarId: {
        type: 'string',
        description: 'The identifier of the Zone Availability Report (ZAR) for the drop zone.',
      },
    },
    required: ['path_id', 'classificationMarking', 'dataMode', 'lat', 'lon', 'name', 'source'],
  },
  annotations: {
    idempotentHint: true,
  },
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const { id, ...body } = args as any;
  const response = await client.dropzone.update(id, body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
