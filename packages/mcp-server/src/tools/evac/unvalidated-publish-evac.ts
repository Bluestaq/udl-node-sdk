// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'evac',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/filedrop/udl-evac',
  operationId: 'filedrop_udl_evac_post_id',
};

export const tool: Tool = {
  name: 'unvalidated_publish_evac',
  description:
    "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nService operation to take a list of Evac events as a POST body and ingest into the database. Requires a specific role, please contact the UDL team to gain access. This operation is intended to be used for automated feeds into UDL.\n",
  inputSchema: {
    type: 'object',
    properties: {
      body: {
        type: 'array',
        items: {
          type: 'object',
          description:
            'Casualty report and evacuation request. Used to report and request support to evacuate friendly and enemy casualties.',
          properties: {
            classificationMarking: {
              type: 'string',
              description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
            },
            dataMode: {
              type: 'string',
              description:
                'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
              enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
            },
            pickupLat: {
              type: 'number',
              description:
                'WGS-84 latitude of the pickup location, in degrees. -90 to 90 degrees (negative values south of equator).',
            },
            pickupLon: {
              type: 'number',
              description:
                'WGS-84 longitude of the pickup location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).',
            },
            reqTime: {
              type: 'string',
              description: 'The request time, in ISO 8601 UTC format.',
              format: 'date-time',
            },
            source: {
              type: 'string',
              description: 'Source of the data.',
            },
            type: {
              type: 'string',
              description: 'The type of this medevac record (REQUEST, RESPONSE).',
              enum: ['REQUEST', 'RESPONSE'],
            },
            id: {
              type: 'string',
              description: 'Unique identifier of the record, auto-generated by the system.',
            },
            casualtyInfo: {
              type: 'array',
              description: 'Identity and medical information on the patient to be evacuated.',
              items: {
                type: 'object',
                properties: {
                  age: {
                    type: 'integer',
                    description: 'The patient age, in years.',
                  },
                  allergy: {
                    type: 'array',
                    description: 'Allergy information.',
                    items: {
                      type: 'object',
                      properties: {
                        comments: {
                          type: 'string',
                          description: "Additional comments on the  patient's allergy information.",
                        },
                        type: {
                          type: 'string',
                          description: 'Type of patient allergy (e.g.  PENICILLIN, SULFA, OTHER).',
                        },
                      },
                    },
                  },
                  bloodType: {
                    type: 'string',
                    description:
                      'The patient blood type (A POS, B POS, AB POS, O POS, A NEG, B NEG, AB NEG, O NEG).',
                  },
                  bodyPart: {
                    type: 'string',
                    description:
                      'The body part involved for the patient (HEAD, NECK, ABDOMEN, UPPER EXTREMITIES, BACK, FACE, LOWER EXTREMITIES, FRONT, OBSTETRICAL GYNECOLOGICAL, OTHER BODY PART).',
                  },
                  burialLocation: {
                    type: 'array',
                    description:
                      'Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the burial location.  This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).',
                    items: {
                      type: 'number',
                    },
                  },
                  callSign: {
                    type: 'string',
                    description: 'The call sign of this patient.',
                  },
                  careProviderUrn: {
                    type: 'string',
                    description: 'Unique identifier for the patient care provider.',
                  },
                  casualtyKey: {
                    type: 'string',
                    description: 'Optional casualty key.',
                  },
                  casualtyType: {
                    type: 'string',
                    description:
                      'The type of medical issue resulting in the need to evacuate the patient (NON BATTLE, CUT, BURN, SICK, FRACTURE, AMPUTATION, PERFORATION, NUCLEAR, EXHAUSTION, BIOLOGICAL, CHEMICAL, SHOCK, PUNCTURE WOUND, OTHER CUT, WOUNDED IN ACTION, DENIAL, COMBAT STRESS).',
                  },
                  collectionPoint: {
                    type: 'array',
                    description:
                      'Array of the WGS-84 latitude (-90 to 90, negative values south of the equator) in degrees, longitude (-180 to 180, negative values west of Prime Meridian) in degrees, and altitude, in meters, of the collection point.  This array must contain a minimum of 2 elements (latitude and longitude), and may contain an optional 3rd element (altitude).',
                    items: {
                      type: 'number',
                    },
                  },
                  comments: {
                    type: 'string',
                    description: "Additional comments on the  patient's casualty information.",
                  },
                  condition: {
                    type: 'array',
                    description: 'Health condition information.',
                    items: {
                      type: 'object',
                      properties: {
                        bodyPart: {
                          type: 'string',
                          description:
                            'Body part location or body part referenced in condition.  Intended as, but not constrained to, K07.1 Body Location Enumeration (e.g. ANKLE LEFT BACK, ANKLE LEFT FRONT, ANKLE RIGHT BACK, ANKLE RIGHT FRONT, ARM LEFT BACK, ARM LEFT ELBOW BACK, ARM LEFT ELBOW FRONT, ARM LEFT FRONT, ARM LEFT LOWER BACK, etc.).',
                        },
                        comments: {
                          type: 'string',
                          description: "Additional comments on the patient's condition.",
                        },
                        time: {
                          type: 'string',
                          description: 'Datetime of the condition diagnosis in ISO 8601 UTC datetime format.',
                          format: 'date-time',
                        },
                        type: {
                          type: 'string',
                          description:
                            'Health condition assessment.  Intended as, but not constrained to, K07.1 Condition Type Enumeration (e.g. ACTIVITY HIGH, ACTIVITY LOW, ACTIVITY MEDIUM, ACTIVITY NONE, AVPU ALERT, AVPU ALTERED MENTAL STATE, AVPU PAIN, AVPU UNRESPONSIVE, etc.).',
                        },
                      },
                    },
                  },
                  contamType: {
                    type: 'string',
                    description:
                      'The contamination specified for the patient (NONE, RADIATION, BIOLOGICAL, CHEMICAL).',
                  },
                  disposition: {
                    type: 'string',
                    description:
                      "The patient's general medical state (SICK IN QUARTERS, RETURN TO DUTY, EVACUATE WOUNDED, EVACUATE DECEASED, INTERRED).",
                  },
                  dispositionType: {
                    type: 'string',
                    description:
                      'The expected disposition of this patient (R T D, EVACUATE, EVACUATE TO FORWARD SURGICAL TEAM, EVACUATE TO COMBAT SUPPORT HOSPITAL, EVACUATE TO AERO MEDICAL STAGING FACILITY, EVACUATE TO SUSTAINING BASE MEDICAL TREATMENT FACILITY).',
                  },
                  etiology: {
                    type: 'array',
                    description: 'Medical condition causation information.',
                    items: {
                      type: 'object',
                      properties: {
                        bodyPart: {
                          type: 'string',
                          description:
                            'The body part or location affected from the etiology.  Intended as, but not constrained to, K07.1 Body Location Enumeration (e.g. ANKLE LEFT BACK, ANKLE LEFT FRONT, ANKLE RIGHT BACK, ANKLE RIGHT FRONT, ARM LEFT BACK, ARM LEFT ELBOW BACK, ARM LEFT ELBOW FRONT, ARM LEFT FRONT, ARM LEFT LOWER BACK, etc.).',
                        },
                        comments: {
                          type: 'string',
                          description: "Additional comments on the patient's etiology information.",
                        },
                        time: {
                          type: 'string',
                          description:
                            'Datetime of the discovery of the etiology state in ISO 8601 UTC format.',
                          format: 'date-time',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The cause or manner of causation of the medical condition.  Intended as, but not constrained to, K07.1 EtiologyType Enumeration (e.g. ASSAULT, BUILDING COLLAPSE, BURN CHEMICAL, BURN ELECTRICAL, BURN, BURN HOT LIQUID, BURN RADIATION, BURN THERMAL, etc.).',
                        },
                      },
                    },
                  },
                  evacType: {
                    type: 'string',
                    description:
                      'The required evacuation method for this patient (AIR, GROUND, NOT EVACUATED).',
                  },
                  gender: {
                    type: 'string',
                    description: 'The patient sex (MALE, FEMALE).',
                  },
                  healthState: {
                    type: 'array',
                    description: 'Health state information.',
                    items: {
                      type: 'object',
                      properties: {
                        healthStateCode: {
                          type: 'string',
                          description:
                            'Medical color code used to quickly identify various medical state (e.g. AMBER, BLACK, BLUE, GRAY, NORMAL, RED).',
                        },
                        medConfFactor: {
                          type: 'integer',
                          description: 'Medical confidence factor.',
                        },
                        time: {
                          type: 'string',
                          description:
                            'Datetime of the health state diagnosis in ISO 8601 UTC datetime format.',
                          format: 'date-time',
                        },
                        type: {
                          type: 'string',
                          description:
                            'Generalized state of health type (BIOLOGICAL, CHEMICAL, COGNITIVE, HYDRATION, LIFE SIGN, RADIATION, SHOCK, THERMAL).',
                        },
                      },
                    },
                  },
                  injury: {
                    type: 'array',
                    description: 'Injury specifics.',
                    items: {
                      type: 'object',
                      properties: {
                        bodyPart: {
                          type: 'string',
                          description:
                            'Body part location of the injury.  Intended as, but not constrained to, K07.1 Body Location Enumeration (e.g. ANKLE LEFT BACK, ANKLE LEFT FRONT, ANKLE RIGHT BACK, ANKLE RIGHT FRONT, ARM LEFT BACK, ARM LEFT ELBOW BACK, ARM LEFT ELBOW FRONT, ARM LEFT FRONT, ARM LEFT LOWER BACK, etc.).',
                        },
                        comments: {
                          type: 'string',
                          description: "Additional comments on the patient's injury information.",
                        },
                        time: {
                          type: 'string',
                          description: 'The time of the injury, in ISO 8601 UTC format.',
                          format: 'date-time',
                        },
                        type: {
                          type: 'string',
                          description:
                            'Classification of the injury type (ABRASION, AMPUTATION IT, AVULATION, BALLISTIC, BLAST WAVE, BURN 1ST DEGREE, BURN 2ND DEGREE, BURN 3RD DEGREE, BURN INHALATION, BURN LOWER AIRWAY, CHEST FLAIL, CHEST OPEN, DEGLOVING, ECCHYMOSIS, FRACTURE CLOSED, FRACTURE CREPITUS, FRACTURE IT, FRACTURE OPEN, HEMATOMA, IRREGULAR CONSISTENCY, IRREGULAR CONSISTENCY RIDGED, IRREGULAR CONSISTENCY SWOLLEN, IRREGULAR CONSISTENCY SWOLLEN DISTENDED, IRREGULAR CONSISTENCY TENDER, IRREGULAR POSITION, IRREGULAR SHAPE, IRREGULAR SHAPE MISSHAPED, IRREGULAR SHAPE NON SYMMETRICAL, LACERATION, NEUROVASCULAR COMPROMISE, NEUROVASCULAR INTACT, PUNCTURE, SEAT BELT SIGN, STAB, TIC TIM).',
                        },
                      },
                    },
                  },
                  last4SSN: {
                    type: 'string',
                    description: 'Last 4 characters of the patient social security code, or equivalent.',
                  },
                  medication: {
                    type: 'array',
                    description: 'Medication specifics.',
                    items: {
                      type: 'object',
                      properties: {
                        adminRoute: {
                          type: 'string',
                          description: 'Route of medication delivery (e.g. INJECTION, ORAL, etc.).',
                        },
                        bodyPart: {
                          type: 'string',
                          description:
                            'Body part location or body part referenced for medication. Intended as, but not constrained to, K07.1 Body Location Enumeration (e.g. ANKLE LEFT BACK, ANKLE LEFT FRONT, ANKLE RIGHT BACK, ANKLE RIGHT FRONT, ARM LEFT BACK, ARM LEFT ELBOW BACK, ARM LEFT ELBOW FRONT, ARM LEFT FRONT, ARM LEFT LOWER BACK, etc.).',
                        },
                        comments: {
                          type: 'string',
                          description: "Additional comments on the patient's medication information.",
                        },
                        dose: {
                          type: 'string',
                          description:
                            'Quantity of medicine or drug administered or recommended to be taken at a particular time.',
                        },
                        time: {
                          type: 'string',
                          description:
                            'The time that the medication was administered in ISO 8601 UTC format.',
                          format: 'date-time',
                        },
                        type: {
                          type: 'string',
                          description:
                            'The type of medication administered.   Intended as, but not constrained to, K07.1 Medication Enumeration (CEFOTETAN, ABRASION, ABX, AMOXILOXACIN, ANALGESIC, COLLOID, CRYOPECIPITATES, CRYSTALLOID, EPINEPHRINE, ERTAPENEM, FENTANYL, HEXTEND, LACTATED RINGERS, MOBIC, MORPHINE, NARCOTIC, NS, PENICILLIN, PLASMA, PLATELETS, PRBC, TYLENOL, WHOLE BLOOD MT).',
                        },
                      },
                    },
                  },
                  name: {
                    type: 'string',
                    description: 'The patient common or legal name.',
                  },
                  nationality: {
                    type: 'string',
                    description: 'The country code indicating the citizenship of the patient.',
                  },
                  occSpeciality: {
                    type: 'string',
                    description: 'The career field of this patient.',
                  },
                  patientIdentity: {
                    type: 'string',
                    description:
                      'The patient service identity (UNKNOWN MILITARY, UNKNOWN CIVILIAN, FRIEND MILITARY, FRIEND CIVILIAN, NEUTRAL MILITARY, NEUTRAL CIVILIAN, HOSTILE MILITARY, HOSTILE CIVILIAN).',
                  },
                  patientStatus: {
                    type: 'string',
                    description:
                      'The patient service status (US MILITARY, US CIVILIAN, NON US MILITARY, NON US CIVILIAN, ENEMY POW).',
                  },
                  payGrade: {
                    type: 'string',
                    description:
                      'The patient pay grade or rank designation (O-10, O-9, O-8, O-7, O-6, O-5, O-4, O-3, O-2, O-1, CWO-5, CWO-4, CWO-2, CWO-1, E -9, E-8, E-7, E-6, E-5, E-4, E-3, E-2, E-1, NONE, CIVILIAN).',
                  },
                  priority: {
                    type: 'string',
                    description:
                      'The priority of the medevac mission for this patient (URGENT, PRIORITY, ROUTINE, URGENT SURGERY, CONVENIENCE).',
                  },
                  reportGen: {
                    type: 'string',
                    description:
                      'The method used to generate this medevac report (DEVICE, GROUND COMBAT PERSONNEL, EVACUATION PERSONNEL, ECHELON1 PERSONNEL, ECHELON2 PERSONNEL).',
                  },
                  reportTime: {
                    type: 'string',
                    description:
                      'Datetime of the compiling of the patients casualty report, in ISO 8601 UTC format.',
                    format: 'date-time',
                  },
                  service: {
                    type: 'string',
                    description:
                      'The patient branch of service (AIR FORCE, ARMY, NAVY, MARINES, CIV, CONTR, UNKNOWN SERVICE).',
                  },
                  specMedEquip: {
                    type: 'array',
                    description:
                      'Array specifying if any special equipment is need for each of the evacuation of this patient  (EXTRACTION EQUIPMENT, SEMI RIGID LITTER, BACKBOARD, CERVICAL COLLAR ,JUNGLE PENETRATOR, OXYGEN, WHOLE BLOOD, VENTILATOR, HOIST, NONE).\n',
                    items: {
                      type: 'string',
                    },
                  },
                  treatment: {
                    type: 'array',
                    description: 'Treatment information.',
                    items: {
                      type: 'object',
                      properties: {
                        bodyPart: {
                          type: 'string',
                          description:
                            'Body part location or body part treated or to be treated.  Intended as, but not constrained to, K07.1 Body Location Enumeration (e.g. ANKLE LEFT BACK, ANKLE LEFT FRONT, ANKLE RIGHT BACK, ANKLE RIGHT FRONT, ARM LEFT BACK, ARM LEFT ELBOW BACK, ARM LEFT ELBOW FRONT, ARM LEFT FRONT, ARM LEFT LOWER BACK, etc.).',
                        },
                        comments: {
                          type: 'string',
                          description: "Additional comments on the patient's treatment information.",
                        },
                        time: {
                          type: 'string',
                          description: 'Datetime of the treatment in ISO 8601 UTC format.',
                          format: 'date-time',
                        },
                        type: {
                          type: 'string',
                          description:
                            'Type of treatment administered or to be administered.  Intended as, but not constrained to, K07.1 Treatment Type Enumeration (e.g. AIRWAY ADJUNCT, AIRWAY ASSISTED VENTILATION, AIRWAY COMBI TUBE USED, AIRWAY ET NT, AIRWAY INTUBATED, AIRWAY NPA OPA APPLIED, AIRWAY PATIENT, AIRWAY POSITIONAL, AIRWAY SURGICAL CRIC, BREATHING CHEST SEAL, BREATHING CHEST TUBE, etc.).',
                        },
                      },
                    },
                  },
                  vitalSignData: {
                    type: 'array',
                    description: 'Information obtained for vital signs.',
                    items: {
                      type: 'object',
                      properties: {
                        medConfFactor: {
                          type: 'integer',
                          description: 'Medical confidence factor.',
                        },
                        time: {
                          type: 'string',
                          description:
                            'Datetime of the vital sign measurement in ISO 8601 UTC datetime format.',
                          format: 'date-time',
                        },
                        vitalSign: {
                          type: 'string',
                          description:
                            'Patient vital sign measured (e.g. HEART RATE, PULSE RATE, RESPIRATION RATE, TEMPERATURE CORE, etc.).',
                        },
                        vitalSign1: {
                          type: 'number',
                          description:
                            'Vital sign value 1.  The content of this field is dependent on the type of vital sign being measured (see the vitalSign field).',
                        },
                        vitalSign2: {
                          type: 'number',
                          description:
                            'Vital sign value 2.  The content of this field is dependent on the type of vital sign being measured (see the vitalSign field).',
                        },
                      },
                    },
                  },
                },
              },
            },
            ce: {
              type: 'number',
              description:
                'Radius of circular area about lat/lon point, in meters (1-sigma, if representing error).',
            },
            cntctFreq: {
              type: 'number',
              description: 'The contact frequency, in Hz, of the agency or zone controller.',
            },
            comments: {
              type: 'string',
              description: 'Additional comments for the medevac mission.',
            },
            createdAt: {
              type: 'string',
              description: 'Time the row was created in the database, auto-populated by the system.',
              format: 'date-time',
            },
            createdBy: {
              type: 'string',
              description:
                'Application user who created the row in the database, auto-populated by the system.',
            },
            enemyData: {
              type: 'array',
              description: 'Data defining any enemy intelligence reported by the requestor.',
              items: {
                type: 'object',
                properties: {
                  dirToEnemy: {
                    type: 'string',
                    description:
                      'Directions to known enemies in the operation area (NORTH, NORTHEAST, EAST, SOUTHEAST, SOUTH, SOUTHWEST, WEST, NORTHWEST, SURROUNDED).',
                  },
                  friendliesRemarks: {
                    type: 'string',
                    description: 'Comments provided by friendlies about the evac zone.',
                  },
                  hlzRemarks: {
                    type: 'string',
                    description: 'Hot Landing Zone remarks.',
                  },
                  hostileFireType: {
                    type: 'string',
                    description:
                      'The type of hostile fire received (SMALL ARMS, MORTAR, ARTILLERY, ROCKETS).',
                  },
                },
              },
            },
            idWeatherReport: {
              type: 'string',
              description: 'Unique identifier of a weather report associated with this evacuation.',
            },
            le: {
              type: 'number',
              description: 'Height above lat/lon point, in meters (1-sigma, if representing linear error).',
            },
            medevacId: {
              type: 'string',
              description:
                'UUID identifying the medevac mission, which should remain the same on subsequent posts related to the same medevac mission.',
            },
            medicReq: {
              type: 'boolean',
              description: 'Flag indicating whether the mission requires medical personnel.',
            },
            missionType: {
              type: 'string',
              description: 'The operation type of the evacuation. (NOT SPECIFIED, AIR, GROUND, SURFACE).',
            },
            numAmbulatory: {
              type: 'integer',
              description: 'Number of ambulatory personnel requiring evacuation.',
            },
            numCasualties: {
              type: 'integer',
              description: 'The count of people requiring medevac.',
            },
            numKIA: {
              type: 'integer',
              description: 'Number of people Killed In Action.',
            },
            numLitter: {
              type: 'integer',
              description: 'Number of littered personnel requiring evacuation.',
            },
            numWIA: {
              type: 'integer',
              description: 'Number of people Wounded In Action.',
            },
            obstaclesRemarks: {
              type: 'string',
              description:
                'Amplifying data for the terrain describing important obstacles in or around the zone.',
            },
            origin: {
              type: 'string',
              description:
                'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
            },
            origNetwork: {
              type: 'string',
              description:
                'The originating source network on which this record was created, auto-populated by the system.',
            },
            pickupAlt: {
              type: 'number',
              description:
                'Altitude relative to WGS-84 ellipsoid, in meters. Positive values indicate a point height above ellipsoid, and negative values indicate a point height below ellipsoid.',
            },
            pickupTime: {
              type: 'string',
              description: 'The expected pickup time, in ISO 8601 UTC format.',
              format: 'date-time',
            },
            reqCallSign: {
              type: 'string',
              description: 'The call sign of this medevac requestor.',
            },
            reqNum: {
              type: 'string',
              description: 'Externally provided Medevac request number (e.g. MED.1.223908).',
            },
            terrain: {
              type: 'string',
              description:
                'Short description of the terrain features of the pickup location (WOODS, TREES, PLOWED FIELDS, FLAT, STANDING WATER, MARSH, URBAN BUILT-UP AREA, MOUNTAIN, HILL, SAND TD, ROCKY, VALLEY, METAMORPHIC ICE, UNKNOWN TD, SEA, NO STATEMENT).',
            },
            terrainRemarks: {
              type: 'string',
              description:
                'Amplifying data for the terrain describing any notable additional terrain features.',
            },
            zoneContrCallSign: {
              type: 'string',
              description: 'The call sign of the zone controller.',
            },
            zoneHot: {
              type: 'boolean',
              description: 'Flag indicating that the pickup site is hot and hostiles are in the area.',
            },
            zoneMarking: {
              type: 'string',
              description:
                'The expected marker identifying the pickup site (SMOKE ZONE MARKING, FLARES, MIRROR, GLIDE ANGLE INDICATOR LIGHT, LIGHT ZONE MARKING, PANELS, FIRE, LASER DESIGNATOR,  STROBE LIGHTS, VEHICLE LIGHTS, COLORED SMOKE, WHITE PHOSPHERUS, INFRARED, ILLUMINATION, FRATRICIDE FENCE).',
            },
            zoneMarkingColor: {
              type: 'string',
              description:
                'Color used for the pickup site marking (RED, WHITE, BLUE, YELLOW, GREEN, ORANGE, BLACK, PURPLE, BROWN, TAN, GRAY, SILVER, CAMOUFLAGE, OTHER COLOR).',
            },
            zoneName: {
              type: 'string',
              description: 'The name of the zone.',
            },
            zoneSecurity: {
              type: 'string',
              description:
                'The pickup site security (UNKNOWN ZONESECURITY, NO ENEMY, POSSIBLE ENEMY, ENEMY IN AREA USE CAUTION, ENEMY IN AREA ARMED ESCORT REQUIRED).',
            },
          },
          required: [
            'classificationMarking',
            'dataMode',
            'pickupLat',
            'pickupLon',
            'reqTime',
            'source',
            'type',
          ],
        },
      },
    },
    required: ['body'],
  },
  annotations: {},
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  const response = await client.evac.unvalidatedPublish(body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
