// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'laseremitter.staging',
  operation: 'write',
  tags: [],
  httpMethod: 'put',
  httpPath: '/udl/laseremitterstaging/{id}',
};

export const tool: Tool = {
  name: 'update_laseremitter_staging',
  description:
    'Service operation to update a single LaserEmitterStaging record. A specific role is required to perform this service operation. Please contact the UDL team for assistance.',
  inputSchema: {
    type: 'object',
    properties: {
      path_id: {
        type: 'string',
      },
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      laserName: {
        type: 'string',
        description: 'Unique name of this Laser Emitter.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      body_id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      altitude: {
        type: 'number',
        description:
          'Emitter altitude relative to WGS-84 ellipsoid, in kilometers. Positive values indicate an emitter height above ellipsoid, and negative values indicate an emitter height below ellipsoid.',
      },
      laserType: {
        type: 'string',
        description: 'The type of laser (e.g. CONTINUOUS WAVE, PULSED, etc.).',
      },
      lat: {
        type: 'number',
        description:
          'WGS-84 latitude of the emitter, in degrees. -90 to 90 degrees (negative values south of equator).',
      },
      locationCountry: {
        type: 'string',
        description:
          'The DoD Standard Country Code designator for the country or political entity to which the Laser Emitter equipment geographic coordinates reside. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.',
      },
      lon: {
        type: 'number',
        description:
          'WGS-84 longitude of the emitter, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).',
      },
      ownerCountry: {
        type: 'string',
        description:
          'The DoD Standard Country Code designator for the country or political entity owning the Laser Emitter. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDL’s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.',
      },
    },
    required: ['path_id', 'classificationMarking', 'laserName', 'source'],
  },
  annotations: {
    idempotentHint: true,
  },
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const { id, ...body } = args as any;
  const response = await client.laseremitter.staging.update(id, body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
