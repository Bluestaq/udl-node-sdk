// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../../';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'air_operations.air_tasking_orders',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/airtaskingorder',
};

export const tool: Tool = {
  name: 'create_air_operations_air_tasking_orders',
  description:
    "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nService operation to take a single airtaskingorder record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.",
  inputSchema: {
    type: 'object',
    properties: {
      beginTs: {
        type: 'string',
        description:
          'The effective begin time for this ATO in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      opExerName: {
        type: 'string',
        description:
          'Specifies the unique operation or exercise name, nickname, or codeword assigned to a joint exercise or operation plan.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      ackReqInd: {
        type: 'string',
        description: 'The indicator specifying an affirmative or a negatice condition for this message.',
      },
      ackUnitInstructions: {
        type: 'string',
        description:
          'Specifies textual data amplifying the data contained in the acknowledgement requirement indicator (ackRedInd) field or the unit required to acknowledge.',
      },
      acMsnTasking: {
        type: 'array',
        description:
          'A collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.',
        items: {
          type: 'object',
          description:
            'Collection that specifies the tasked country, tasked service, unit and mission level tasking for this ATO.',
          properties: {
            countryCode: {
              type: 'string',
              description:
                'The country code responsible for conducting this aircraft mission tasking for the exercise or operation.',
            },
            taskedService: {
              type: 'string',
              description:
                'The service tasked with conducting this aircraft mission tasking for the exercise or operation.',
            },
            unitDesignator: {
              type: 'string',
              description:
                'The designator of the unit that is tasked to perform this aircraft mission tasking.',
            },
            acMsnLocSeg: {
              type: 'array',
              description:
                'A collection of aircraft mission location information for this aircraft mission tasking.',
              items: {
                type: 'object',
                description:
                  'Collection of aircraft mission location information for this aircraft mission tasking.',
                properties: {
                  startTime: {
                    type: 'string',
                    description:
                      'The start time of this mission in ISO 8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  airMsnPri: {
                    type: 'string',
                    description: 'The code for the priority assigned to this mission.',
                  },
                  alt: {
                    type: 'integer',
                    description: 'The altitude for this mission represented as hundreds of feet above MSL.',
                  },
                  areaGeoRad: {
                    type: 'integer',
                    description: 'The radius of the circle around the location being reported in feet.',
                  },
                  endTime: {
                    type: 'string',
                    description:
                      'The end time of this mission in ISO 8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  msnLocName: {
                    type: 'string',
                    description:
                      'The name that identifies the location at which this mission is to be performed. This can be the name of a general target area, orbit, cap point, station, etc.',
                  },
                  msnLocPtBarT: {
                    type: 'string',
                    description:
                      'The alpha-numeric specified location for this mission specified as a bearing angle in degrees relative to true north and a range in nautical miles (NM).',
                  },
                  msnLocPtLat: {
                    type: 'number',
                    description:
                      'WGS-84 latitude of the mission location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.',
                  },
                  msnLocPtLon: {
                    type: 'number',
                    description:
                      'WGS-84 longitude of the mission location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.',
                  },
                  msnLocPtName: {
                    type: 'string',
                    description: 'The location name for this mission.',
                  },
                },
                required: ['startTime'],
              },
            },
            alertStatus: {
              type: 'integer',
              description:
                'The readiness status expressed in time (minutes) for an aircraft to be airborne after the launch order is received or the time required for a missile unit to assume battle stations.',
            },
            amcMsnNum: {
              type: 'string',
              description: 'The AMC number assigned to identify one aircraft from another.',
            },
            depLocLat: {
              type: 'number',
              description:
                'WGS-84 latitude of the departure location, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.',
            },
            depLocLon: {
              type: 'number',
              description:
                'WGS-84 longitude of the departure location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.',
            },
            depLocName: {
              type: 'string',
              description: 'The location or name specified for the departure of the tasked air mission.',
            },
            depLocUTM: {
              type: 'string',
              description:
                'The departure location specified in UTM (100 meter) coordinates for the tasked air mission.',
            },
            depTime: {
              type: 'string',
              description:
                'The time of departure for the tasked air mission in ISO8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            indACTasking: {
              type: 'array',
              description:
                'A collection of the individual aircraft assigned to this aircraft mission tasking.',
              items: {
                type: 'object',
                description: 'Collection that specifies the naval flight operations for this ATO.',
                properties: {
                  acftType: {
                    type: 'string',
                    description:
                      'The type and model number for the aircraft. The field may specify a value of an aircraft not yet assigned an aircraft code contained in the aircraft codes list.',
                  },
                  callSign: {
                    type: 'string',
                    description: 'The call sign assigned to this mission aircraft.',
                  },
                  iffSifMode1Code: {
                    type: 'string',
                    description:
                      'The mode 1 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).',
                  },
                  iffSifMode2Code: {
                    type: 'string',
                    description:
                      'The mode 2 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).',
                  },
                  iffSifMode3Code: {
                    type: 'string',
                    description:
                      'The mode 3 and code of the Identification Friend or FOE (IFF) or Selective Identification Feature (SIF).',
                  },
                  juAddress: {
                    type: 'array',
                    description:
                      'An optional array of link 16 octal track numbers assigned as the primary JTIDS Unit (JU) address for the mission aircraft.',
                    items: {
                      type: 'integer',
                    },
                  },
                  link16CallSign: {
                    type: 'string',
                    description:
                      'The Link 16 abbreviated call sign assigned to the ACA. This is normally the first and last letter and the last two numbers of the call sign.',
                  },
                  numAcft: {
                    type: 'integer',
                    description: 'The number of aircraft participating in this mission.',
                  },
                  priConfigCode: {
                    type: 'string',
                    description:
                      'The code that indicates the ordinance mix carried on this mission aircraft.',
                  },
                  secConfigCode: {
                    type: 'string',
                    description: 'The code for the secondary ordinance mix carried on this mission aircraft.',
                  },
                  tacanChan: {
                    type: 'integer',
                    description: 'The TACAN channel assigned to this mission aircraft.',
                  },
                },
                required: ['acftType'],
              },
            },
            msnCommander: {
              type: 'string',
              description:
                'The commander responsible for the planning and execution of the forces necessary to achieve desired objectives.',
            },
            msnNum: {
              type: 'string',
              description: 'The mission number assigned to this mission.',
            },
            pkgId: {
              type: 'string',
              description: 'The identifier for the composite set of missions for this operation/exercise.',
            },
            priMsnType: {
              type: 'string',
              description: 'The code for the preferred type or designator for a tasked air mission.',
            },
            rcvyLocLat: {
              type: 'array',
              description:
                'An array of WGS-84 latitude of the recovery locations, in degrees. -90 to 90 degrees (negative values south of equator) for this tasked air mission.',
              items: {
                type: 'number',
              },
            },
            rcvyLocLon: {
              type: 'array',
              description:
                'An array of WGS-84 longitude of the recovery locations, in degrees. -180 to 180 degrees (negative values west of Prime Meridian) for this tasked air mission.',
              items: {
                type: 'number',
              },
            },
            rcvyLocName: {
              type: 'array',
              description:
                'An array of locations specified for the recovery of the tasked air mission represented by varying formats.',
              items: {
                type: 'string',
              },
            },
            rcvyLocUTM: {
              type: 'array',
              description:
                'An array of recovery locations specified in UTM (100 meter) coordinates for the tasked air mission.',
              items: {
                type: 'string',
              },
            },
            rcvyTime: {
              type: 'array',
              description:
                'An array of recovery times for the tasked air mission in ISO8601 UTC format with millisecond precision.',
              items: {
                type: 'string',
                format: 'date-time',
              },
            },
            resMsnInd: {
              type: 'string',
              description: 'An indicator of whether a mission is or will be a residual mission.',
            },
            secMsnType: {
              type: 'string',
              description: 'The code for the alternative type of a tasked air mission.',
            },
            unitLocName: {
              type: 'string',
              description: 'The tasked units location expressed as an ICAO or a place name.',
            },
          },
          required: ['countryCode', 'taskedService', 'unitDesignator'],
        },
      },
      endTs: {
        type: 'string',
        description: 'The effective end time for this ATO in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      genText: {
        type: 'array',
        description:
          'A collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.',
        items: {
          type: 'object',
          description:
            'Collection that details special instructions, important information, guidance, and amplifying information regarding this ATO.',
          properties: {
            text: {
              type: 'string',
              description: 'The free text that describes the information specific to the text indicator.',
            },
            textInd: {
              type: 'string',
              description:
                'The indicator for the general text block. Examples include "OPENING REMARKS" and "GENERAL SPINS INFORMATION".',
            },
          },
          required: [],
        },
      },
      msgMonth: {
        type: 'string',
        description: 'The month in which the message originated.',
      },
      msgOriginator: {
        type: 'string',
        description: 'The identifier of the originator of the message.',
      },
      msgQualifier: {
        type: 'string',
        description: 'The qualifier which caveats the message status.',
      },
      msgSN: {
        type: 'string',
        description: 'The unique message identifier sequentially assigned by the originator.',
      },
      navalFltOps: {
        type: 'array',
        description: 'A collection that specifies the naval flight operations for this ATO.',
        items: {
          type: 'object',
          description: 'Collection that specifies the naval flight operations for this ATO.',
          properties: {
            shipName: {
              type: 'string',
              description: 'The name of a ship or maritime vessel. Specify UNKNOWN if name is not known.',
            },
            fltOpStart: {
              type: 'string',
              description:
                'The time when flight operations begin in ISO8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            fltOpStop: {
              type: 'string',
              description:
                'The time when flight operations end in ISO8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            schdLaunchRcvyTime: {
              type: 'array',
              description:
                'An array of times at which an aircraft will be launched and/or recovered in ISO8601 UTC format with millisecond precision.',
              items: {
                type: 'string',
                format: 'date-time',
              },
            },
          },
          required: ['shipName'],
        },
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
    },
  },
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  const response = await client.airOperations.airTaskingOrders.create(body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
