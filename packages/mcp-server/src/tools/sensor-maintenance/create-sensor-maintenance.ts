// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'sensor_maintenance',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/sensormaintenance',
};

export const tool: Tool = {
  name: 'create_sensor_maintenance',
  description:
    'Service operation to take a single SensorMaintenance as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.',
  inputSchema: {
    type: 'object',
    properties: {
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      endTime: {
        type: 'string',
        description: 'The planned outage end time in ISO8601 UTC format.',
        format: 'date-time',
      },
      siteCode: {
        type: 'string',
        description:
          'The site to which this item applies.  NOTE - this site code is COLT specific and may not identically correspond to other UDL site IDs.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      startTime: {
        type: 'string',
        description: 'The planned outage start time in ISO8601 UTC format.',
        format: 'date-time',
      },
      id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      activity: {
        type: 'string',
        description: 'Description of the activity taking place during this outage.',
      },
      approver: {
        type: 'string',
        description: 'The name of the approver.',
      },
      changer: {
        type: 'string',
        description: 'The name of the changer, if applicable.',
      },
      duration: {
        type: 'string',
        description: 'The duration of the planned outage, expressed as ddd:hh:mm.',
      },
      eowId: {
        type: 'string',
        description: 'COLT EOWID.',
      },
      equipStatus: {
        type: 'string',
        description: 'The mission capability status of the equipment (e.g. FMC, NMC, PMC, UNK, etc.).',
      },
      idSensor: {
        type: 'string',
        description: 'UUID of the sensor.',
      },
      impactedFaces: {
        type: 'string',
        description: 'The sensor face(s) to which this COLT maintenance item applies, if applicable.',
      },
      lineNumber: {
        type: 'string',
        description: 'The internal COLT line number assigned to this item.',
      },
      mdOpsCap: {
        type: 'string',
        description:
          'The Missile Defense operational capability of this maintenance item.  Typical values are G, Y, R, and - for non-applicable sites.',
      },
      mwOpsCap: {
        type: 'string',
        description:
          'The Missile Warning operational capability of this maintenance item.  Typical values are G, Y, R, and - for non-applicable sites.',
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
      priority: {
        type: 'string',
        description: 'The priority of this maintenance item.',
      },
      recall: {
        type: 'string',
        description: 'The minimum time required to recall this activity, expressed as ddd:hh:mm.',
      },
      rel: {
        type: 'string',
        description: 'Release.',
      },
      remark: {
        type: 'string',
        description: 'Remarks concerning this outage.',
      },
      requestor: {
        type: 'string',
        description: 'The name of the requestor.',
      },
      resource: {
        type: 'string',
        description: 'The name of the resource(s) affected by this maintenance item.',
      },
      rev: {
        type: 'string',
        description: 'The revision number for this maintenance item.',
      },
      ssOpsCap: {
        type: 'string',
        description:
          'The Space Surveillance operational capability of this maintenance item.  Typical values are G, Y, R, and - for non-applicable sites.',
      },
    },
  },
};

export const handler = (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  return client.sensorMaintenance.create(body);
};

export default { metadata, tool, handler };
