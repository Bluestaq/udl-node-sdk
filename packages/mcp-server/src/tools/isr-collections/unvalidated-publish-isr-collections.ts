// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import Unifieddatalibrary from 'udl-node-sdk';

export const metadata: Metadata = {
  resource: 'isr_collections',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/filedrop/udl-isrcollection',
  operationId: 'filedrop_udl_isrcollection_post_id',
};

export const tool: Tool = {
  name: 'unvalidated_publish_isr_collections',
  description:
    "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nService operation to take multiple ISR Collections as a POST body and ingest into the database. This operation is intended to be used for automated feeds into UDL. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n",
  inputSchema: {
    type: 'object',
    properties: {
      body: {
        type: 'array',
        items: {
          type: 'object',
          description: 'ISR Collection data.',
          properties: {
            classificationMarking: {
              type: 'string',
              description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
            },
            dataMode: {
              type: 'string',
              description:
                'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
              enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
            },
            source: {
              type: 'string',
              description: 'Source of the data.',
            },
            id: {
              type: 'string',
              description: 'Unique identifier of the record, auto-generated by the system.',
            },
            collectionRequirements: {
              type: 'array',
              description: 'Mission desired collection requirements.',
              items: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description: 'Collection Requirement Unique Identifier.',
                  },
                  country: {
                    type: 'string',
                    description:
                      'Country code of the collection requirement. A Country may represent countries, multi-national consortiums, and international organizations.',
                  },
                  cridNumbers: {
                    type: 'string',
                    description: 'Collection Requirement Unique Identifier.',
                  },
                  criticalTimes: {
                    type: 'object',
                    properties: {
                      earliestImagingTime: {
                        type: 'string',
                        description: 'Critical start time to collect an image for this requirement.',
                        format: 'date-time',
                      },
                      latestImagingTime: {
                        type: 'string',
                        description: 'Critical stop time to collect an image for this requirement.',
                        format: 'date-time',
                      },
                    },
                    required: ['earliestImagingTime', 'latestImagingTime'],
                  },
                  emphasized: {
                    type: 'boolean',
                    description: 'Is this collection requirement an emphasized/critical requirement.',
                  },
                  exploitationRequirement: {
                    type: 'object',
                    properties: {
                      id: {
                        type: 'string',
                        description: 'Exploitation requirement id.',
                      },
                      amplification: {
                        type: 'string',
                        description: 'Amplifying data for the exploitation requirement.',
                      },
                      dissemination: {
                        type: 'string',
                        description: 'List of e-mails to disseminate collection verification information.',
                      },
                      eei: {
                        type: 'string',
                        description: 'Essential Elements of Information.',
                      },
                      poc: {
                        type: 'object',
                        properties: {
                          id: {
                            type: 'string',
                            description: 'Unique identifier of the collection requirement POC.',
                          },
                          callsign: {
                            type: 'string',
                            description: 'Callsign of the POC.',
                          },
                          chatName: {
                            type: 'string',
                            description: 'Chat name of the POC.',
                          },
                          chatSystem: {
                            type: 'string',
                            description: 'Chat system the POC is accessing.',
                          },
                          email: {
                            type: 'string',
                            description: 'Email address of the POC.',
                          },
                          name: {
                            type: 'string',
                            description: 'Name of the POC.',
                          },
                          notes: {
                            type: 'string',
                            description: 'Amplifying notes about the POC.',
                          },
                          phone: {
                            type: 'string',
                            description: 'Phone number of the POC.',
                          },
                          radioFrequency: {
                            type: 'number',
                            description: 'Radio Frequency the POC is on.',
                          },
                          unit: {
                            type: 'string',
                            description: 'Unit the POC belongs to.',
                          },
                        },
                      },
                      reportingCriteria: {
                        type: 'string',
                        description: 'The reporting criteria of the collection requirement.',
                      },
                    },
                  },
                  hash: {
                    type: 'string',
                    description: 'Encryption hashing algorithm.',
                  },
                  intelDiscipline: {
                    type: 'string',
                    description: 'Primary type of intelligence to be collected for this requirement.',
                  },
                  isPrismCr: {
                    type: 'boolean',
                    description: 'Is this collection request for the Prism system?.',
                  },
                  operation: {
                    type: 'string',
                    description: 'Human readable name for this operation.',
                  },
                  priority: {
                    type: 'number',
                    description: '1-n priority for this collection requirement.',
                  },
                  reconSurvey: {
                    type: 'string',
                    description: 'Reconnaissance Survey information the operator needs.',
                  },
                  recordId: {
                    type: 'string',
                    description: 'Record id.',
                  },
                  region: {
                    type: 'string',
                    description: 'Region of the collection requirement.',
                  },
                  secondary: {
                    type: 'boolean',
                    description: 'Sub category of primary intelligence to be collected for this requirement.',
                  },
                  specialComGuidance: {
                    type: 'string',
                    description:
                      'Free text field for the user to specify special instructions needed for this collection.',
                  },
                  start: {
                    type: 'string',
                    description: 'Start time for this requirement, should be within the mission time window.',
                    format: 'date-time',
                  },
                  stop: {
                    type: 'string',
                    description: 'Stop time for this requirement, should be within the mission time window.',
                    format: 'date-time',
                  },
                  subregion: {
                    type: 'string',
                    description: 'Subregion of the collection requirement.',
                  },
                  supportedUnit: {
                    type: 'string',
                    description:
                      'The name of the military unit that this assigned collection requirement will support.',
                  },
                  targetList: {
                    type: 'array',
                    description: "Array of POI Id's for the targets being tasked.",
                    items: {
                      type: 'string',
                    },
                  },
                  type: {
                    type: 'string',
                    description: 'Type collection this requirement applies to.',
                  },
                },
              },
            },
            createdAt: {
              type: 'string',
              description: 'Time the row was created in the database, auto-populated by the system.',
              format: 'date-time',
            },
            createdBy: {
              type: 'string',
              description:
                'Application user who created the row in the database, auto-populated by the system.',
            },
            idexVersion: {
              type: 'integer',
              description: 'Version of the IDEX software the request came from for compatibility.',
            },
            missionAOR: {
              type: 'string',
              description: 'Designation of mission Area Of Responsibility.',
            },
            missionCollectionArea: {
              type: 'string',
              description: 'Mission geographical collection area.',
            },
            missionCountry: {
              type: 'string',
              description:
                'Country code of the mission.  A Country may represent countries, multi-national consortiums, and international organizations.',
            },
            missionEmphasis: {
              type: 'string',
              description: 'Text version of what we are emphasizing in this mission.',
            },
            missionId: {
              type: 'string',
              description: 'Mission Identifier.',
            },
            missionJoa: {
              type: 'string',
              description: 'Joint Operations Area.',
            },
            missionOperation: {
              type: 'string',
              description: 'Mission operation name.',
            },
            missionPrimaryIntelDiscipline: {
              type: 'string',
              description: 'Primary type of intelligence to be collected during the mission.',
            },
            missionPrimarySubCategory: {
              type: 'string',
              description: 'Sub category of primary intelligence to be collected.',
            },
            missionPriority: {
              type: 'integer',
              description: 'Mission Priority (1-n).',
            },
            missionRegion: {
              type: 'string',
              description: 'Region of the mission.',
            },
            missionRole: {
              type: 'string',
              description: 'What is the primary objective(Role) of this mission.',
            },
            missionSecondaryIntelDiscipline: {
              type: 'string',
              description: 'Type of intelligence to be collected second.',
            },
            missionSecondarySubCategory: {
              type: 'string',
              description: 'Mission sub category for secondary intelligence discipline to be collected.',
            },
            missionStartPointLat: {
              type: 'number',
              description:
                'WGS-84 latitude of the start position, in degrees. -90 to 90 degrees (negative values south of equator).',
            },
            missionStartPointLong: {
              type: 'number',
              description:
                'WGS-84 longitude of the start position, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).',
            },
            missionSubRegion: {
              type: 'string',
              description: 'Subregion of the mission.',
            },
            missionSupportedUnit: {
              type: 'string',
              description: 'Name of the Supporting unit/Location that is performing this mission.',
            },
            missionSyncMatrixBin: {
              type: 'string',
              description:
                'A synchronization matrix is used to organize the logistics synchronization process during a mission.',
            },
            name: {
              type: 'string',
              description: 'Human readable Mission Name.',
            },
            origin: {
              type: 'string',
              description:
                'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
            },
            origNetwork: {
              type: 'string',
              description:
                'The originating source network on which this record was created, auto-populated by the system.',
            },
            taskings: {
              type: 'array',
              description: 'Individual taskings to complete the mission.',
              items: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description: 'Tasking Unique Identifier.',
                  },
                  collectionPeriods: {
                    type: 'object',
                    properties: {
                      actual: {
                        type: 'array',
                        description: 'Actual start and stop for the collection.',
                        items: {
                          type: 'object',
                          properties: {
                            id: {
                              type: 'string',
                              description:
                                'Unique Identifier of actual collection period for historical archive.',
                            },
                            start: {
                              type: 'string',
                              description:
                                'Start time the collection actually occurred, in ISO 8601 UTC format.',
                              format: 'date-time',
                            },
                            stop: {
                              type: 'string',
                              description:
                                'Stop time the collection actually occurred, in ISO 8601 UTC format.',
                              format: 'date-time',
                            },
                          },
                        },
                      },
                      planned: {
                        type: 'object',
                        properties: {
                          additional: {
                            type: 'array',
                            description: 'Additional start and stop for the collection.',
                            items: {
                              type: 'object',
                              properties: {
                                id: {
                                  type: 'string',
                                  description: 'Unique Identifier of additional collection period.',
                                },
                                start: {
                                  type: 'string',
                                  description: 'Start time of collection, in ISO 8601 UTC format.',
                                  format: 'date-time',
                                },
                                stop: {
                                  type: 'string',
                                  description: 'Stop time of collection, in ISO 8601 UTC format.',
                                  format: 'date-time',
                                },
                              },
                            },
                          },
                          start: {
                            type: 'string',
                            description: 'Start time of collection, in ISO 8601 UTC format.',
                            format: 'date-time',
                          },
                          stop: {
                            type: 'string',
                            description: 'Stop time of collection, in ISO 8601 UTC format.',
                            format: 'date-time',
                          },
                        },
                      },
                    },
                  },
                  collectionType: {
                    type: 'string',
                    description: 'Type of collection tasked.',
                    enum: ['Simultaneous', 'Sequential', 'Operationally', 'Driven', 'Priority', 'Order'],
                  },
                  eightLine: {
                    type: 'string',
                    description: 'Eight line.',
                  },
                  specialComGuidance: {
                    type: 'string',
                    description:
                      'Free text field for the user to specify special instructions needed for this collection.',
                  },
                  sroTrack: {
                    type: 'string',
                    description: 'Value of the Sensitive Reconnaissance Operations Track.',
                  },
                  taskingAOR: {
                    type: 'string',
                    description: 'Human readable definition of this taskings Area Of Responsibility.',
                  },
                  taskingCollectionArea: {
                    type: 'string',
                    description: 'Tasking geographical collection area.',
                  },
                  taskingCollectionRequirements: {
                    type: 'array',
                    description: 'Tasking desired collection requirements.',
                    items: {
                      type: 'object',
                      properties: {
                        id: {
                          type: 'string',
                          description: 'Collection Requirement Unique Identifier.',
                        },
                        country: {
                          type: 'string',
                          description:
                            'Country code of the collection requirement. A Country may represent countries, multi-national consortiums, and international organizations.',
                        },
                        cridNumbers: {
                          type: 'string',
                          description: 'Collection Requirement Unique Identifier.',
                        },
                        criticalTimes: {
                          type: 'object',
                          properties: {
                            earliestImagingTime: {
                              type: 'string',
                              description: 'Critical start time to collect an image for this requirement.',
                              format: 'date-time',
                            },
                            latestImagingTime: {
                              type: 'string',
                              description: 'Critical stop time to collect an image for this requirement.',
                              format: 'date-time',
                            },
                          },
                          required: ['earliestImagingTime', 'latestImagingTime'],
                        },
                        emphasized: {
                          type: 'boolean',
                          description: 'Is this collection requirement an emphasized/critical requirement.',
                        },
                        exploitationRequirement: {
                          type: 'object',
                          properties: {
                            id: {
                              type: 'string',
                              description: 'Exploitation requirement id.',
                            },
                            amplification: {
                              type: 'string',
                              description: 'Amplifying data for the exploitation requirement.',
                            },
                            dissemination: {
                              type: 'string',
                              description:
                                'List of e-mails to disseminate collection verification information.',
                            },
                            eei: {
                              type: 'string',
                              description: 'Essential Elements of Information.',
                            },
                            poc: {
                              type: 'object',
                              properties: {
                                id: {
                                  type: 'string',
                                  description: 'Unique identifier of the collection requirement POC.',
                                },
                                callsign: {
                                  type: 'string',
                                  description: 'Callsign of the POC.',
                                },
                                chatName: {
                                  type: 'string',
                                  description: 'Chat name of the POC.',
                                },
                                chatSystem: {
                                  type: 'string',
                                  description: 'Chat system the POC is accessing.',
                                },
                                email: {
                                  type: 'string',
                                  description: 'Email address of the POC.',
                                },
                                name: {
                                  type: 'string',
                                  description: 'Name of the POC.',
                                },
                                notes: {
                                  type: 'string',
                                  description: 'Amplifying notes about the POC.',
                                },
                                phone: {
                                  type: 'string',
                                  description: 'Phone number of the POC.',
                                },
                                radioFrequency: {
                                  type: 'number',
                                  description: 'Radio Frequency the POC is on.',
                                },
                                unit: {
                                  type: 'string',
                                  description: 'Unit the POC belongs to.',
                                },
                              },
                            },
                            reportingCriteria: {
                              type: 'string',
                              description: 'The reporting criteria of the collection requirement.',
                            },
                          },
                        },
                        hash: {
                          type: 'string',
                          description: 'Encryption hashing algorithm.',
                        },
                        intelDiscipline: {
                          type: 'string',
                          description: 'Primary type of intelligence to be collected for this requirement.',
                        },
                        isPrismCr: {
                          type: 'boolean',
                          description: 'Is this collection request for the Prism system?.',
                        },
                        operation: {
                          type: 'string',
                          description: 'Human readable name for this operation.',
                        },
                        priority: {
                          type: 'number',
                          description: '1-n priority for this collection requirement.',
                        },
                        reconSurvey: {
                          type: 'string',
                          description: 'Reconnaissance Survey information the operator needs.',
                        },
                        recordId: {
                          type: 'string',
                          description: 'Record id.',
                        },
                        region: {
                          type: 'string',
                          description: 'Region of the collection requirement.',
                        },
                        secondary: {
                          type: 'boolean',
                          description:
                            'Sub category of primary intelligence to be collected for this requirement.',
                        },
                        specialComGuidance: {
                          type: 'string',
                          description:
                            'Free text field for the user to specify special instructions needed for this collection.',
                        },
                        start: {
                          type: 'string',
                          description:
                            'Start time for this requirement, should be within the mission time window.',
                          format: 'date-time',
                        },
                        stop: {
                          type: 'string',
                          description:
                            'Stop time for this requirement, should be within the mission time window.',
                          format: 'date-time',
                        },
                        subregion: {
                          type: 'string',
                          description: 'Subregion of the collection requirement.',
                        },
                        supportedUnit: {
                          type: 'string',
                          description:
                            'The name of the military unit that this assigned collection requirement will support.',
                        },
                        targetList: {
                          type: 'array',
                          description: "Array of POI Id's for the targets being tasked.",
                          items: {
                            type: 'string',
                          },
                        },
                        type: {
                          type: 'string',
                          description: 'Type collection this requirement applies to.',
                        },
                      },
                    },
                  },
                  taskingCountry: {
                    type: 'string',
                    description:
                      'Country code of the tasking.  A Country may represent countries, multi-national consortiums, and international organizations.',
                  },
                  taskingEmphasis: {
                    type: 'string',
                    description: 'Tasking emphasis.',
                  },
                  taskingJoa: {
                    type: 'string',
                    description: 'Joint Operations Area.',
                  },
                  taskingOperation: {
                    type: 'string',
                    description: 'Tasking operation name.',
                  },
                  taskingPrimaryIntelDiscipline: {
                    type: 'string',
                    description: 'Primary type of intelligence to be collected during the mission.',
                  },
                  taskingPrimarySubCategory: {
                    type: 'string',
                    description: 'Sub category of primary intelligence to be collected.',
                  },
                  taskingPriority: {
                    type: 'number',
                    description: 'Tasking Priority (1-n).',
                  },
                  taskingRegion: {
                    type: 'string',
                    description: 'Region of the tasking.',
                  },
                  taskingRetaskTime: {
                    type: 'string',
                    description: 'Time of retasking, in ISO 8601 UTC format.',
                    format: 'date-time',
                  },
                  taskingRole: {
                    type: 'string',
                    description: 'What is the primary objective (role) of this task.',
                  },
                  taskingSecondaryIntelDiscipline: {
                    type: 'string',
                    description: 'Type of tasking intelligence to be collected second.',
                  },
                  taskingSecondarySubCategory: {
                    type: 'string',
                    description:
                      'Mission sub category for secondary intelligence discipline to be collected.',
                  },
                  taskingStartPointLat: {
                    type: 'number',
                    description:
                      'WGS-84 latitude of the start position, in degrees. -90 to 90 degrees (negative values south of equator).',
                  },
                  taskingStartPointLong: {
                    type: 'number',
                    description:
                      'WGS-84 longitude of the start position, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).',
                  },
                  taskingSubRegion: {
                    type: 'string',
                    description: 'Subregion of the tasking.',
                  },
                  taskingSupportedUnit: {
                    type: 'string',
                    description: 'Military Base to transmit the dissemination of this data.',
                  },
                  taskingSyncMatrixBin: {
                    type: 'string',
                    description:
                      'A synchronization matrix is used to organize the logistics synchronization process during a mission.',
                  },
                  type: {
                    type: 'string',
                    description: 'Type of tasking.',
                    enum: ['Deliberate', 'Dynamic', 'Training', 'Transit'],
                  },
                },
              },
            },
            transit: {
              type: 'array',
              description: 'Object for data dissemination.',
              items: {
                type: 'object',
                properties: {
                  id: {
                    type: 'string',
                    description: 'Transit Unique Identifier.',
                  },
                  base: {
                    type: 'string',
                    description: 'Military Base to transmit the dissemination of this data.',
                  },
                  duration: {
                    type: 'number',
                    description: 'Length of mission in milliseconds.',
                  },
                },
              },
            },
            updatedAt: {
              type: 'string',
              description:
                'Time the row was updated in the database, auto-populated by the system, example = 2018-01-01T16:00:00.123Z.',
              format: 'date-time',
            },
            updatedBy: {
              type: 'string',
              description:
                'Application user who updated the row in the database, auto-populated by the system.',
            },
          },
          required: ['classificationMarking', 'dataMode', 'source'],
        },
      },
    },
    required: ['body'],
  },
  annotations: {},
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  const response = await client.isrCollections.unvalidatedPublish(body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
