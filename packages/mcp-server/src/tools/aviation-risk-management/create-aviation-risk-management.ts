// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import Unifieddatalibrary from 'udl-node-sdk';

export const metadata: Metadata = {
  resource: 'aviation_risk_management',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/aviationriskmanagement',
};

export const tool: Tool = {
  name: 'create_aviation_risk_management',
  description:
    'Service operation to take a single Aviation Risk Management record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.',
  inputSchema: {
    type: 'object',
    properties: {
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      idMission: {
        type: 'string',
        description: 'The unique identifier of the mission to which this risk management record is assigned.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      id: {
        type: 'string',
        description:
          'Unique identifier of the record, auto-generated by the system if not provided on create operations.',
      },
      aviationRiskManagementWorksheetRecord: {
        type: 'array',
        description: 'Collection of Aviation Risk Management Worksheet Records.',
        items: {
          type: 'object',
          description: 'Collection of Aviation Risk Management Worksheet Records.',
          properties: {
            missionDate: {
              type: 'string',
              description: 'Date of the mission in ISO 8601 date-only format (YYYY-MM-DD).',
              format: 'date',
            },
            aircraftMDS: {
              type: 'string',
              description:
                'The aircraft Model Design Series (MDS) designation (e.g. E-2C HAWKEYE, F-15 EAGLE, KC-130 HERCULES, etc.) of the aircraft associated with this risk management worksheet record. Intended as, but not constrained to, MIL-STD-6016 environment dependent specific type designations.',
            },
            approvalPending: {
              type: 'boolean',
              description: 'Flag indicating the worksheet record is pending approval.',
            },
            approved: {
              type: 'boolean',
              description: 'Flag indicating the worksheet record is approved.',
            },
            aviationRiskManagementWorksheetScore: {
              type: 'array',
              description: 'Collection of Aviation Risk Management worksheet record scores.',
              items: {
                type: 'object',
                description: 'Collection of Aviation Risk Management worksheet record scores.',
                properties: {
                  approvalDate: {
                    type: 'string',
                    description:
                      'Timestamp the worksheet record score was approval or disapproval, in ISO 8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  approvedBy: {
                    type: 'string',
                    description: 'Name of the individual who approved or disapproved of the score.',
                  },
                  approvedCode: {
                    type: 'integer',
                    description:
                      'Numeric assignment used to determine score approval. 0 - APPROVAL PENDING (used when score value is 2 or 3); 1 - APPROVED (used when score value is 2 or 3); 2 - DISAPPROVED.',
                  },
                  aviationRiskManagementSortie: {
                    type: 'array',
                    description:
                      'Collection of aviation risk management worksheet record score aircraft sorties.',
                    items: {
                      type: 'object',
                      description:
                        'Collection of aviation risk management worksheet record score aircraft sorties.',
                      properties: {
                        extSortieId: {
                          type: 'string',
                          description:
                            'Optional aircraft sortie ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.',
                        },
                        idSortie: {
                          type: 'string',
                          description:
                            'Unique identifier of an associated Aircraft Sortie that is assigned to this risk management record.',
                        },
                        legNum: {
                          type: 'integer',
                          description: 'The leg number of the sortie.',
                        },
                        sortieScore: {
                          type: 'integer',
                          description:
                            'The score of the associated aircraft sortie as defined by the data source. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.',
                        },
                      },
                    },
                  },
                  extScoreId: {
                    type: 'string',
                    description:
                      'Optional identifier of the worksheet record score provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.',
                  },
                  riskCategory: {
                    type: 'string',
                    description: 'The category of the risk factor.',
                  },
                  riskDescription: {
                    type: 'string',
                    description: 'Description of the risk factor.',
                  },
                  riskKey: {
                    type: 'string',
                    description:
                      'Code or identifier of the risk factor category as defined by the data source.',
                  },
                  riskName: {
                    type: 'string',
                    description: 'Name of the risk factor.',
                  },
                  score: {
                    type: 'integer',
                    description:
                      'Score of the worksheet record risk factor. Value ranges from 0 to 3, where a value of 0 indicates a low and a value of 3 indicates severe. A value of -1 indicates no score.',
                  },
                  scoreRemark: {
                    type: 'string',
                    description: 'Remarks and/or comments regarding the worksheet score.',
                  },
                },
              },
            },
            dispositionComments: {
              type: 'string',
              description: 'Comment(s) explaining why the worksheet record has been approved or disapproved.',
            },
            extRecordId: {
              type: 'string',
              description:
                'Optional identifier of the worksheet record provided by the data source. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.',
            },
            itinerary: {
              type: 'string',
              description: 'Sequential order of itinerary locations associated for the mission.',
            },
            lastUpdatedAt: {
              type: 'string',
              description:
                'Timestamp the worksheet record was updated, in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            remarks: {
              type: 'string',
              description: 'Remarks and/or comments regarding the worksheet record.',
            },
            severityLevel: {
              type: 'integer',
              description:
                'Numeric assignment for the worksheet record severity. 0 - LOW; 1 - MODERATE; 2 - HIGH; 3 - SEVERE.',
            },
            submissionDate: {
              type: 'string',
              description:
                'Timestamp the worksheet record was submitted, in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            tierNumber: {
              type: 'integer',
              description:
                'Tier number which the mission is being scored as determined by the data source. For example, Tier 1 may indicate mission planners, Tier 2 may indicate operations personnel, Tier 3 may indicate squadron leadership, and Tier 4 may indicate the aircrew.',
            },
            totalScore: {
              type: 'integer',
              description:
                'Total score for the worksheet record as defined by the data source. Larger values indicate a higher risk level. For example, values between 0-10 may indicate a low risk level, where values greater then 40 indicate a severe risk level.',
            },
            userId: {
              type: 'string',
              description: 'User identifier associated to the worksheet record.',
            },
          },
          required: ['missionDate'],
        },
      },
      extMissionId: {
        type: 'string',
        description:
          'Optional mission ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.',
      },
      missionNumber: {
        type: 'string',
        description: 'The mission number of the mission associated with this record.',
      },
      orgId: {
        type: 'string',
        description: 'Identifier for the organization which this risk management record is evaluated.',
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
      unitId: {
        type: 'string',
        description: 'Identifier for the unit which this risk management record is evaluated.',
      },
    },
    required: ['classificationMarking', 'dataMode', 'idMission', 'source'],
  },
  annotations: {},
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  const response = await client.aviationRiskManagement.create(body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
