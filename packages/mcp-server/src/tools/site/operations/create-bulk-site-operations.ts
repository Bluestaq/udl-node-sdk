// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'site.operations',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/siteoperations/createBulk',
};

export const tool: Tool = {
  name: 'create_bulk_site_operations',
  description:
    "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nService operation intended for initial integration only, to take a list of siteoperations records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.",
  inputSchema: {
    type: 'object',
    properties: {
      body: {
        type: 'array',
        items: {
          type: 'object',
          description:
            'Site operating details concerning the hours of operation, operational limitations, site navigation, and waivers associated with the Site.',
          properties: {
            classificationMarking: {
              type: 'string',
              description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
            },
            dataMode: {
              type: 'string',
              description:
                'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
              enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
            },
            idSite: {
              type: 'string',
              description: 'The ID of the parent site.',
            },
            source: {
              type: 'string',
              description: 'Source of the data.',
            },
            id: {
              type: 'string',
              description: 'Unique identifier of the record, auto-generated by the system.',
            },
            createdAt: {
              type: 'string',
              description: 'Time the row was created in the database, auto-populated by the system.',
              format: 'date-time',
            },
            createdBy: {
              type: 'string',
              description:
                'Application user who created the row in the database, auto-populated by the system.',
            },
            dailyOperations: {
              type: 'array',
              description:
                'Collection providing hours of operation and other information specific to a day of the week.',
              items: {
                type: 'object',
                description:
                  'Collection providing hours of operation and other information specific to a day of the week.',
                properties: {
                  dayOfWeek: {
                    type: 'string',
                    description: 'The day of the week to which this operational information pertains.',
                    enum: ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY'],
                  },
                  operatingHours: {
                    type: 'array',
                    description:
                      'A collection containing the operational start and stop times scheduled for the day of the week specified.',
                    items: {
                      type: 'object',
                      description:
                        'A collection containing the operational start and stop times scheduled for the day of the week specified.',
                      properties: {
                        opStartTime: {
                          type: 'string',
                          description:
                            'The Zulu (UTC) operational start time, expressed in ISO 8601 format as HH:MM.',
                        },
                        opStopTime: {
                          type: 'string',
                          description:
                            'The Zulu (UTC) operational stop time, expressed in ISO 8601 format as HH:MM.',
                        },
                      },
                      required: [],
                    },
                  },
                  operationName: {
                    type: 'string',
                    description: 'The name or type of operation to which this information pertains.',
                  },
                  ophrsLastChangedBy: {
                    type: 'string',
                    description:
                      'The name of the person who made the most recent change to this DailyOperation data.',
                  },
                  ophrsLastChangedDate: {
                    type: 'string',
                    description:
                      'The datetime of the most recent change made to this DailyOperation data, in ISO 8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                },
                required: [],
              },
            },
            dopsLastChangedBy: {
              type: 'string',
              description:
                'The name of the person who made the most recent change to data in the DailyOperations collection.',
            },
            dopsLastChangedDate: {
              type: 'string',
              description:
                'The datetime of the most recent change made to data in the DailyOperations collection, in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            dopsLastChangedReason: {
              type: 'string',
              description: 'The reason for the most recent change to data in the dailyOperations collection.',
            },
            idLaunchSite: {
              type: 'string',
              description: 'Id of the associated launchSite entity.',
            },
            maximumOnGrounds: {
              type: 'array',
              description:
                'Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.',
              items: {
                type: 'object',
                description:
                  'Collection providing maximum on ground (MOG) information for specific aircraft at the site associated with this SiteOperations record.',
                properties: {
                  aircraftMDS: {
                    type: 'string',
                    description:
                      'The Model Design Series (MDS) designation of the aircraft to which this maximum on ground (MOG) data pertains.',
                  },
                  contingencyMOG: {
                    type: 'integer',
                    description:
                      'Maximum on ground (MOG) number of contingent aircraft based on spacing and manpower, for the aircraft type specified.',
                  },
                  mogLastChangedBy: {
                    type: 'string',
                    description:
                      'The name of the person who made the most recent change to this maximum on ground data.',
                  },
                  mogLastChangedDate: {
                    type: 'string',
                    description:
                      'The datetime of the most recent change made to this maximum on ground data, in ISO 8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  wideParkingMOG: {
                    type: 'integer',
                    description:
                      'Maximum on ground (MOG) number of parking wide-body aircraft based on spacing and manpower, for the aircraft type specified.',
                  },
                  wideWorkingMOG: {
                    type: 'integer',
                    description:
                      'Maximum on ground (MOG) number of working wide-body aircraft based on spacing and manpower, for the aircraft type specified.',
                  },
                },
                required: [],
              },
            },
            mogsLastChangedBy: {
              type: 'string',
              description:
                'The name of the person who made the most recent change to data in the MaximumOnGrounds collection.',
            },
            mogsLastChangedDate: {
              type: 'string',
              description:
                'The datetime of the most recent change made to data in the MaximumOnGrounds collection, in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            mogsLastChangedReason: {
              type: 'string',
              description:
                'The reason for the most recent change to data in the MaximumOnGrounds collection.',
            },
            operationalDeviations: {
              type: 'array',
              description:
                'Collection providing relevant information in the event of deviations/exceptions to normal operations.',
              items: {
                type: 'object',
                description:
                  'Collection providing relevant information in the event of deviations/exceptions to normal operations.',
                properties: {
                  affectedAircraftMDS: {
                    type: 'string',
                    description:
                      'The Model Design Series (MDS) designation of the aircraft affected by this operational deviation.',
                  },
                  affectedMOG: {
                    type: 'integer',
                    description:
                      'The maximum on ground (MOG) number for aircraft affected by this operational deviation.',
                  },
                  aircraftOnGroundTime: {
                    type: 'string',
                    description: 'On ground time for aircraft affected by this operational deviation.',
                  },
                  crewRestTime: {
                    type: 'string',
                    description: 'Rest time for crew affected by this operational deviation.',
                  },
                  odLastChangedBy: {
                    type: 'string',
                    description:
                      'The name of the person who made the most recent change to this OperationalDeviation data.',
                  },
                  odLastChangedDate: {
                    type: 'string',
                    description:
                      'The datetime of the most recent change made to this OperationalDeviation data, in ISO 8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  odRemark: {
                    type: 'string',
                    description: 'Text remark regarding this operational deviation.',
                  },
                },
                required: [],
              },
            },
            operationalPlannings: {
              type: 'array',
              description: 'Collection of planning information associated with this SiteOperations record.',
              items: {
                type: 'object',
                description: 'Collection of planning information associated with this SiteOperations record.',
                properties: {
                  opEndDate: {
                    type: 'string',
                    description:
                      'The end date of this operational planning, in ISO8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  opLastChangedBy: {
                    type: 'string',
                    description:
                      'The name of the person who made the most recent change made to this OperationalPlanning data.',
                  },
                  opLastChangedDate: {
                    type: 'string',
                    description:
                      'The datetime of the most recent change made to this OperationalPlanning data, in ISO8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  opRemark: {
                    type: 'string',
                    description: 'Remark text regarding this operation planning.',
                  },
                  opSource: {
                    type: 'string',
                    description:
                      'The person, unit, organization, etc. responsible for this operation planning.',
                  },
                  opStartDate: {
                    type: 'string',
                    description:
                      'The start date of this operational planning, in ISO8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  opStatus: {
                    type: 'string',
                    description: 'The status of this operational planning.',
                  },
                },
                required: [],
              },
            },
            origin: {
              type: 'string',
              description:
                'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
            },
            origNetwork: {
              type: 'string',
              description:
                'The originating source network on which this record was created, auto-populated by the system.',
            },
            pathways: {
              type: 'array',
              description:
                'Collection detailing operational pathways at the Site associated with this SiteOperations record.',
              items: {
                type: 'object',
                description:
                  'Collection detailing operational pathways at the Site associated with this SiteOperations record.',
                properties: {
                  pwDefinition: {
                    type: 'string',
                    description: 'Text defining this pathway from its constituent parts.',
                  },
                  pwLastChangedBy: {
                    type: 'string',
                    description:
                      'The name of the person who made the most recent change to this Pathway data.',
                  },
                  pwLastChangedDate: {
                    type: 'string',
                    description:
                      'The datetime of the most recent change made to this Pathway data, in ISO 8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  pwType: {
                    type: 'string',
                    description: 'The type of paths that constitute this pathway.',
                  },
                  pwUsage: {
                    type: 'string',
                    description: 'The intended use of this pathway.',
                  },
                },
                required: [],
              },
            },
            sourceDL: {
              type: 'string',
              description:
                'The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.',
            },
            updatedAt: {
              type: 'string',
              description: 'Time the row was updated in the database, auto-populated by the system.',
              format: 'date-time',
            },
            updatedBy: {
              type: 'string',
              description:
                'Application user who updated the row in the database, auto-populated by the system.',
            },
            waivers: {
              type: 'array',
              description:
                'Collection documenting operational waivers that have been issued for the Site associated with this record.',
              items: {
                type: 'object',
                description:
                  'Collection documenting operational waivers that have been issued for the Site associated with this record.',
                properties: {
                  expirationDate: {
                    type: 'string',
                    description:
                      'The expiration date of this waiver, in ISO8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  hasExpired: {
                    type: 'boolean',
                    description: 'Boolean indicating whether or not this waiver has expired.',
                  },
                  issueDate: {
                    type: 'string',
                    description:
                      'The issue date of this waiver, in ISO8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                  issuerName: {
                    type: 'string',
                    description: 'The name of the person who issued this waiver.',
                  },
                  requesterName: {
                    type: 'string',
                    description: 'The name of the person requesting this waiver.',
                  },
                  requesterPhoneNumber: {
                    type: 'string',
                    description: 'The phone number of the person requesting this waiver.',
                  },
                  requestingUnit: {
                    type: 'string',
                    description: 'The unit requesting this waiver.',
                  },
                  waiverAppliesTo: {
                    type: 'string',
                    description: 'Description of the entities to which this waiver applies.',
                  },
                  waiverDescription: {
                    type: 'string',
                    description: 'The description of this waiver.',
                  },
                  waiverLastChangedBy: {
                    type: 'string',
                    description:
                      'The name of the person who made the most recent change to this Waiver data.',
                  },
                  waiverLastChangedDate: {
                    type: 'string',
                    description:
                      'The datetime of the most recent change made to this waiver data, in ISO8601 UTC format with millisecond precision.',
                    format: 'date-time',
                  },
                },
                required: [],
              },
            },
          },
          required: ['classificationMarking', 'dataMode', 'idSite', 'source'],
        },
      },
    },
  },
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  const response = await client.site.operations.createBulk(body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
