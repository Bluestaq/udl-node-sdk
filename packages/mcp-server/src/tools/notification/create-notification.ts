// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'notification',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/notification',
};

export const tool: Tool = {
  name: 'create_notification',
  description:
    'Service operation to push a generic Notification/Alert JSON message into the UDL. This operation accepts a UDL-formatted Notification JSON notification/alert message. See the Notification schema for required fields such as classificationMarking, msgType, etc. Messages pushed through this service may be pulled via Secure Messaging and historical REST services. A specific role is required to perform this service operation. Please contact the UDL team for assistance.',
  inputSchema: {
    type: 'object',
    properties: {
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      msgBody: {
        type: 'string',
        description:
          "The message body content as a text string, XML, JSON, etc. If JSON is used for the msgBody, it should be 'inline' with the notification message JSON (without quotation marks or escape characters). Size of the msg body cannot be over 1MB.",
      },
      msgType: {
        type: 'string',
        description: 'Source provided message type.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
      tags: {
        type: 'array',
        description:
          'Optional array of provider/source specific tags for this data, used for implementing data owner conditional access controls to restrict access to the data.',
        items: {
          type: 'string',
        },
      },
    },
  },
};

export const handler = (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  return client.notification.create(body);
};

export default { metadata, tool, handler };
