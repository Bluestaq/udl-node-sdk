// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Metadata, asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'airfields',
  operation: 'write',
  tags: [],
  httpMethod: 'put',
  httpPath: '/udl/airfield/{id}',
};

export const tool: Tool = {
  name: 'update_airfields',
  description:
    "When using this tool, always use the `jq_filter` parameter to reduce the response size and improve performance.\n\nOnly omit if you're sure you don't need the data.\n\nService operation to update a single Airfield. A specific role is required to perform this service operation. Please contact the UDL team for assistance.\n\n# Response Schema\n```json\n{\n  type: 'object',\n  properties: {}\n}\n```",
  inputSchema: {
    type: 'object',
    properties: {
      path_id: {
        type: 'string',
      },
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      name: {
        type: 'string',
        description: 'The name of the airfield.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      type: {
        type: 'string',
        description: 'The airfield activity use type (e.g. Commercial, Airport, Heliport, Gliderport, etc.).',
      },
      body_id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      altAirfieldId: {
        type: 'string',
        description: 'Alternate Airfield identifier provided by source.',
      },
      alternativeNames: {
        type: 'array',
        description: 'Alternative names for this airfield.',
        items: {
          type: 'string',
        },
      },
      city: {
        type: 'string',
        description: 'The closest city to the location of this airfield.',
      },
      countryCode: {
        type: 'string',
        description:
          'The country code. This value is typically the ISO 3166 Alpha-2 two-character country code, however it can also represent various consortiums that do not appear in the ISO document. The code must correspond to an existing country in the UDLâ€™s country API. Call udl/country/{code} to get any associated FIPS code, ISO Alpha-3 code, or alternate code values that exist for the specified country code.',
      },
      countryName: {
        type: 'string',
        description: 'The country name where this airfield is located.',
      },
      dstInfo: {
        type: 'string',
        description:
          'Information regarding daylight saving time as is relevant to the location and operation of this airfield.',
      },
      elevFt: {
        type: 'number',
        description:
          'Elevation of the airfield above mean sea level, in feet.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.',
      },
      elevM: {
        type: 'number',
        description:
          'Elevation of the airfield above mean sea level, in meters.\nNote: The corresponding equivalent field is not converted by the UDL and may or may not be supplied by the provider. The provider/consumer is responsible for all unit conversions.',
      },
      faa: {
        type: 'string',
        description: 'The Federal Aviation Administration (FAA) location identifier of this airfield.',
      },
      geoloc: {
        type: 'string',
        description: 'Air Force geographic location code of the airfield.',
      },
      gmtOffset: {
        type: 'string',
        description:
          'Time difference between the location of the airfield and the Greenwich Mean Time (GMT), expressed as +/-HH:MM. Time zones east of Greenwich have positive offsets and time zones west of Greenwich are negative.',
      },
      hostNatCode: {
        type: 'string',
        description: 'The host nation code of this airfield, used for non-DoD/FAA locations.',
      },
      iata: {
        type: 'string',
        description: 'The International Aviation Transport Association (IATA) code of the airfield.',
      },
      icao: {
        type: 'string',
        description: 'The International Civil Aviation Organization (ICAO) code of the airfield.',
      },
      idSite: {
        type: 'string',
        description: 'The ID of the parent site.',
      },
      infoURL: {
        type: 'string',
        description: 'The URL link to information about airfield.',
      },
      lat: {
        type: 'number',
        description:
          'WGS84 latitude of the location, in degrees. -90 to 90 degrees (negative values south of equator).',
      },
      lon: {
        type: 'number',
        description:
          'WGS84 longitude of the location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).',
      },
      magDec: {
        type: 'number',
        description:
          "The magnetic declination/variation of the airfield's location from true north, in degrees.  Positive values east of true north and negative values west of true north.",
      },
      maxRunwayLength: {
        type: 'integer',
        description: 'The length of the longest runway at this airfield in feet.',
      },
      miscCodes: {
        type: 'string',
        description:
          'Applicable miscellaneous codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.',
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
      regionalAuthority: {
        type: 'string',
        description: 'The regional authority of the airfield.',
      },
      regionName: {
        type: 'string',
        description: 'Region where the airfield resides.',
      },
      runways: {
        type: 'integer',
        description: 'The number of runways at the site.',
      },
      secondaryICAO: {
        type: 'string',
        description:
          'The secondary ICAO code for this airfield. Some airfields have two associated ICAO codes, this can occur in cases when a single airfield supports both military and civilian operations.',
      },
      state: {
        type: 'string',
        description: "State or province of the airfield's location.",
      },
      stateProvinceCode: {
        type: 'string',
        description:
          'The code for the state or province in which this airfield is located. Intended as, but not constrained to, FIPS 10-4 region code designations.',
      },
      suitabilityCodeDescs: {
        type: 'array',
        description:
          'Array of descriptions for given suitability codes. The index of the description corresponds to the position of the letter code in the string provided in the suitabilityCodes field.',
        items: {
          type: 'string',
        },
      },
      suitabilityCodes: {
        type: 'string',
        description:
          'Associated suitability codes according to the Airfield Suitability and Restrictions Report (ASRR) for this airfield.',
      },
      wacINNR: {
        type: 'string',
        description: "The airfield's World Area Code installation number (WAC-INNR).",
      },
      zarId: {
        type: 'string',
        description: 'Air Mobility Command (AMC) Zone availability Report identifier.',
      },
      jq_filter: {
        type: 'string',
        title: 'jq Filter',
        description:
          'A jq filter to apply to the response to include certain fields. Consult the output schema in the tool description to see the fields that are available.\n\nFor example: to include only the `name` field in every object of a results array, you can provide ".results[].name".\n\nFor more information, see the [jq documentation](https://jqlang.org/manual/).',
      },
    },
    required: ['path_id', 'classificationMarking', 'dataMode', 'name', 'source', 'type'],
  },
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const { id, ...body } = args as any;
  const response = await client.airfields.update(id, body).asResponse();
  return asTextContentResult(await response.text());
};

export default { metadata, tool, handler };
