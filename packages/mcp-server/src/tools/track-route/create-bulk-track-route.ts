// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'track_route',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/trackroute/createBulk',
};

export const tool: Tool = {
  name: 'create_bulk_track_route',
  description:
    'Service operation intended for initial integration only, to take a list of trackroute records as a POST body and ingest into the database. This operation is not intended to be used for automated feeds into UDL. Data providers should contact the UDL team for specific role assignments and for instructions on setting up a permanent feed through an alternate mechanism.',
  inputSchema: {
    type: 'object',
    properties: {
      body: {
        type: 'array',
        items: {
          type: 'object',
          description:
            'A track route is a prescribed route for performing training events or operations such as air refueling.',
          properties: {
            classificationMarking: {
              type: 'string',
              description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
            },
            dataMode: {
              type: 'string',
              description:
                'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
              enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
            },
            lastUpdateDate: {
              type: 'string',
              description:
                'The last updated date of the track route in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            source: {
              type: 'string',
              description: 'Source of the data.',
            },
            type: {
              type: 'string',
              description: 'The track route type represented by this record (ex. AIR REFUELING).',
            },
            id: {
              type: 'string',
              description: 'Unique identifier of the record, auto-generated by the system.',
            },
            altitudeBlocks: {
              type: 'array',
              description: 'Minimum and maximum altitude bounds for the track.',
              items: {
                type: 'object',
                description: 'Minimum and maximum altitude bounds for the track.',
                properties: {
                  altitudeSequenceId: {
                    type: 'string',
                    description: 'Sequencing field for the altitude block.',
                  },
                  lowerAltitude: {
                    type: 'number',
                    description:
                      'Lowest altitude of the track route altitude block above mean sea level in feet.',
                  },
                  upperAltitude: {
                    type: 'number',
                    description:
                      'Highest altitude of the track route altitude block above mean sea level in feet.',
                  },
                },
                required: [],
              },
            },
            apnSetting: {
              type: 'string',
              description: 'The APN radar code sent and received by the aircraft for identification.',
            },
            apxBeaconCode: {
              type: 'string',
              description: 'The APX radar code sent and received by the aircraft for identification.',
            },
            artccMessage: {
              type: 'string',
              description: 'Air Refueling Track Control Center message.',
            },
            createdAt: {
              type: 'string',
              description: 'Time the row was created in the database, auto-populated by the system.',
              format: 'date-time',
            },
            createdBy: {
              type: 'string',
              description:
                'Application user who created the row in the database, auto-populated by the system.',
            },
            creatingOrg: {
              type: 'string',
              description: 'The name of the creating organization of the track route.',
            },
            direction: {
              type: 'string',
              description: 'The principal compass direction (cardinal or ordinal) of the track route.',
            },
            effectiveDate: {
              type: 'string',
              description:
                'The date which the DAFIF track was last updated/validated in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            externalId: {
              type: 'string',
              description:
                'Optional air refueling track ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.',
            },
            lastUsedDate: {
              type: 'string',
              description:
                'Used to show last time the track route was added to an itinerary in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            locationTrackId: {
              type: 'string',
              description: 'Track location ID.',
            },
            origin: {
              type: 'string',
              description:
                'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
            },
            origNetwork: {
              type: 'string',
              description:
                'The originating source network on which this record was created, auto-populated by the system.',
            },
            poc: {
              type: 'array',
              description: 'Point of contacts for scheduling or modifying the route.',
              items: {
                type: 'object',
                description: 'Point of contacts for scheduling or modifying the route.',
                properties: {
                  office: {
                    type: 'string',
                    description: 'Office name for which the contact belongs.',
                  },
                  phone: {
                    type: 'string',
                    description: 'Phone number of the contact.',
                  },
                  pocName: {
                    type: 'string',
                    description: 'The name of the contact.',
                  },
                  pocOrg: {
                    type: 'string',
                    description: 'Organization name for which the contact belongs.',
                  },
                  pocSequenceId: {
                    type: 'integer',
                    description: 'Sequencing field for point of contact.',
                  },
                  pocTypeName: {
                    type: 'string',
                    description:
                      "A code or name that represents the contact's role in association to the track route (ex. Originator, Scheduler, Maintainer, etc.).",
                  },
                  rank: {
                    type: 'string',
                    description: 'The rank of contact.',
                  },
                  remark: {
                    type: 'string',
                    description: 'Text of the remark.',
                  },
                  username: {
                    type: 'string',
                    description: 'The username of the contact.',
                  },
                },
                required: [],
              },
            },
            priFreq: {
              type: 'number',
              description: 'The primary UHF radio frequency used for the track route in megahertz.',
            },
            receiverTankerCHCode: {
              type: 'string',
              description: 'The receiver tanker channel identifer for air refueling tracks.',
            },
            regionCode: {
              type: 'string',
              description: 'Region code indicating where the track resides as determined by the data source.',
            },
            regionName: {
              type: 'string',
              description: 'Region where the track resides.',
            },
            reviewDate: {
              type: 'string',
              description:
                'Date the track needs to be reviewed for accuracy or deletion in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            routePoints: {
              type: 'array',
              description: 'Points identified within the route.',
              items: {
                type: 'object',
                description: 'Points identified within the route.',
                properties: {
                  altCountryCode: {
                    type: 'string',
                    description:
                      'Specifies an alternate country code if the data provider code is not part of an official NAVAID Country Code standard such as ISO-3166 or FIPS. This field will be set to the value provided by the source and should be used for all Queries specifying a Country Code.',
                  },
                  countryCode: {
                    type: 'string',
                    description:
                      'The DoD Standard Country Code designator for the country where the route point resides. This field should be set to "OTHR" if the source value does not match a UDL country code value (ISO-3166-ALPHA-2).',
                  },
                  dafifPt: {
                    type: 'boolean',
                    description:
                      'Flag indicating this is a Digital Aeronautical Flight Information File (DAFIF) point.',
                  },
                  magDec: {
                    type: 'number',
                    description:
                      'The magnetic declination/variation of the route point location from true north, in degrees. Positive values east of true north and negative values west of true north.',
                  },
                  navaid: {
                    type: 'string',
                    description: 'Navigational Aid (NAVAID) identification code.',
                  },
                  navaidLength: {
                    type: 'number',
                    description:
                      'The length of the course from the Navigational Aid (NAVAID) in nautical miles.',
                  },
                  navaidType: {
                    type: 'string',
                    description: 'The NAVAID type of this route point (ex. VOR, VORTAC, TACAN, etc.).',
                  },
                  ptLat: {
                    type: 'number',
                    description:
                      'WGS84 latitude of the point location, in degrees. -90 to 90 degrees (negative values south of equator).',
                  },
                  ptLon: {
                    type: 'number',
                    description:
                      'WGS84 longitude of the point location, in degrees. -180 to 180 degrees (negative values west of Prime Meridian).',
                  },
                  ptSequenceId: {
                    type: 'integer',
                    description:
                      'Sequencing field for the track route. This is the identifier representing the sequence of waypoints associated to the track route.',
                  },
                  ptTypeCode: {
                    type: 'string',
                    description:
                      'Code representation of the point within the track route (ex. EP, EX, CP, IP, etc.).',
                  },
                  ptTypeName: {
                    type: 'string',
                    description:
                      'The name that represents the point within the track route (ex. ENTRY POINT, EXIT POINT, CONTROL POINT, INITIAL POINT, etc.).',
                  },
                  waypointName: {
                    type: 'string',
                    description: 'Name of a waypoint which identifies the location of the point.',
                  },
                },
                required: [],
              },
            },
            schedulerOrgName: {
              type: 'string',
              description: 'Point of contact for the air refueling track route scheduler.',
            },
            schedulerOrgUnit: {
              type: 'string',
              description: 'The unit responsible for scheduling the track route.',
            },
            secFreq: {
              type: 'number',
              description: 'The secondary UHF radio frequency used for the track route in megahertz.',
            },
            shortName: {
              type: 'string',
              description: 'Abbreviated name of the track.',
            },
            sic: {
              type: 'string',
              description: 'Standard Indicator Code of the air refueling track.',
            },
            sourceDL: {
              type: 'string',
              description:
                'The source data library from which this record was received. This could be a remote or tactical UDL or another data library. If null, the record should be assumed to have originated from the primary Enterprise UDL.',
            },
            trackId: {
              type: 'string',
              description: 'Identifier of the track.',
            },
            trackName: {
              type: 'string',
              description: 'Name of the track.',
            },
            typeCode: {
              type: 'string',
              description:
                'Type of process used by AMC to schedule an air refueling event. Possible values are A (Matched Long Range), F (Matched AMC Short Notice), N (Unmatched Theater Operation Short Notice (Theater Assets)), R, Unmatched Long Range, S (Soft Air Refueling), T (Matched Theater Operation Short Notice (Theater Assets)), V (Unmatched AMC Short Notice), X (Unmatched Theater Operation Short Notice (AMC Assets)), Y (Matched Theater Operation Short Notice (AMC Assets)), Z (Other Air Refueling).',
            },
            updatedAt: {
              type: 'string',
              description: 'Time the row was updated in the database, auto-populated by the system.',
              format: 'date-time',
            },
            updatedBy: {
              type: 'string',
              description:
                'Application user who updated the row in the database, auto-populated by the system.',
            },
          },
          required: ['classificationMarking', 'dataMode', 'lastUpdateDate', 'source', 'type'],
        },
      },
    },
  },
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  await client.trackRoute.createBulk(body);
  return asTextContentResult('Successful tool call');
};

export default { metadata, tool, handler };
