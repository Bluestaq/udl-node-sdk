// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'sortie_ppr',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/sortieppr',
};

export const tool: Tool = {
  name: 'create_sortie_ppr',
  description:
    'Service operation to take a single sortieppr record as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.',
  inputSchema: {
    type: 'object',
    properties: {
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      idSortie: {
        type: 'string',
        description:
          'Unique identifier of the Aircraft Sortie associated with this prior permission required (PPR) record.',
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      endTime: {
        type: 'string',
        description:
          'Time the prior permission required (PPR) valid window ends, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      externalId: {
        type: 'string',
        description:
          'Optional ID from external systems. This field has no meaning within UDL and is provided as a convenience for systems that require tracking of an internal system generated ID.',
      },
      grantor: {
        type: 'string',
        description: 'Identifier of the prior permission required (PPR) grantor.',
      },
      number: {
        type: 'string',
        description: 'The prior permission required (PPR) number issued by the airfield for a sortie.',
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
      remarks: {
        type: 'string',
        description: 'Remarks concerning the prior permission required (PPR) for a sortie.',
      },
      requestor: {
        type: 'string',
        description: 'The username of the prior permission required (PPR) requestor.',
      },
      startTime: {
        type: 'string',
        description:
          'Time the prior permission required (PPR) valid window begins, in ISO 8601 UTC format with millisecond precision.',
        format: 'date-time',
      },
      type: {
        type: 'string',
        description:
          'Type of prior permission required (PPR) for a sortie (M - Military or C - Civilian). Enum: [M, C].',
        enum: ['M', 'C'],
      },
    },
  },
};

export const handler = (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  return client.sortiePpr.create(body);
};

export default { metadata, tool, handler };
