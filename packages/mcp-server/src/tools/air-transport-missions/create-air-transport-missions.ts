// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { asTextContentResult } from 'unified-data-library-mcp/tools/types';

import { Tool } from '@modelcontextprotocol/sdk/types.js';
import type { Metadata } from '../';
import Unifieddatalibrary from 'unified-data-library';

export const metadata: Metadata = {
  resource: 'air_transport_missions',
  operation: 'write',
  tags: [],
  httpMethod: 'post',
  httpPath: '/udl/airtransportmission',
};

export const tool: Tool = {
  name: 'create_air_transport_missions',
  description:
    'Service operation to take a single AirTransportMission object as a POST body and ingest into the database. A specific role is required to perform this service operation. Please contact the UDL team for assistance.',
  inputSchema: {
    type: 'object',
    properties: {
      classificationMarking: {
        type: 'string',
        description: 'Classification marking of the data in IC/CAPCO Portion-marked format.',
      },
      dataMode: {
        type: 'string',
        description:
          'Indicator of whether the data is EXERCISE, REAL, SIMULATED, or TEST data:\n\nEXERCISE:&nbsp;Data pertaining to a government or military exercise. The data may include both real and simulated data.\n\nREAL:&nbsp;Data collected or produced that pertains to real-world objects, events, and analysis.\n\nSIMULATED:&nbsp;Synthetic data generated by a model to mimic real-world datasets.\n\nTEST:&nbsp;Specific datasets used to evaluate compliance with specifications and requirements, and for validating technical, functional, and performance characteristics.',
        enum: ['REAL', 'TEST', 'SIMULATED', 'EXERCISE'],
      },
      source: {
        type: 'string',
        description: 'Source of the data.',
      },
      id: {
        type: 'string',
        description: 'Unique identifier of the record, auto-generated by the system.',
      },
      abp: {
        type: 'string',
        description: 'The Air Battle Plan used to coordinate and integrate air assets for this mission.',
      },
      alias: {
        type: 'string',
        description: 'Mission alias.',
      },
      allocatedUnit: {
        type: 'string',
        description: 'The unit the mission is allocated to.',
      },
      amcMissionId: {
        type: 'string',
        description:
          'Air Mobility Command (AMC) mission identifier according to Mobility Air Forces (MAF) Encode/Decode procedures.',
      },
      apacsId: {
        type: 'string',
        description:
          'The Aircraft and Personnel Automated Clearance System (APACS) system identifier used to process and approve clearance requests.',
      },
      atoCallSign: {
        type: 'string',
        description: 'The call sign assigned to this mission according to the Air Tasking Order (ATO).',
      },
      atoMissionId: {
        type: 'string',
        description: 'The mission number according to the Air Tasking Order (ATO).',
      },
      callSign: {
        type: 'string',
        description: 'The call sign for this mission.',
      },
      cw: {
        type: 'boolean',
        description: 'Flag indicating this is a close watch mission.',
      },
      dipWorksheetName: {
        type: 'string',
        description:
          'Identifier of the Diplomatic Clearance Worksheet used to coordinate aircraft clearance requests.',
      },
      firstPickUp: {
        type: 'string',
        description: 'The International Civil Aviation Organization (ICAO) site code of first cargo pick up.',
      },
      gdssMissionId: {
        type: 'string',
        description: 'Global Decision Support System (GDSS) mission unique identifier.',
      },
      hazMat: {
        type: 'array',
        description:
          'Collection of Hazardous Material information planned to be associated with this Air Transport Mission.',
        items: {
          type: 'object',
          description:
            'Collection of Hazardous Material information planned to be associated with this Air Transport Mission.',
          properties: {
            applicableNotes: {
              type: 'string',
              description:
                'Comma delimited list of Note IDs for Item Class Segregation groups, specific to GDSS systems.',
            },
            cgc: {
              type: 'string',
              description:
                'Compatibility group code used to specify the controls for the transportation and storage of hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.',
            },
            cgn: {
              type: 'string',
              description:
                'Comma delimited list of Note IDs for compatibility groups, specific to GDSS systems.',
            },
            classDiv: {
              type: 'number',
              description:
                'Class and division of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.',
            },
            extHazMatId: {
              type: 'string',
              description: 'The hazMat identifier provided by the originating source.',
            },
            itemName: {
              type: 'string',
              description:
                'United Nations proper shipping name of the hazardous material according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.',
            },
            netExpWt: {
              type: 'number',
              description: 'Net explosive weight of the hazardous material, in kilograms.',
            },
            offICAO: {
              type: 'string',
              description:
                'The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is unloaded.',
            },
            offItin: {
              type: 'integer',
              description: 'Itinerary number that identifies where the hazardous material is unloaded.',
            },
            onICAO: {
              type: 'string',
              description:
                'The International Civil Aviation Organization (ICAO) code of the site where the hazardous material is loaded.',
            },
            onItin: {
              type: 'integer',
              description: 'Itinerary number that identifies where the hazardous material is loaded.',
            },
            pieces: {
              type: 'integer',
              description: 'Number of pieces of hazardous cargo.',
            },
            planned: {
              type: 'string',
              description:
                'Flag indicating if hazardous material is associated with this air transport mission. Possible values are P (planned to be associated with the mission) or A (actually associated with the mission). Enum: [P, A].',
            },
            unNum: {
              type: 'string',
              description:
                'United Nations number or North America number that identifies hazardous materials according to the Hazardous Materials Regulations issued by the U.S. Department of Transportation.',
            },
            weight: {
              type: 'number',
              description: 'Total weight of hazardous cargo, including non-explosive parts, in kilograms.',
            },
          },
          required: [],
        },
      },
      jcsPriority: {
        type: 'string',
        description: 'Highest Joint Chiefs of Staff priority of this mission.',
      },
      lastDropOff: {
        type: 'string',
        description: 'The International Civil Aviation Organization (ICAO) site code of last cargo drop off.',
      },
      loadCategoryType: {
        type: 'string',
        description: 'Load type of this mission (e.g. CARGO, MIXED, PASSENGER).',
      },
      m1: {
        type: 'string',
        description: 'Mode-1 interrogation response (mission code), indicating mission or aircraft type.',
      },
      m2: {
        type: 'string',
        description: 'Mode-2 interrogation response (military identification code).',
      },
      m3a: {
        type: 'string',
        description:
          'Mode-3/A interrogation response (aircraft identification), provides a 4-digit octal identification code for the aircraft, assigned by the air traffic controller. Mode-3/A is shared military/civilian use.',
      },
      naf: {
        type: 'string',
        description: 'Numbered Air Force (NAF) organization that owns the mission.',
      },
      nextAMCMissionId: {
        type: 'string',
        description:
          'Air Mobility Command (AMC) mission identifier of the next air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.',
      },
      nextMissionId: {
        type: 'string',
        description:
          'Unique identifier of the next mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.',
      },
      node: {
        type: 'string',
        description:
          'Designates the location responsible for mission transportation, logistics, or distribution activities for an Area of Responsibility (AOR) within USTRANSCOM.',
      },
      objective: {
        type: 'string',
        description: "A description of this mission's objective.",
      },
      operation: {
        type: 'string',
        description: 'The name of the operation that this mission supports.',
      },
      origin: {
        type: 'string',
        description:
          'Originating system or organization which produced the data, if different from the source. The origin may be different than the source if the source was a mediating system which forwarded the data on behalf of the origin system. If null, the source may be assumed to be the origin.',
      },
      origMissionId: {
        type: 'string',
        description: 'The mission identifier provided by the originating source.',
      },
      prevAMCMissionId: {
        type: 'string',
        description:
          'Air Mobility Command (AMC) mission identifier of the previous air transport mission. Provides a method for AMC to link air transport missions together chronologically for tasking and planning purposes.',
      },
      prevMissionId: {
        type: 'string',
        description:
          'Unique identifier of the previous air transport mission provided by the originating source. Provides a method for the data provider to link air transport missions together chronologically for tasking and planning purposes.',
      },
      purpose: {
        type: 'string',
        description:
          "A description of this mission's purpose (e.g. why this mission needs to happen, what is the mission supporting, etc.).",
      },
      remarks: {
        type: 'array',
        description:
          'Information related to the planning, load, status, and deployment or dispatch of one aircraft to carry out a mission.',
        items: {
          type: 'object',
          description: 'Collection of Remarks associated with this Air Transport Mission.',
          properties: {
            date: {
              type: 'string',
              description:
                'Date the remark was published, in ISO 8601 UTC format, with millisecond precision.',
              format: 'date-time',
            },
            gdssRemarkId: {
              type: 'string',
              description: 'Global Decision Support System (GDSS) remark identifier.',
            },
            itineraryNum: {
              type: 'integer',
              description:
                'If the remark is sortie specific, this is the number of the sortie it applies to.',
            },
            text: {
              type: 'string',
              description: 'Text of the remark.',
            },
            type: {
              type: 'string',
              description: 'Remark type.',
            },
            user: {
              type: 'string',
              description: 'User who published the remark.',
            },
          },
          required: [],
        },
      },
      requirements: {
        type: 'array',
        description: 'Collection of Requirements planned to be associated with this Air Transport Mission.',
        items: {
          type: 'object',
          description: 'Collection of Requirements planned to be associated with this Air Transport Mission.',
          properties: {
            bulkWeight: {
              type: 'number',
              description: 'Total weight of the bulk cargo, in kilograms.',
            },
            ead: {
              type: 'string',
              description:
                'Earliest available date the cargo can be picked up, in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            gdssReqId: {
              type: 'string',
              description: 'Global Decision Support System (GDSS) mission requirement identifier.',
            },
            lad: {
              type: 'string',
              description:
                'Latest available date the cargo may be delivered, in ISO 8601 UTC format with millisecond precision.',
              format: 'date-time',
            },
            numAmbulatory: {
              type: 'integer',
              description: 'Number of ambulatory patients tasked for the mission.',
            },
            numAttendant: {
              type: 'integer',
              description: 'Number of attendants tasked for the mission.',
            },
            numLitter: {
              type: 'integer',
              description: 'Number of litter patients tasked for the mission.',
            },
            numPax: {
              type: 'integer',
              description: 'Number of passengers associated with the mission.',
            },
            offloadId: {
              type: 'integer',
              description: 'Identifier of the offload itinerary location.',
            },
            offloadLOCode: {
              type: 'string',
              description: 'Offload location code.',
            },
            onloadId: {
              type: 'integer',
              description: 'Identifier of the onload itinerary location.',
            },
            onloadLOCode: {
              type: 'string',
              description: 'Onload location code.',
            },
            oplan: {
              type: 'string',
              description:
                'Identification number of the Operation Plan (OPLAN) associated with this mission.',
            },
            outsizeWeight: {
              type: 'number',
              description: 'Total weight of the outsize cargo, in kilograms.',
            },
            oversizeWeight: {
              type: 'number',
              description: 'Total weight of the oversized cargo, in kilograms.',
            },
            projName: {
              type: 'string',
              description: 'Project name.',
            },
            transReqNum: {
              type: 'string',
              description: 'Transportation requirement number.',
            },
            uln: {
              type: 'string',
              description: 'Unit line number.',
            },
          },
          required: [],
        },
      },
      sourceSysDeviation: {
        type: 'number',
        description:
          "The number of minutes a mission is off schedule based on the source system's business rules. Positive numbers are early, negative numbers are late.",
      },
      state: {
        type: 'string',
        description: 'Current state of the mission.',
      },
      type: {
        type: 'string',
        description: 'The type of mission (e.g. SAAM, CHNL, etc.).',
      },
    },
  },
};

export const handler = async (client: Unifieddatalibrary, args: Record<string, unknown> | undefined) => {
  const body = args as any;
  await client.airTransportMissions.create(body);
  return asTextContentResult('Successful tool call');
};

export default { metadata, tool, handler };
